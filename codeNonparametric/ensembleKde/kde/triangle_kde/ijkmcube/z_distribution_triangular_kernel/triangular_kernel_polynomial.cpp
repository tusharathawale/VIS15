#include "triangular_kernel_polynomial.h"
#include <cfloat>
#include "math.h"


// Issues faced : If z value is 0 or 1, the 3 quantities, i.e., pdf, expected and second moment evaluate to NAN because of division by 0.
// Therefore, when z is 0 or 1, z is fluctuated by small amount 1.0e-5. 

// Expressions for expected and second moment contain term log(-0.1e1 + z) which gives NAN,  since -0.1e1 + z is a negative quantity (as z is in the range [0,1]) and log of negative numeber in C is
// NAN. however it can be derived log(-z) = log(z) + i*pi. These imaginary parts cancel out. Thus, every term log(-0.1e1 + z) is replaced with log(fabs(-0.1e1 + z)).

// there are total 12 basic pieces so piece number will vary from  1 to 12 (These basic pieces vary depending upon the parallelogram)

double triangular_kernel_polynomial :: PAED_integrate_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < DBL_EPSILON)	
	{
		z = 1.0e-5;
	}
	if(fabs(1-z) < DBL_EPSILON)	
	{
		z = 1 - 1.0e-5;
	}


	switch (piecenum)
	{
		
		case 1:		
				return (pow(c, 0.3e1) - pow(mu1, 0.3e1) - pow(delta1, 0.3e1) - 0.12e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.6e1 * c * mu2 * delta1 * z + 0.6e1 * c * delta2 * mu1 * z + 0.6e1 * c * delta2 * delta1 * z - 0.6e1 * mu1 * mu2 * delta1 * z - 0.6e1 * mu1 * delta2 * delta1 * z - 0.3e1 * c * c * mu1 - 0.3e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * mu1 * delta1 - 0.3e1 * delta1 * delta1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.3e1 * pow(delta1, 0.3e1) * z + 0.6e1 * c * mu1 * delta1 + 0.9e1 * mu1 * mu1 * delta1 * z + 0.9e1 * mu1 * delta1 * delta1 * z + 0.3e1 * c * c * mu1 * z + 0.3e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.6e1 * c * delta1 * delta1 * z - 0.3e1 * c * c * mu2 * z - 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.3e1 * mu1 * mu1 * delta2 * z - 0.3e1 * delta1 * delta1 * mu2 * z - 0.3e1 * delta1 * delta1 * delta2 * z - pow(z, 0.3e1) * pow(delta2, 0.3e1) - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.3e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c - 0.3e1 * delta1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * z * z * delta2 * delta2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 + 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * mu1 * z * z * delta2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c + 0.6e1 * delta1 * delta1 * z * z * mu2 - 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * mu2 + 0.6e1 * delta1 * delta1 * z * z * delta2 - 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 + 0.3e1 * delta1 * delta1 * z * z * c + 0.6e1 * mu2 * z * z * delta2 * c - 0.6e1 * mu1 * z * z * mu2 * delta2 - 0.6e1 * delta1 * z * z * mu2 * delta2 + 0.6e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 + 0.6e1 * delta1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * mu1 * z * z * delta2 - 0.6e1 * c * delta1 * z * z * mu2 - 0.6e1 * c * delta1 * z * z * delta2 + 0.12e2 * mu1 * delta1 * z * z * mu2 - 0.6e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.12e2 * mu1 * delta1 * z * z * delta2 - 0.6e1 * mu1 * delta1 * pow(z, 0.3e1) * delta2 + 0.6e1 * mu1 * delta1 * z * z * c - 0.9e1 * mu1 * mu1 * z * z * delta1 - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 - 0.3e1 * pow(mu1, 0.3e1) * z * z - 0.3e1 * pow(delta1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + pow(delta1, 0.3e1) * pow(z, 0.3e1)) * (c - mu1 - delta1 - mu2 * z + mu1 * z - delta2 * z + delta1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
				
		case 2:
		
				return  -(pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.16e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.8e1 * c * mu2 * delta1 * z + 0.6e1 * c * delta2 * mu1 * z + 0.8e1 * c * delta2 * delta1 * z - 0.8e1 * mu1 * mu2 * delta1 * z - 0.8e1 * mu1 * delta2 * delta1 * z - 0.3e1 * c * c * mu1 - 0.4e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.4e1 * mu1 * mu1 * delta1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.8e1 * c * mu1 * delta1 + 0.12e2 * mu1 * mu1 * delta1 * z + 0.3e1 * c * c * mu1 * z + 0.4e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * c * c * mu2 * z - 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.3e1 * mu1 * mu1 * delta2 * z - pow(z, 0.3e1) * pow(delta2, 0.3e1) - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.3e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c - 0.4e1 * delta1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * z * z * delta2 * delta2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 + 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * mu1 * z * z * delta2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c + 0.6e1 * mu2 * z * z * delta2 * c - 0.6e1 * mu1 * z * z * mu2 * delta2 - 0.8e1 * delta1 * z * z * mu2 * delta2 + 0.6e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 + 0.8e1 * delta1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * mu1 * z * z * delta2 - 0.8e1 * c * delta1 * z * z * mu2 - 0.8e1 * c * delta1 * z * z * delta2 + 0.16e2 * mu1 * delta1 * z * z * mu2 - 0.8e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.16e2 * mu1 * delta1 * z * z * delta2 - 0.8e1 * mu1 * delta1 * pow(z, 0.3e1) * delta2 + 0.8e1 * mu1 * delta1 * z * z * c - 0.12e2 * mu1 * mu1 * z * z * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1)) * (c - mu2 * z - mu1 + mu1 * z - delta2 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 3:
			
				return (pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.16e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.8e1 * c * mu2 * delta1 * z + 0.8e1 * c * delta2 * mu1 * z + 0.12e2 * c * delta2 * delta1 * z - 0.8e1 * mu1 * mu2 * delta1 * z - 0.12e2 * mu1 * delta2 * delta1 * z - 0.3e1 * c * c * mu1 - 0.4e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.4e1 * mu1 * mu1 * delta1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.8e1 * c * mu1 * delta1 + 0.12e2 * mu1 * mu1 * delta1 * z + 0.3e1 * c * c * mu1 * z + 0.4e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * c * c * mu2 * z - 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.4e1 * mu1 * mu1 * delta2 * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * mu1 * z * z * delta2 - 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c + 0.8e1 * mu2 * z * z * delta2 * c - 0.8e1 * mu1 * z * z * mu2 * delta2 - 0.12e2 * delta1 * z * z * mu2 * delta2 + 0.8e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * mu1 * z * z * delta2 - 0.8e1 * c * delta1 * z * z * mu2 - 0.12e2 * c * delta1 * z * z * delta2 + 0.16e2 * mu1 * delta1 * z * z * mu2 - 0.8e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * mu1 * delta1 * z * z * delta2 - 0.12e2 * mu1 * delta1 * pow(z, 0.3e1) * delta2 + 0.8e1 * mu1 * delta1 * z * z * c - 0.12e2 * mu1 * mu1 * z * z * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1)) * (c - mu1 - mu2 * z + mu1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

		case 4:
			
				return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) - pow(delta1, 0.3e1) - 0.3e1 * pow(delta1, 0.3e1) * z * z + pow(delta1, 0.3e1) * pow(z, 0.3e1) - 0.12e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.6e1 * c * mu2 * delta1 * z + 0.8e1 * c * delta2 * mu1 * z + 0.8e1 * c * delta2 * delta1 * z - 0.6e1 * mu1 * mu2 * delta1 * z - 0.8e1 * mu1 * delta2 * delta1 * z - 0.3e1 * c * c * mu1 - 0.3e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.3e1 * mu1 * mu1 * delta1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.6e1 * c * mu1 * delta1 + 0.9e1 * mu1 * mu1 * delta1 * z + 0.3e1 * c * c * mu1 * z + 0.3e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * c * c * mu2 * z - 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.4e1 * mu1 * mu1 * delta2 * z + 0.6e1 * mu2 * z * z * delta1 * delta1 - 0.3e1 * mu2 * pow(z, 0.3e1) * delta1 * delta1 + 0.3e1 * c * z * z * delta1 * delta1 - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 + 0.8e1 * delta1 * delta1 * z * z * delta2 - 0.4e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * mu1 * z * z * delta2 - 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c + 0.8e1 * mu2 * z * z * delta2 * c - 0.8e1 * mu1 * z * z * mu2 * delta2 - 0.8e1 * delta1 * z * z * mu2 * delta2 + 0.8e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 + 0.8e1 * delta1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * mu1 * z * z * delta2 - 0.6e1 * c * delta1 * z * z * mu2 - 0.8e1 * c * delta1 * z * z * delta2 + 0.12e2 * mu1 * delta1 * z * z * mu2 - 0.6e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.16e2 * mu1 * delta1 * z * z * delta2 - 0.8e1 * mu1 * delta1 * pow(z, 0.3e1) * delta2 + 0.6e1 * mu1 * delta1 * z * z * c - 0.9e1 * mu1 * mu1 * z * z * delta1 + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.9e1 * mu1 * delta1 * delta1 * z - 0.6e1 * c * delta1 * delta1 * z - 0.3e1 * delta1 * delta1 * mu2 * z - 0.4e1 * delta1 * delta1 * delta2 * z + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * delta1 * delta1 + 0.3e1 * pow(delta1, 0.3e1) * z) * (-mu2 * z + c - mu1 + mu1 * z - delta1 + delta1 * z) * pow(z, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 5:
			
				return (0.6e1 * c * c - 0.12e2 * c * mu1 - 0.4e1 * c * delta1 + 0.6e1 * mu1 * mu1 + 0.4e1 * mu1 * delta1 + delta1 * delta1 - 0.12e2 * c * mu2 * z - 0.12e2 * c * delta2 * z + 0.12e2 * mu1 * c * z + 0.12e2 * mu1 * mu2 * z + 0.12e2 * mu1 * delta2 * z + 0.4e1 * delta1 * c * z + 0.4e1 * delta1 * mu2 * z + 0.4e1 * delta1 * delta2 * z - 0.8e1 * mu1 * z * delta1 - 0.12e2 * mu1 * z * z * mu2 - 0.12e2 * mu1 * z * z * delta2 + 0.4e1 * mu1 * z * z * delta1 - 0.4e1 * delta1 * z * z * mu2 - 0.4e1 * delta1 * z * z * delta2 - 0.12e2 * mu1 * mu1 * z - 0.2e1 * delta1 * delta1 * z + 0.6e1 * mu1 * mu1 * z * z + delta1 * delta1 * z * z + 0.6e1 * mu2 * mu2 * z * z + 0.6e1 * delta2 * delta2 * z * z + 0.12e2 * mu2 * z * z * delta2) * pow(z, -0.2e1) * pow(delta2, -0.2e1) / 0.24e2;


		case 6:
		
				return (0.6e1 * c * c - 0.12e2 * c * mu1 - 0.12e2 * c * delta1 + 0.6e1 * mu1 * mu1 + 0.12e2 * mu1 * delta1 + 0.6e1 * delta1 * delta1 - 0.12e2 * c * mu2 * z - 0.4e1 * c * delta2 * z + 0.12e2 * mu1 * c * z + 0.12e2 * mu1 * mu2 * z + 0.4e1 * mu1 * delta2 * z + 0.12e2 * delta1 * c * z + 0.12e2 * delta1 * mu2 * z + 0.4e1 * delta1 * delta2 * z - 0.24e2 * mu1 * z * delta1 - 0.12e2 * mu1 * z * z * mu2 - 0.4e1 * mu1 * z * z * delta2 + 0.12e2 * mu1 * z * z * delta1 - 0.12e2 * delta1 * z * z * mu2 - 0.4e1 * delta1 * z * z * delta2 - 0.12e2 * mu1 * mu1 * z - 0.12e2 * delta1 * delta1 * z + 0.6e1 * mu1 * mu1 * z * z + 0.6e1 * delta1 * delta1 * z * z + 0.6e1 * mu2 * mu2 * z * z + delta2 * delta2 * z * z + 0.4e1 * mu2 * z * z * delta2) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 7:
			
				return -(-mu2 * mu2 * z - 0.2e1 * mu2 * delta2 * z - 0.2e1 * c * mu2 * z - 0.4e1 * delta1 * mu2 + 0.4e1 * c * mu2 + 0.4e1 * mu1 * mu2 * z + 0.4e1 * delta1 * mu2 * z - 0.4e1 * mu1 * mu2 - delta2 * delta2 * z - 0.2e1 * c * delta2 * z - 0.4e1 * delta1 * delta2 + 0.4e1 * c * delta2 + 0.4e1 * mu1 * delta2 * z + 0.4e1 * delta1 * delta2 * z - 0.4e1 * mu1 * delta2 + 0.3e1 * c * c * z + 0.4e1 * c * delta1 - 0.4e1 * c * c - 0.4e1 * mu1 * c * z - 0.4e1 * delta1 * c * z + 0.4e1 * c * mu1) * pow(-mu2 - delta2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 8:
			
				return -(0.4e1 * mu1 * mu2 * z + 0.12e2 * mu1 * delta2 * z + 0.4e1 * delta1 * mu2 * z + 0.12e2 * delta1 * delta2 * z - 0.4e1 * mu1 * c * z - 0.4e1 * delta1 * c * z + 0.3e1 * c * c * z - mu2 * mu2 * z - 0.4e1 * mu2 * delta2 * z - 0.2e1 * c * mu2 * z - 0.8e1 * c * delta2 * z + 0.4e1 * c * mu2 - 0.4e1 * c * c + 0.4e1 * c * mu1 + 0.4e1 * c * delta1 - 0.4e1 * delta1 * mu2 + 0.12e2 * c * delta2 - 0.4e1 * mu1 * mu2 - 0.12e2 * mu1 * delta2 - 0.12e2 * delta1 * delta2) * pow(-mu2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 9:
		
				return -(c - mu1) * (0.2e1 * pow(c, 0.3e1) * z + pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.3e1 * c * c * mu1 - 0.4e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.4e1 * mu1 * mu1 * delta1 + 0.8e1 * c * mu1 * delta1 + 0.12e2 * c * mu2 * z * delta1 + 0.8e1 * c * mu2 * z * mu1 + 0.8e1 * c * delta2 * z * mu1 + 0.12e2 * c * delta2 * z * delta1 - 0.4e1 * z * z * c * mu1 * delta1 + 0.12e2 * z * z * mu1 * delta1 * delta2 + 0.12e2 * z * z * c * delta1 * delta2 + 0.4e1 * z * z * c * mu1 * delta2 + 0.4e1 * z * z * c * mu2 * mu1 + 0.12e2 * z * z * c * mu2 * delta1 - 0.24e2 * z * z * mu2 * delta2 * delta1 - 0.12e2 * z * z * mu2 * delta2 * mu1 + 0.12e2 * z * z * mu2 * delta2 * c + 0.12e2 * z * z * mu1 * mu2 * delta1 - 0.12e2 * delta1 * delta2 * delta2 * z * z - z * z * c * c * mu1 - 0.4e1 * z * z * c * c * delta1 - z * z * c * mu1 * mu1 - 0.4e1 * z * z * mu1 * mu1 * delta1 - 0.8e1 * z * z * c * c * mu2 + 0.6e1 * z * z * delta2 * delta2 * c - 0.6e1 * z * z * delta2 * delta2 * mu1 + 0.4e1 * z * z * mu1 * mu1 * mu2 - 0.8e1 * z * z * c * c * delta2 + 0.4e1 * z * z * mu1 * mu1 * delta2 + 0.6e1 * z * z * mu2 * mu2 * c - 0.6e1 * z * z * mu2 * mu2 * mu1 - 0.12e2 * z * z * mu2 * mu2 * delta1 + 0.8e1 * mu1 * mu1 * z * delta1 - 0.12e2 * mu1 * delta1 * mu2 * z - 0.12e2 * mu1 * delta1 * delta2 * z - 0.4e1 * mu1 * delta1 * c * z - 0.4e1 * mu1 * mu1 * mu2 * z - 0.4e1 * mu1 * mu1 * delta2 * z - 0.2e1 * mu1 * mu1 * c * z + 0.3e1 * z * z * pow(c, 0.3e1) - z * z * pow(mu1, 0.3e1) + 0.2e1 * pow(mu1, 0.3e1) * z - 0.2e1 * c * c * z * mu1 - 0.4e1 * c * c * z * delta1 - 0.4e1 * c * c * delta2 * z - 0.4e1 * c * c * mu2 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;


		case 10:
		
				return -pow(c - mu1 - delta1, 0.2e1) * (0.2e1 * c * c * z + c * c - 0.2e1 * c * mu1 - 0.2e1 * c * delta1 + mu1 * mu1 + 0.2e1 * mu1 * delta1 + delta1 * delta1 - 0.4e1 * c * mu2 * z - 0.4e1 * c * delta2 * z + 0.4e1 * mu1 * mu2 * z + 0.4e1 * mu1 * delta2 * z + 0.4e1 * delta1 * mu2 * z + 0.4e1 * delta1 * delta2 * z - 0.4e1 * mu1 * z * delta1 - 0.4e1 * mu1 * z * z * mu2 - 0.4e1 * mu1 * z * z * delta2 + 0.2e1 * mu1 * z * z * delta1 - 0.4e1 * delta1 * z * z * mu2 - 0.4e1 * delta1 * z * z * delta2 - 0.2e1 * mu1 * mu1 * z - 0.2e1 * delta1 * delta1 * z + mu1 * mu1 * z * z + delta1 * delta1 * z * z + 0.2e1 * mu1 * c * z * z + 0.2e1 * delta1 * c * z * z + 0.3e1 * c * c * z * z + 0.6e1 * mu2 * mu2 * z * z + 0.12e2 * mu2 * z * z * delta2 - 0.8e1 * z * z * mu2 * c - 0.8e1 * z * z * delta2 * c) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

				 
		case 11:
			
				return -(-0.12e2 * mu1 * mu2 * mu2 * z * delta2 - 0.12e2 * mu2 * mu2 * z * delta2 * delta1 + 0.12e2 * mu1 * mu2 * mu2 * z * z * delta2 + 0.12e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.12e2 * c * mu2 * mu2 * z * delta2 - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z + 0.6e1 * delta2 * delta2 * c * c + 0.6e1 * delta2 * delta2 * mu1 * mu1 - pow(mu2, 0.4e1) * z * z - 0.24e2 * c * mu2 * delta2 * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 + 0.12e2 * mu1 * delta2 * delta2 * delta1 + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - 0.12e2 * delta2 * delta2 * c * c * z + 0.6e1 * delta2 * delta2 * c * c * z * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * mu2 * mu2 * c * c * z + 0.6e1 * mu2 * mu2 * c * c * z * z - 0.12e2 * delta2 * delta2 * mu1 * mu1 * z + 0.6e1 * delta2 * delta2 * mu1 * mu1 * z * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.24e2 * c * delta2 * delta2 * mu1 * z - 0.12e2 * c * delta2 * delta2 * mu1 * z * z + 0.24e2 * c * delta2 * delta2 * delta1 * z - 0.12e2 * c * delta2 * delta2 * delta1 * z * z - 0.12e2 * c * c * delta1 * delta2 * z + 0.12e2 * c * c * delta1 * delta2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * c * mu2 * mu2 * delta1 * z - 0.12e2 * c * mu2 * mu2 * delta1 * z * z - 0.12e2 * c * c * mu2 * mu1 * z + 0.12e2 * c * c * mu2 * mu1 * z * z - 0.12e2 * c * c * mu2 * delta1 * z + 0.12e2 * c * c * mu2 * delta1 * z * z - 0.24e2 * mu2 * delta2 * c * c * z + 0.12e2 * mu2 * delta2 * c * c * z * z - 0.24e2 * mu1 * delta2 * delta2 * delta1 * z + 0.12e2 * mu1 * delta2 * delta2 * delta1 * z * z + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta2 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 + 0.24e2 * c * mu2 * delta2 * delta1 * z - 0.24e2 * c * mu2 * delta2 * delta1 * z * z + 0.24e2 * c * mu2 * delta2 * mu1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 12:
		
				return -(0.12e2 * z * delta2 * delta2 * delta1 * delta1 - 0.12e2 * mu1 * mu2 * mu2 * z * delta2 - 0.12e2 * mu2 * mu2 * z * delta2 * delta1 - 0.6e1 * mu2 * mu2 * z * z * delta2 * delta2 - 0.4e1 * pow(delta2, 0.3e1) * z * z * mu2 + 0.12e2 * mu1 * mu2 * mu2 * z * z * delta2 + 0.12e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.12e2 * c * mu2 * mu2 * z * delta2 - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z - 0.6e1 * delta2 * delta2 * c * c - 0.6e1 * delta2 * delta2 * mu1 * mu1 - pow(mu2, 0.4e1) * z * z - 0.24e2 * c * mu2 * delta2 * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * delta1 * pow(delta2, 0.3e1) * z + 0.4e1 * delta1 * pow(delta2, 0.3e1) * z * z + 0.12e2 * c * mu2 * z * delta2 * delta2 - 0.12e2 * mu1 * mu2 * z * delta2 * delta2 + 0.12e2 * mu1 * mu2 * z * z * delta2 * delta2 - 0.12e2 * delta1 * mu2 * z * delta2 * delta2 + 0.12e2 * delta1 * mu2 * z * z * delta2 * delta2 - pow(delta2, 0.4e1) * z * z + 0.12e2 * c * delta2 * delta2 * mu1 + 0.12e2 * c * delta2 * delta2 * delta1 - 0.12e2 * mu1 * delta2 * delta2 * delta1 + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * mu2 * mu2 * c * c * z + 0.6e1 * mu2 * mu2 * c * c * z * z + 0.12e2 * delta2 * delta2 * mu1 * mu1 * z - 0.6e1 * delta2 * delta2 * mu1 * mu1 * z * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.12e2 * c * delta2 * delta2 * mu1 * z - 0.12e2 * c * delta2 * delta2 * delta1 * z - 0.12e2 * c * c * delta1 * delta2 * z + 0.12e2 * c * c * delta1 * delta2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * c * mu2 * mu2 * delta1 * z - 0.12e2 * c * mu2 * mu2 * delta1 * z * z - 0.12e2 * c * c * mu2 * mu1 * z + 0.12e2 * c * c * mu2 * mu1 * z * z - 0.12e2 * c * c * mu2 * delta1 * z + 0.12e2 * c * c * mu2 * delta1 * z * z - 0.24e2 * mu2 * delta2 * c * c * z + 0.12e2 * mu2 * delta2 * c * c * z * z + 0.24e2 * mu1 * delta2 * delta2 * delta1 * z - 0.12e2 * mu1 * delta2 * delta2 * delta1 * z * z - 0.6e1 * delta2 * delta2 * delta1 * delta1 + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta2 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 - 0.6e1 * delta1 * delta1 * delta2 * delta2 * z * z + 0.4e1 * c * pow(delta2, 0.3e1) * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z * z + 0.24e2 * c * mu2 * delta2 * delta1 * z - 0.24e2 * c * mu2 * delta2 * delta1 * z * z + 0.24e2 * c * mu2 * delta2 * mu1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
		
		default:
			cout<<"This basic piece doesn't exist"; 
	}

}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: PAED_expected_piece_value(double z, int piecenum)
{

  if(fabs(z) < DBL_EPSILON)	
	{
		z = 1.0e-5;
	}
	if(fabs(1-z) < DBL_EPSILON)	
	{
		z = 1 - 1.0e-5;
	}

	switch (piecenum)
	{
		// Expressions for z.pdf(z) and not pdf(z)
		case 1:
			return (0.12e2 * c * mu1 * z * z * delta2 * delta2 + 0.12e2 * c * delta1 * z * z * delta2 * delta2 - 0.12e2 * mu2 * mu2 * z * c * mu1 - 0.12e2 * mu2 * mu2 * z * c * delta1 + 0.24e2 * mu2 * mu2 * z * delta2 * c + 0.12e2 * mu2 * mu2 * z * delta2 * mu1 + 0.12e2 * mu2 * mu2 * z * delta2 * delta1 - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * delta1 * pow(delta2, 0.3e1) * z - 0.4e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z * z + 0.12e2 * c * c * z * z * delta2 * delta2 + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z - 0.12e2 * c * delta2 * delta2 * mu1 * z - 0.12e2 * c * delta2 * delta2 * delta1 * z - 0.12e2 * c * pow(mu2, 0.3e1) * z * z + 0.8e1 * c * pow(delta2, 0.3e1) * z - 0.12e2 * c * pow(delta2, 0.3e1) * z * z - 0.6e1 * c * c * delta2 * delta2 * z + 0.24e2 * mu2 * z * z * c * c * delta2 + 0.12e2 * mu2 * mu2 * z * z * c * mu1 + 0.12e2 * mu2 * mu2 * z * z * c * delta1 + 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.48e2 * c * c * mu1 * delta1 * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * pow(mu2, 0.3e1) * delta2 * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * mu1 * mu2 * z * delta2 * delta2 + 0.2e1 * pow(c, 0.4e1) * z * z - 0.8e1 * pow(mu1, 0.3e1) * c + 0.8e1 * pow(mu1, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.4e1) * z - 0.8e1 * pow(delta1, 0.3e1) * c + 0.8e1 * pow(delta1, 0.3e1) * mu1 - 0.4e1 * pow(delta1, 0.4e1) * z - 0.8e1 * pow(c, 0.3e1) * mu1 + 0.12e2 * c * c * mu1 * mu1 - 0.8e1 * pow(c, 0.3e1) * delta1 + 0.12e2 * c * c * delta1 * delta1 + 0.12e2 * mu1 * mu1 * delta1 * delta1 + 0.2e1 * pow(mu1, 0.4e1) * z * z + 0.2e1 * pow(delta1, 0.4e1) * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.36e2 * c * mu2 * z * z * delta2 * delta2 - 0.36e2 * c * mu2 * mu2 * z * z * delta2 + 0.24e2 * c * mu2 * z * delta2 * delta2 - 0.3e1 * z * pow(c, 0.4e1) - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.18e2 * mu2 * mu2 * delta2 * delta2 * z - 0.12e2 * mu2 * pow(delta2, 0.3e1) * z + 0.12e2 * mu2 * mu2 * z * z * c * c - 0.12e2 * delta1 * mu2 * z * z * delta2 * delta2 + 0.12e2 * delta1 * mu2 * z * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z + 0.2e1 * pow(c, 0.4e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * pow(z, 0.3e1) - 0.48e2 * log(z) * mu2 * mu1 * c * delta1 * z * z + 0.24e2 * log(z) * mu2 * mu1 * c * delta1 * pow(z, 0.3e1) - 0.48e2 * log(z) * mu1 * c * delta1 * delta2 * z * z + 0.24e2 * log(z) * mu1 * c * delta1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * c * delta1 * z + 0.24e2 * log(z) * mu1 * c * delta1 * delta2 * z + 0.12e2 * pow(c, 0.3e1) * mu1 * z + 0.12e2 * pow(c, 0.3e1) * delta1 * z + 0.12e2 * c * c * mu1 * mu1 * z * z + 0.12e2 * c * c * delta1 * delta1 * z * z - 0.16e2 * pow(mu1, 0.3e1) * delta1 * z - 0.16e2 * pow(delta1, 0.3e1) * mu1 * z + 0.24e2 * c * c * mu1 * delta1 - 0.24e2 * c * c * mu1 * mu1 * z - 0.24e2 * c * c * delta1 * delta1 * z - 0.24e2 * c * mu1 * mu1 * delta1 + 0.16e2 * c * pow(mu1, 0.3e1) * z - 0.24e2 * c * delta1 * delta1 * mu1 + 0.16e2 * c * pow(delta1, 0.3e1) * z - 0.24e2 * mu1 * mu1 * delta1 * delta1 * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * delta1 + 0.8e1 * pow(delta1, 0.3e1) * z * z * mu1 + 0.12e2 * mu1 * mu1 * delta1 * delta1 * z * z - 0.8e1 * c * pow(mu1, 0.3e1) * z * z - 0.8e1 * c * pow(delta1, 0.3e1) * z * z + 0.2e1 * pow(mu1, 0.4e1) + 0.2e1 * pow(delta1, 0.4e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z - 0.24e2 * log(z) * c * delta1 * delta1 * delta2 * z * z + 0.12e2 * log(z) * c * delta1 * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * delta1 * delta1 * delta2 * z * z - 0.12e2 * log(z) * mu1 * delta1 * delta1 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * delta1 * z * z - 0.12e2 * log(z) * c * c * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 * z * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * mu1 * mu1 * delta2 * z * z + 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * mu1 * c * z * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * c * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(z) * c * delta1 * delta1 * delta2 * z - 0.12e2 * log(z) * mu1 * delta1 * delta1 * delta2 * z - 0.12e2 * log(z) * c * c * mu2 * delta1 * z + 0.16e2 * mu2 * z * z * pow(delta2, 0.3e1) + 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 - 0.12e2 * c * c * delta1 * delta2 * z * z + 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * z + 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * c * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * z - 0.12e2 * log(z) * c * c * delta1 * delta2 * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z - 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z - 0.12e2 * log(z) * mu1 * c * delta1 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(z) * c * c * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * c * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu1 * c * delta1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * c * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * c * mu1 * mu2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z * z + 0.24e2 * c * c * mu1 * delta1 * z * z - 0.12e2 * c * c * delta1 * mu2 * z * z - 0.24e2 * mu2 * z * c * delta2 * mu1 - 0.24e2 * mu2 * z * c * delta2 * delta1 + 0.24e2 * mu2 * z * z * c * delta2 * delta1 + 0.24e2 * mu2 * z * z * c * delta2 * mu1 + 0.12e2 * c * c * delta1 * delta2 * z + 0.48e2 * c * mu1 * mu1 * delta1 * z + 0.48e2 * c * delta1 * delta1 * mu1 * z - 0.24e2 * c * mu1 * mu1 * delta1 * z * z - 0.24e2 * c * mu1 * delta1 * delta1 * z * z - 0.3e1 * pow(delta2, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(delta2, 0.4e1) * z * z - 0.3e1 * pow(mu2, 0.4e1) * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * pow(z, 0.3e1) - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * pow(mu2, 0.3e1) * z * c + 0.4e1 * pow(mu2, 0.3e1) * z * mu1 + 0.4e1 * pow(mu2, 0.3e1) * z * delta1 - 0.6e1 * mu2 * mu2 * z * c * c - 0.4e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * pow(z, 0.3e1) + 0.8e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(z) * mu2 * pow(mu1, 0.3e1) * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * pow(z, 0.3e1) - 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * mu2 * pow(mu1, 0.3e1) * z * z - 0.4e1 * log(z) * mu2 * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * pow(z, 0.3e1) - 0.4e1 * pow(delta1, 0.4e1) * log(z) * z * z + 0.2e1 * pow(delta1, 0.4e1) * log(z) * pow(z, 0.3e1) + 0.2e1 * pow(delta1, 0.4e1) * log(z) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) - 0.12e2 * mu2 * mu2 * z * z * delta2 * mu1 - 0.12e2 * mu2 * mu2 * z * z * delta2 * delta1 - 0.12e2 * mu2 * z * c * c * delta2 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.12e2 * mu1 * mu2 * z * z * delta2 * delta2) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;


		case 2:
			return (-0.12e2 * c * mu1 * z * z * delta2 * delta2 - 0.12e2 * c * delta1 * z * z * delta2 * delta2 + 0.12e2 * mu2 * mu2 * z * c * mu1 + 0.12e2 * mu2 * mu2 * z * c * delta1 - 0.24e2 * mu2 * mu2 * z * delta2 * c - 0.12e2 * mu2 * mu2 * z * delta2 * mu1 - 0.12e2 * mu2 * mu2 * z * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * delta1 * pow(delta2, 0.3e1) * z + 0.4e1 * delta1 * pow(delta2, 0.3e1) * z * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.12e2 * c * c * z * z * delta2 * delta2 - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z + 0.12e2 * c * delta2 * delta2 * mu1 * z + 0.12e2 * c * delta2 * delta2 * delta1 * z + 0.12e2 * c * pow(mu2, 0.3e1) * z * z - 0.8e1 * c * pow(delta2, 0.3e1) * z + 0.12e2 * c * pow(delta2, 0.3e1) * z * z + 0.6e1 * c * c * delta2 * delta2 * z - 0.24e2 * mu2 * z * z * c * c * delta2 - 0.12e2 * mu2 * mu2 * z * z * c * mu1 - 0.12e2 * mu2 * mu2 * z * z * c * delta1 - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.48e2 * c * c * mu1 * delta1 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.12e2 * pow(mu2, 0.3e1) * delta2 * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.12e2 * mu1 * mu2 * z * delta2 * delta2 - 0.2e1 * pow(c, 0.4e1) * z * z + 0.8e1 * pow(mu1, 0.3e1) * c - 0.8e1 * pow(mu1, 0.3e1) * delta1 + 0.4e1 * pow(mu1, 0.4e1) * z + 0.8e1 * pow(c, 0.3e1) * mu1 - 0.12e2 * c * c * mu1 * mu1 + 0.8e1 * pow(c, 0.3e1) * delta1 - 0.2e1 * pow(mu1, 0.4e1) * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.36e2 * c * mu2 * z * z * delta2 * delta2 + 0.36e2 * c * mu2 * mu2 * z * z * delta2 - 0.24e2 * c * mu2 * z * delta2 * delta2 + 0.3e1 * z * pow(c, 0.4e1) + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.18e2 * mu2 * mu2 * delta2 * delta2 * z + 0.12e2 * mu2 * pow(delta2, 0.3e1) * z - 0.12e2 * mu2 * mu2 * z * z * c * c + 0.12e2 * delta1 * mu2 * z * z * delta2 * delta2 - 0.12e2 * delta1 * mu2 * z * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.2e1 * pow(c, 0.4e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * mu2 * mu1 * c * delta1 * z * z - 0.24e2 * log(z) * mu2 * mu1 * c * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * mu1 * c * delta1 * delta2 * z * z - 0.24e2 * log(z) * mu1 * c * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * c * delta1 * z - 0.24e2 * log(z) * mu1 * c * delta1 * delta2 * z - 0.12e2 * pow(c, 0.3e1) * mu1 * z - 0.12e2 * pow(c, 0.3e1) * delta1 * z - 0.12e2 * c * c * mu1 * mu1 * z * z + 0.16e2 * pow(mu1, 0.3e1) * delta1 * z - 0.24e2 * c * c * mu1 * delta1 + 0.24e2 * c * c * mu1 * mu1 * z + 0.24e2 * c * mu1 * mu1 * delta1 - 0.16e2 * c * pow(mu1, 0.3e1) * z - 0.8e1 * pow(mu1, 0.3e1) * z * z * delta1 + 0.8e1 * c * pow(mu1, 0.3e1) * z * z - 0.2e1 * pow(mu1, 0.4e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu2 * delta1 * z * z + 0.12e2 * log(z) * c * c * mu2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * mu1 * mu1 * delta1 * z * z + 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * mu1 * c * z * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * c * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(z) * c * c * mu2 * delta1 * z - 0.16e2 * mu2 * z * z * pow(delta2, 0.3e1) - 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 + 0.12e2 * c * c * delta1 * delta2 * z * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z + 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * c * z + 0.12e2 * log(z) * c * c * mu2 * mu1 * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta1 * delta2 * z * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * mu2 * z * z + 0.12e2 * c * c * mu1 * delta2 * z * z - 0.24e2 * c * c * mu1 * delta1 * z * z + 0.12e2 * c * c * delta1 * mu2 * z * z + 0.24e2 * mu2 * z * c * delta2 * mu1 + 0.24e2 * mu2 * z * c * delta2 * delta1 - 0.24e2 * mu2 * z * z * c * delta2 * delta1 - 0.24e2 * mu2 * z * z * c * delta2 * mu1 - 0.12e2 * c * c * delta1 * delta2 * z - 0.48e2 * c * mu1 * mu1 * delta1 * z + 0.24e2 * c * mu1 * mu1 * delta1 * z * z + 0.3e1 * pow(delta2, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.3e1 * pow(mu2, 0.4e1) * z + 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * pow(z, 0.3e1) + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(mu2, 0.3e1) * z * c - 0.4e1 * pow(mu2, 0.3e1) * z * mu1 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 + 0.6e1 * mu2 * mu2 * z * c * c + 0.4e1 * pow(mu2, 0.3e1) * z * z * mu1 - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.4e1 * log(z) * mu2 * pow(mu1, 0.3e1) * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * mu2 * pow(mu1, 0.3e1) * z * z + 0.4e1 * log(z) * mu2 * pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * pow(z, 0.3e1) + 0.2e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(c, 0.4e1) * z * z + 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.12e2 * mu2 * mu2 * z * z * delta2 * mu1 + 0.12e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.12e2 * mu2 * z * c * c * delta2 - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z + 0.12e2 * mu1 * mu2 * z * z * delta2 * delta2) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;

			
		case 3:
			return -(0.12e2 * mu2 * mu2 * z * c * mu1 + 0.12e2 * mu2 * mu2 * z * c * delta1 - 0.24e2 * mu2 * mu2 * z * delta2 * c - 0.12e2 * mu2 * mu2 * z * delta2 * mu1 - 0.12e2 * mu2 * mu2 * z * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * pow(c, 0.3e1) * delta2 * z * z + 0.12e2 * c * pow(mu2, 0.3e1) * z * z - 0.24e2 * mu2 * z * z * c * c * delta2 - 0.12e2 * mu2 * mu2 * z * z * c * mu1 - 0.12e2 * mu2 * mu2 * z * z * c * delta1 - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.48e2 * c * c * mu1 * delta1 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.12e2 * pow(mu2, 0.3e1) * delta2 * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.2e1 * pow(c, 0.4e1) * z * z + 0.8e1 * pow(mu1, 0.3e1) * c - 0.8e1 * pow(mu1, 0.3e1) * delta1 + 0.4e1 * pow(mu1, 0.4e1) * z + 0.8e1 * pow(c, 0.3e1) * mu1 - 0.12e2 * c * c * mu1 * mu1 + 0.8e1 * pow(c, 0.3e1) * delta1 - 0.2e1 * pow(mu1, 0.4e1) * z * z + 0.36e2 * c * mu2 * mu2 * z * z * delta2 + 0.3e1 * z * pow(c, 0.4e1) - 0.12e2 * mu2 * mu2 * z * z * c * c - 0.2e1 * pow(c, 0.4e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * mu2 * mu1 * c * delta1 * z * z - 0.24e2 * log(z) * mu2 * mu1 * c * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * mu1 * c * delta1 * delta2 * z * z - 0.24e2 * log(z) * mu1 * c * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * c * delta1 * z - 0.24e2 * log(z) * mu1 * c * delta1 * delta2 * z - 0.12e2 * pow(c, 0.3e1) * mu1 * z - 0.12e2 * pow(c, 0.3e1) * delta1 * z - 0.12e2 * c * c * mu1 * mu1 * z * z + 0.16e2 * pow(mu1, 0.3e1) * delta1 * z - 0.24e2 * c * c * mu1 * delta1 + 0.24e2 * c * c * mu1 * mu1 * z + 0.24e2 * c * mu1 * mu1 * delta1 - 0.16e2 * c * pow(mu1, 0.3e1) * z - 0.8e1 * pow(mu1, 0.3e1) * z * z * delta1 + 0.8e1 * c * pow(mu1, 0.3e1) * z * z - 0.2e1 * pow(mu1, 0.4e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu2 * delta1 * z * z + 0.12e2 * log(z) * c * c * mu2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * mu1 * mu1 * delta1 * z * z + 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * mu1 * c * z * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * c * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(z) * c * c * mu2 * delta1 * z + 0.12e2 * c * c * delta1 * delta2 * z * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z + 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * c * z + 0.12e2 * log(z) * c * c * mu2 * mu1 * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta1 * delta2 * z * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * mu2 * z * z + 0.12e2 * c * c * mu1 * delta2 * z * z - 0.24e2 * c * c * mu1 * delta1 * z * z + 0.12e2 * c * c * delta1 * mu2 * z * z + 0.24e2 * mu2 * z * c * delta2 * mu1 + 0.24e2 * mu2 * z * c * delta2 * delta1 - 0.24e2 * mu2 * z * z * c * delta2 * delta1 - 0.24e2 * mu2 * z * z * c * delta2 * mu1 - 0.12e2 * c * c * delta1 * delta2 * z - 0.48e2 * c * mu1 * mu1 * delta1 * z + 0.24e2 * c * mu1 * mu1 * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.3e1 * pow(mu2, 0.4e1) * z - 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(mu2, 0.3e1) * z * c - 0.4e1 * pow(mu2, 0.3e1) * z * mu1 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 + 0.6e1 * mu2 * mu2 * z * c * c + 0.4e1 * pow(mu2, 0.3e1) * z * z * mu1 - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.4e1 * log(z) * mu2 * pow(mu1, 0.3e1) * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * mu2 * pow(mu1, 0.3e1) * z * z + 0.4e1 * log(z) * mu2 * pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.2e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(c, 0.4e1) * z * z + 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.12e2 * mu2 * mu2 * z * z * delta2 * mu1 + 0.12e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.12e2 * mu2 * z * c * c * delta2) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;

			
		case 4:
			return (0.12e2 * mu2 * mu2 * z * c * mu1 + 0.12e2 * mu2 * mu2 * z * c * delta1 - 0.24e2 * mu2 * mu2 * z * delta2 * c - 0.12e2 * mu2 * mu2 * z * delta2 * mu1 - 0.12e2 * mu2 * mu2 * z * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * pow(c, 0.3e1) * delta2 * z * z + 0.12e2 * c * pow(mu2, 0.3e1) * z * z - 0.24e2 * mu2 * z * z * c * c * delta2 - 0.12e2 * mu2 * mu2 * z * z * c * mu1 - 0.12e2 * mu2 * mu2 * z * z * c * delta1 - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.48e2 * c * c * mu1 * delta1 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.12e2 * pow(mu2, 0.3e1) * delta2 * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.2e1 * pow(c, 0.4e1) * z * z + 0.8e1 * pow(mu1, 0.3e1) * c - 0.8e1 * pow(mu1, 0.3e1) * delta1 + 0.4e1 * pow(mu1, 0.4e1) * z + 0.8e1 * pow(delta1, 0.3e1) * c - 0.8e1 * pow(delta1, 0.3e1) * mu1 + 0.4e1 * pow(delta1, 0.4e1) * z + 0.8e1 * pow(c, 0.3e1) * mu1 - 0.12e2 * c * c * mu1 * mu1 + 0.8e1 * pow(c, 0.3e1) * delta1 - 0.12e2 * c * c * delta1 * delta1 - 0.12e2 * mu1 * mu1 * delta1 * delta1 - 0.2e1 * pow(mu1, 0.4e1) * z * z - 0.2e1 * pow(delta1, 0.4e1) * z * z + 0.36e2 * c * mu2 * mu2 * z * z * delta2 + 0.3e1 * z * pow(c, 0.4e1) - 0.12e2 * mu2 * mu2 * z * z * c * c - 0.2e1 * pow(c, 0.4e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * mu2 * mu1 * c * delta1 * z * z - 0.24e2 * log(z) * mu2 * mu1 * c * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * mu1 * c * delta1 * delta2 * z * z - 0.24e2 * log(z) * mu1 * c * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * c * delta1 * z - 0.24e2 * log(z) * mu1 * c * delta1 * delta2 * z - 0.12e2 * pow(c, 0.3e1) * mu1 * z - 0.12e2 * pow(c, 0.3e1) * delta1 * z - 0.12e2 * c * c * mu1 * mu1 * z * z - 0.12e2 * c * c * delta1 * delta1 * z * z + 0.16e2 * pow(mu1, 0.3e1) * delta1 * z + 0.16e2 * pow(delta1, 0.3e1) * mu1 * z - 0.24e2 * c * c * mu1 * delta1 + 0.24e2 * c * c * mu1 * mu1 * z + 0.24e2 * c * c * delta1 * delta1 * z + 0.24e2 * c * mu1 * mu1 * delta1 - 0.16e2 * c * pow(mu1, 0.3e1) * z + 0.24e2 * c * delta1 * delta1 * mu1 - 0.16e2 * c * pow(delta1, 0.3e1) * z + 0.24e2 * mu1 * mu1 * delta1 * delta1 * z - 0.8e1 * pow(mu1, 0.3e1) * z * z * delta1 - 0.8e1 * pow(delta1, 0.3e1) * z * z * mu1 - 0.12e2 * mu1 * mu1 * delta1 * delta1 * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(delta1, 0.3e1) * z * z - 0.2e1 * pow(mu1, 0.4e1) - 0.2e1 * pow(delta1, 0.4e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * log(z) * c * delta1 * delta1 * delta2 * z * z - 0.12e2 * log(z) * c * delta1 * delta1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * delta1 * delta1 * delta2 * z * z + 0.12e2 * log(z) * mu1 * delta1 * delta1 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu2 * delta1 * z * z + 0.12e2 * log(z) * c * c * mu2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * mu1 * mu1 * delta1 * z * z + 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * mu1 * c * z * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * c * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(z) * c * delta1 * delta1 * delta2 * z + 0.12e2 * log(z) * mu1 * delta1 * delta1 * delta2 * z + 0.12e2 * log(z) * c * c * mu2 * delta1 * z + 0.12e2 * c * c * delta1 * delta2 * z * z - 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z + 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * c * z + 0.12e2 * log(z) * c * c * mu2 * mu1 * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z + 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z + 0.12e2 * log(z) * mu1 * c * delta1 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta1 * delta2 * z * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * c * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu1 * c * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * c * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * mu2 * z * z + 0.12e2 * c * c * mu1 * delta2 * z * z - 0.24e2 * c * c * mu1 * delta1 * z * z + 0.12e2 * c * c * delta1 * mu2 * z * z + 0.24e2 * mu2 * z * c * delta2 * mu1 + 0.24e2 * mu2 * z * c * delta2 * delta1 - 0.24e2 * mu2 * z * z * c * delta2 * delta1 - 0.24e2 * mu2 * z * z * c * delta2 * mu1 - 0.12e2 * c * c * delta1 * delta2 * z - 0.48e2 * c * mu1 * mu1 * delta1 * z - 0.48e2 * c * delta1 * delta1 * mu1 * z + 0.24e2 * c * mu1 * mu1 * delta1 * z * z + 0.24e2 * c * mu1 * delta1 * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.3e1 * pow(mu2, 0.4e1) * z - 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(mu2, 0.3e1) * z * c - 0.4e1 * pow(mu2, 0.3e1) * z * mu1 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 + 0.6e1 * mu2 * mu2 * z * c * c + 0.4e1 * pow(mu2, 0.3e1) * z * z * mu1 - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.4e1 * log(z) * mu2 * pow(mu1, 0.3e1) * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * pow(z, 0.3e1) + 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * mu2 * pow(mu1, 0.3e1) * z * z + 0.4e1 * log(z) * mu2 * pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.4e1 * pow(delta1, 0.4e1) * log(z) * z * z - 0.2e1 * pow(delta1, 0.4e1) * log(z) * pow(z, 0.3e1) - 0.2e1 * pow(delta1, 0.4e1) * log(z) * z + 0.2e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(c, 0.4e1) * z * z + 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.12e2 * mu2 * mu2 * z * z * delta2 * mu1 + 0.12e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.12e2 * mu2 * z * c * c * delta2) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;

			
		case 5:
			return -(-0.6e1 * c * c + 0.12e2 * c * mu1 + 0.4e1 * c * delta1 - 0.6e1 * mu1 * mu1 - 0.4e1 * mu1 * delta1 - delta1 * delta1 - 0.6e1 * log(z) * mu2 * c * z - 0.6e1 * log(z) * c * delta2 * z + 0.6e1 * log(z) * c * mu1 * z + 0.6e1 * log(z) * mu2 * mu1 * z + 0.6e1 * log(z) * mu1 * delta2 * z + 0.2e1 * delta1 * log(z) * c * z + 0.2e1 * delta1 * log(z) * mu2 * z + 0.2e1 * delta1 * log(z) * delta2 * z - 0.6e1 * log(z) * mu1 * mu1 * z - delta1 * delta1 * log(z) * z - 0.4e1 * delta1 * log(z) * mu1 * z) * pow(delta2, -0.2e1) / z / 0.12e2;
			
		case 6:
			return -(-0.12e2 * c * c * z + 0.6e1 * c * c + 0.12e2 * c * mu1 + 0.12e2 * c * delta1 + 0.36e2 * c * mu2 * z + 0.12e2 * c * delta2 * z - 0.12e2 * mu1 * c * z + 0.12e2 * mu1 * mu2 * z + 0.4e1 * mu1 * delta2 * z - 0.12e2 * delta1 * c * z + 0.12e2 * delta1 * mu2 * z + 0.4e1 * delta1 * delta2 * z + 0.3e1 * delta2 * delta2 + 0.18e2 * mu2 * mu2 + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * c * z - 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * c * z * z - 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z - 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z * z + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z - 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.12e2 * mu2 * delta2 - 0.24e2 * mu2 * mu2 * z - 0.4e1 * delta2 * delta2 * z + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 - 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 - 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * c - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z * z - 0.4e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z + 0.2e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.2e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.16e2 * mu2 * delta2 * z - 0.24e2 * c * mu2 - 0.8e1 * c * delta2 - 0.12e2 * mu1 * mu2 - 0.4e1 * mu1 * delta2 - 0.12e2 * delta1 * mu2 - 0.4e1 * delta1 * delta2) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 7:
			return (-0.6e1 * c * c * mu2 * mu2 - 0.6e1 * c * c * delta2 * delta2 + 0.8e1 * pow(mu2, 0.3e1) * c - 0.12e2 * pow(mu2, 0.3e1) * delta2 + 0.8e1 * pow(delta2, 0.3e1) * c - 0.12e2 * pow(delta2, 0.3e1) * mu2 - 0.18e2 * mu2 * mu2 * delta2 * delta2 + 0.12e2 * mu2 * mu2 * z * c * mu1 + 0.12e2 * mu2 * mu2 * z * c * delta1 - 0.36e2 * mu2 * mu2 * z * delta2 * c - 0.12e2 * mu2 * mu2 * z * delta2 * mu1 - 0.12e2 * mu2 * mu2 * z * delta2 * delta1 - 0.3e1 * pow(mu2, 0.4e1) - 0.3e1 * pow(delta2, 0.4e1) - 0.4e1 * delta1 * pow(delta2, 0.3e1) * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z + 0.12e2 * c * delta2 * delta2 * mu1 * z + 0.12e2 * c * delta2 * delta2 * delta1 * z - 0.12e2 * c * pow(delta2, 0.3e1) * z + 0.12e2 * c * c * delta2 * delta2 * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.12e2 * mu1 * mu2 * z * delta2 * delta2 - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.36e2 * c * mu2 * z * delta2 * delta2 - 0.12e2 * c * c * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z + 0.16e2 * mu2 * pow(delta2, 0.3e1) * z - 0.12e2 * delta1 * mu2 * z * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z + pow(c, 0.4e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.24e2 * c * mu2 * delta1 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 + 0.24e2 * mu2 * z * c * delta2 * mu1 + 0.24e2 * mu2 * z * c * delta2 * delta1 - 0.12e2 * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.4e1 * pow(delta2, 0.4e1) * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * delta2 * delta2 * mu2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.24e2 * mu2 * mu2 * delta2 * c + 0.24e2 * mu2 * delta2 * delta2 * c + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.12e2 * pow(mu2, 0.3e1) * z * c - 0.4e1 * pow(mu2, 0.3e1) * z * mu1 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 + 0.12e2 * mu2 * mu2 * z * c * c - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 + 0.24e2 * mu2 * z * c * c * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

			
		case 8:
			return (-0.6e1 * c * c * mu2 * mu2 + 0.8e1 * pow(mu2, 0.3e1) * c - 0.12e2 * pow(mu2, 0.3e1) * delta2 + 0.12e2 * mu2 * mu2 * z * c * mu1 + 0.12e2 * mu2 * mu2 * z * c * delta1 - 0.36e2 * mu2 * mu2 * z * delta2 * c - 0.12e2 * mu2 * mu2 * z * delta2 * mu1 - 0.12e2 * mu2 * mu2 * z * delta2 * delta1 - 0.3e1 * pow(mu2, 0.4e1) - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.12e2 * c * c * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 + pow(c, 0.4e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.24e2 * c * mu2 * delta1 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 + 0.24e2 * mu2 * z * c * delta2 * mu1 + 0.24e2 * mu2 * z * c * delta2 * delta1 - 0.12e2 * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.24e2 * mu2 * mu2 * delta2 * c + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.12e2 * pow(mu2, 0.3e1) * z * c - 0.4e1 * pow(mu2, 0.3e1) * z * mu1 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 + 0.12e2 * mu2 * mu2 * z * c * c - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 + 0.24e2 * mu2 * z * c * c * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 9:
			return (0.4e1 * pow(mu1, 0.3e1) * c - 0.4e1 * pow(mu1, 0.3e1) * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 - 0.6e1 * c * c * mu1 * mu1 + 0.4e1 * pow(c, 0.3e1) * delta1 - pow(c, 0.4e1) - 0.12e2 * log(z) * mu2 * mu1 * c * delta1 * z - 0.12e2 * log(z) * mu1 * c * delta1 * delta2 * z - 0.12e2 * c * c * mu1 * delta1 + 0.12e2 * c * mu1 * mu1 * delta1 - pow(mu1, 0.4e1) + 0.6e1 * log(z) * c * c * mu2 * delta1 * z + 0.6e1 * log(z) * c * c * mu1 * delta2 * z + 0.6e1 * log(z) * mu2 * mu1 * mu1 * delta1 * z + 0.6e1 * log(z) * c * mu1 * mu1 * delta1 * z - 0.6e1 * log(z) * c * mu1 * mu1 * delta2 * z - 0.6e1 * log(z) * mu2 * mu1 * mu1 * c * z + 0.6e1 * log(z) * c * c * mu2 * mu1 * z + 0.6e1 * log(z) * c * c * delta1 * delta2 * z + 0.6e1 * log(z) * mu1 * mu1 * delta1 * delta2 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * delta2 * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * c * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.2e1 * log(z) * mu2 * pow(mu1, 0.3e1) * z + log(z) * pow(c, 0.4e1) * z - log(z) * pow(mu1, 0.4e1) * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z / 0.12e2;

			
		case 10:
			return (0.4e1 * pow(mu1, 0.3e1) * c - 0.4e1 * pow(mu1, 0.3e1) * delta1 + 0.4e1 * pow(delta1, 0.3e1) * c - 0.4e1 * pow(delta1, 0.3e1) * mu1 + 0.4e1 * pow(c, 0.3e1) * mu1 - 0.6e1 * c * c * mu1 * mu1 + 0.4e1 * pow(c, 0.3e1) * delta1 - 0.6e1 * c * c * delta1 * delta1 - 0.6e1 * mu1 * mu1 * delta1 * delta1 - pow(c, 0.4e1) - 0.12e2 * log(z) * mu2 * mu1 * c * delta1 * z - 0.12e2 * log(z) * mu1 * c * delta1 * delta2 * z - 0.12e2 * c * c * mu1 * delta1 + 0.12e2 * c * mu1 * mu1 * delta1 + 0.12e2 * c * delta1 * delta1 * mu1 - pow(mu1, 0.4e1) - pow(delta1, 0.4e1) - 0.6e1 * log(z) * c * delta1 * delta1 * delta2 * z + 0.6e1 * log(z) * mu1 * delta1 * delta1 * delta2 * z + 0.6e1 * log(z) * c * c * mu2 * delta1 * z - 0.6e1 * log(z) * mu2 * c * delta1 * delta1 * z + 0.6e1 * log(z) * c * c * mu1 * delta2 * z + 0.6e1 * log(z) * mu2 * mu1 * mu1 * delta1 * z + 0.6e1 * log(z) * c * mu1 * mu1 * delta1 * z - 0.6e1 * log(z) * c * mu1 * mu1 * delta2 * z - 0.6e1 * log(z) * mu2 * mu1 * mu1 * c * z + 0.6e1 * log(z) * c * c * mu2 * mu1 * z + 0.6e1 * log(z) * c * c * delta1 * delta2 * z + 0.6e1 * log(z) * mu1 * mu1 * delta1 * delta2 * z + 0.6e1 * log(z) * mu2 * mu1 * delta1 * delta1 * z + 0.6e1 * log(z) * mu1 * c * delta1 * delta1 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.2e1 * pow(delta1, 0.3e1) * log(z) * c * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.2e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.6e1 * log(z) * mu1 * mu1 * delta1 * delta1 * z + 0.2e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * c * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.2e1 * log(z) * mu2 * pow(mu1, 0.3e1) * z - pow(delta1, 0.4e1) * log(z) * z + log(z) * pow(c, 0.4e1) * z - log(z) * pow(mu1, 0.4e1) * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z / 0.12e2;

			
		case 11:
			return (-0.6e1 * c * c * mu2 * mu2 + 0.8e1 * pow(mu2, 0.3e1) * c - 0.12e2 * pow(mu2, 0.3e1) * delta2 + 0.12e2 * mu2 * mu2 * z * c * mu1 + 0.12e2 * mu2 * mu2 * z * c * delta1 - 0.36e2 * mu2 * mu2 * z * delta2 * c - 0.12e2 * mu2 * mu2 * z * delta2 * mu1 - 0.12e2 * mu2 * mu2 * z * delta2 * delta1 - 0.3e1 * pow(mu2, 0.4e1) - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.12e2 * c * c * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 + pow(c, 0.4e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.24e2 * c * mu2 * delta1 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 + 0.24e2 * mu2 * z * c * delta2 * mu1 + 0.24e2 * mu2 * z * c * delta2 * delta1 - 0.12e2 * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.24e2 * mu2 * mu2 * delta2 * c + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.12e2 * pow(mu2, 0.3e1) * z * c - 0.4e1 * pow(mu2, 0.3e1) * z * mu1 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 + 0.12e2 * mu2 * mu2 * z * c * c - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 + 0.24e2 * mu2 * z * c * c * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 12:
			return (-0.6e1 * c * c * mu2 * mu2 - 0.6e1 * c * c * delta2 * delta2 + 0.8e1 * pow(mu2, 0.3e1) * c - 0.12e2 * pow(mu2, 0.3e1) * delta2 + 0.8e1 * pow(delta2, 0.3e1) * c - 0.12e2 * pow(delta2, 0.3e1) * mu2 - 0.18e2 * mu2 * mu2 * delta2 * delta2 + 0.12e2 * mu2 * mu2 * z * c * mu1 + 0.12e2 * mu2 * mu2 * z * c * delta1 - 0.36e2 * mu2 * mu2 * z * delta2 * c - 0.12e2 * mu2 * mu2 * z * delta2 * mu1 - 0.12e2 * mu2 * mu2 * z * delta2 * delta1 - 0.3e1 * pow(mu2, 0.4e1) - 0.3e1 * pow(delta2, 0.4e1) - 0.4e1 * delta1 * pow(delta2, 0.3e1) * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z + 0.12e2 * c * delta2 * delta2 * mu1 * z + 0.12e2 * c * delta2 * delta2 * delta1 * z - 0.12e2 * c * pow(delta2, 0.3e1) * z + 0.12e2 * c * c * delta2 * delta2 * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.12e2 * mu1 * mu2 * z * delta2 * delta2 - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.36e2 * c * mu2 * z * delta2 * delta2 - 0.12e2 * c * c * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z + 0.16e2 * mu2 * pow(delta2, 0.3e1) * z - 0.12e2 * delta1 * mu2 * z * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z + pow(c, 0.4e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.24e2 * c * mu2 * delta1 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 + 0.24e2 * mu2 * z * c * delta2 * mu1 + 0.24e2 * mu2 * z * c * delta2 * delta1 - 0.12e2 * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.4e1 * pow(delta2, 0.4e1) * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * delta2 * delta2 * mu2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.24e2 * mu2 * mu2 * delta2 * c + 0.24e2 * mu2 * delta2 * delta2 * c + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.12e2 * pow(mu2, 0.3e1) * z * c - 0.4e1 * pow(mu2, 0.3e1) * z * mu1 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 + 0.12e2 * mu2 * mu2 * z * c * c - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 + 0.24e2 * mu2 * z * c * c * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

			

		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: PAED_second_moment_piece_value(double z, int piecenum)
{

	if(fabs(z) < DBL_EPSILON)	
	{
		z = 1.0e-5;
	}
	if(fabs(1-z) < DBL_EPSILON)	
	{
		z = 1 - 1.0e-5;
	}

	
	switch (piecenum)
	{
		// Expressions for z^2.pdf(z) and not pdf(z)
		case 1:
			return (0.24e2 * c * mu1 * z * z * delta2 * delta2 + 0.24e2 * c * delta1 * z * z * delta2 * delta2 - 0.18e2 * c * c * mu2 * mu2 - 0.18e2 * c * c * delta2 * delta2 + 0.16e2 * pow(mu2, 0.3e1) * c - 0.20e2 * pow(mu2, 0.3e1) * delta2 + 0.16e2 * pow(delta2, 0.3e1) * c - 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.30e2 * mu2 * mu2 * delta2 * delta2 + 0.24e2 * c * delta2 * mu1 * z * delta1 - 0.48e2 * mu2 * mu2 * z * delta2 * c - 0.5e1 * pow(mu2, 0.4e1) - 0.5e1 * pow(delta2, 0.4e1) - 0.48e2 * c * mu1 * delta1 * z * z * mu2 - 0.48e2 * c * mu1 * delta1 * z * z * delta2 + 0.24e2 * c * mu2 * mu1 * z * delta1 - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.2e1 * pow(delta1, 0.4e1) * log(z) - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * c * pow(delta1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * c + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * c + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * mu1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 - 0.8e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * c * pow(delta2, 0.3e1) * z - 0.8e1 * c * pow(delta2, 0.3e1) * z * z + 0.24e2 * c * c * delta2 * delta2 * z + 0.24e2 * mu2 * mu2 * z * z * c * mu1 + 0.24e2 * mu2 * mu2 * z * z * c * delta1 + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * c + 0.12e2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) * c - 0.12e2 * delta2 * mu1 * mu1 * delta1 * z - 0.12e2 * mu2 * mu1 * mu1 * delta1 * z - 0.12e2 * mu2 * mu1 * delta1 * delta1 * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.2e1 * pow(mu1, 0.4e1) * z + 0.2e1 * pow(delta1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.4e1 * pow(delta1, 0.4e1) * z * z + 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.24e2 * c * mu2 * z * z * delta2 * delta2 - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.48e2 * c * mu2 * z * delta2 * delta2 - 0.36e2 * c * c * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 + 0.2e1 * z * pow(c, 0.4e1) + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z + 0.16e2 * mu2 * pow(delta2, 0.3e1) * z + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(delta1, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 - 0.24e2 * delta1 * mu2 * z * z * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - pow(c, 0.4e1) - 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * mu2 * delta1 - 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * delta2 * delta1 - 0.12e2 * delta1 * delta1 * pow(z, 0.3e1) * mu2 * mu1 - 0.12e2 * delta1 * delta1 * pow(z, 0.3e1) * delta2 * mu1 + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.24e2 * c * mu2 * delta1 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z + 0.8e1 * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * pow(delta1, 0.3e1) * mu2 * z + 0.8e1 * pow(delta1, 0.3e1) * mu1 * z - 0.4e1 * pow(delta1, 0.3e1) * delta2 * z - 0.4e1 * c * pow(mu1, 0.3e1) * z - 0.4e1 * c * pow(delta1, 0.3e1) * z + 0.12e2 * mu1 * mu1 * delta1 * delta1 * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 + 0.8e1 * pow(mu1, 0.3e1) * z * z * delta2 - 0.16e2 * pow(mu1, 0.3e1) * z * z * delta1 + 0.8e1 * pow(delta1, 0.3e1) * z * z * mu2 - 0.16e2 * pow(delta1, 0.3e1) * z * z * mu1 + 0.8e1 * pow(delta1, 0.3e1) * z * z * delta2 - 0.24e2 * mu1 * mu1 * delta1 * delta1 * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(delta1, 0.3e1) * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 * z * z + 0.16e2 * mu2 * z * z * pow(delta2, 0.3e1) + 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 - 0.48e2 * log(z) * c * mu1 * mu1 * delta1 * z - 0.48e2 * log(z) * mu1 * c * delta1 * delta1 * z + 0.24e2 * log(z) * mu1 * c * delta1 * delta1 * z * z - 0.12e2 * c * mu1 * mu1 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) + 0.12e2 * c * mu2 * delta1 * delta1 * pow(z, 0.3e1) + 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) + 0.12e2 * c * delta2 * delta1 * delta1 * pow(z, 0.3e1) + 0.48e2 * mu2 * z * z * c * delta2 * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z + 0.48e2 * log(z) * c * c * mu1 * delta1 * z - 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * mu2 * z * z * c * delta2 * mu1 - 0.12e2 * c * c * delta1 * delta2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * delta2 * z - 0.12e2 * c * mu1 * mu1 * delta1 * z + 0.12e2 * c * delta1 * delta1 * mu2 * z - 0.12e2 * c * delta1 * delta1 * mu1 * z + 0.12e2 * c * delta1 * delta1 * delta2 * z - 0.12e2 * mu1 * delta1 * delta1 * delta2 * z + 0.24e2 * c * mu1 * mu1 * delta1 * z * z + 0.24e2 * c * mu1 * delta1 * delta1 * z * z - 0.24e2 * c * mu2 * mu1 * mu1 * z * z - 0.24e2 * c * mu2 * delta1 * delta1 * z * z - 0.24e2 * c * delta2 * mu1 * mu1 * z * z - 0.24e2 * c * delta2 * delta1 * delta1 * z * z + 0.24e2 * mu1 * mu1 * mu2 * delta1 * z * z + 0.24e2 * mu1 * mu2 * delta1 * delta1 * z * z + 0.24e2 * mu1 * mu1 * delta2 * delta1 * z * z + 0.24e2 * mu1 * delta2 * delta1 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.4e1 * pow(delta2, 0.4e1) * z - 0.32e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.4e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * delta2 + 0.8e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.8e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.12e2 * mu1 * mu1 * delta1 * delta1 * pow(z, 0.3e1) + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * delta2 * delta2 * mu2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.48e2 * mu2 * mu2 * delta2 * c + 0.48e2 * mu2 * delta2 * delta2 * c + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.12e2 * log(z) * c * c * delta1 * delta1 - 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * delta1 * pow(z, 0.3e1) * delta2 + 0.24e2 * c * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * mu1 * delta1 * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * c + 0.24e2 * mu2 * mu2 * z * c * c - 0.8e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.8e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * delta2 * pow(mu1, 0.3e1) * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.16e2 * pow(delta1, 0.3e1) * log(z) * c * z + 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z + 0.24e2 * log(z) * c * c * delta1 * delta1 * z - 0.12e2 * log(z) * c * c * delta1 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 - 0.24e2 * log(z) * c * c * mu1 * delta1 - 0.2e1 * pow(delta1, 0.4e1) * log(z) * z * z + 0.4e1 * pow(delta1, 0.4e1) * log(z) * z + 0.4e1 * log(z) * pow(c, 0.4e1) * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * mu1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.48e2 * mu2 * z * c * c * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.8e1 * pow(delta2, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.12e2 * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * c * delta1 * delta1 + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.24e2 * mu1 * mu2 * z * z * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.12e2 * log(z) * c * c * mu1 * mu1 - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
			
		case 2:
			return -(0.24e2 * c * mu1 * z * z * delta2 * delta2 + 0.24e2 * c * delta1 * z * z * delta2 * delta2 - 0.18e2 * c * c * mu2 * mu2 - 0.18e2 * c * c * delta2 * delta2 + 0.16e2 * pow(mu2, 0.3e1) * c - 0.20e2 * pow(mu2, 0.3e1) * delta2 + 0.16e2 * pow(delta2, 0.3e1) * c - 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.30e2 * mu2 * mu2 * delta2 * delta2 + 0.24e2 * c * delta2 * mu1 * z * delta1 - 0.48e2 * mu2 * mu2 * z * delta2 * c - 0.5e1 * pow(mu2, 0.4e1) - 0.5e1 * pow(delta2, 0.4e1) - 0.48e2 * c * mu1 * delta1 * z * z * mu2 - 0.48e2 * c * mu1 * delta1 * z * z * delta2 + 0.24e2 * c * mu2 * mu1 * z * delta1 - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * c + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * c + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * mu1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 - 0.8e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * c * pow(delta2, 0.3e1) * z - 0.8e1 * c * pow(delta2, 0.3e1) * z * z + 0.24e2 * c * c * delta2 * delta2 * z + 0.24e2 * mu2 * mu2 * z * z * c * mu1 + 0.24e2 * mu2 * mu2 * z * z * c * delta1 + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * c + 0.12e2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) * c - 0.12e2 * delta2 * mu1 * mu1 * delta1 * z - 0.12e2 * mu2 * mu1 * mu1 * delta1 * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.2e1 * pow(mu1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.4e1) * z * z + 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.24e2 * c * mu2 * z * z * delta2 * delta2 - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.48e2 * c * mu2 * z * delta2 * delta2 - 0.36e2 * c * c * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 + 0.2e1 * z * pow(c, 0.4e1) + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z + 0.16e2 * mu2 * pow(delta2, 0.3e1) * z + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 - 0.24e2 * delta1 * mu2 * z * z * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - pow(c, 0.4e1) - 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * mu2 * delta1 - 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * delta2 * delta1 + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.24e2 * c * mu2 * delta1 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z + 0.8e1 * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * c * pow(mu1, 0.3e1) * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 + 0.8e1 * pow(mu1, 0.3e1) * z * z * delta2 - 0.16e2 * pow(mu1, 0.3e1) * z * z * delta1 + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 * z * z + 0.16e2 * mu2 * z * z * pow(delta2, 0.3e1) + 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 - 0.48e2 * log(z) * c * mu1 * mu1 * delta1 * z - 0.12e2 * c * mu1 * mu1 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) + 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) + 0.48e2 * mu2 * z * z * c * delta2 * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z + 0.48e2 * log(z) * c * c * mu1 * delta1 * z - 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * mu2 * z * z * c * delta2 * mu1 - 0.12e2 * c * c * delta1 * delta2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * delta2 * z - 0.12e2 * c * mu1 * mu1 * delta1 * z + 0.24e2 * c * mu1 * mu1 * delta1 * z * z - 0.24e2 * c * mu2 * mu1 * mu1 * z * z - 0.24e2 * c * delta2 * mu1 * mu1 * z * z + 0.24e2 * mu1 * mu1 * mu2 * delta1 * z * z + 0.24e2 * mu1 * mu1 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.4e1 * pow(delta2, 0.4e1) * z - 0.32e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta2 + 0.8e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * delta2 * delta2 * mu2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.48e2 * mu2 * mu2 * delta2 * c + 0.48e2 * mu2 * delta2 * delta2 * c + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * delta1 * pow(z, 0.3e1) * delta2 + 0.24e2 * c * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * mu1 * delta1 * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * c + 0.24e2 * mu2 * mu2 * z * c * c - 0.8e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.8e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * delta2 * pow(mu1, 0.3e1) * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 - 0.24e2 * log(z) * c * c * mu1 * delta1 + 0.4e1 * log(z) * pow(c, 0.4e1) * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * mu1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.48e2 * mu2 * z * c * c * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.8e1 * pow(delta2, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.12e2 * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.24e2 * mu1 * mu2 * z * z * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.12e2 * log(z) * c * c * mu1 * mu1 - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
			
		case 3:
			return (-0.18e2 * c * c * mu2 * mu2 + 0.16e2 * pow(mu2, 0.3e1) * c - 0.20e2 * pow(mu2, 0.3e1) * delta2 + 0.24e2 * c * delta2 * mu1 * z * delta1 - 0.48e2 * mu2 * mu2 * z * delta2 * c - 0.5e1 * pow(mu2, 0.4e1) - 0.48e2 * c * mu1 * delta1 * z * z * mu2 - 0.48e2 * c * mu1 * delta1 * z * z * delta2 + 0.24e2 * c * mu2 * mu1 * z * delta1 - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * c + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.8e1 * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * mu2 * mu2 * z * z * c * mu1 + 0.24e2 * mu2 * mu2 * z * z * c * delta1 + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * c - 0.12e2 * delta2 * mu1 * mu1 * delta1 * z - 0.12e2 * mu2 * mu1 * mu1 * delta1 * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.2e1 * pow(mu1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.36e2 * c * c * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 + 0.2e1 * z * pow(c, 0.4e1) + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 - pow(c, 0.4e1) - 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * mu2 * delta1 - 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * delta2 * delta1 + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.24e2 * c * mu2 * delta1 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z + 0.8e1 * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * c * pow(mu1, 0.3e1) * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 + 0.8e1 * pow(mu1, 0.3e1) * z * z * delta2 - 0.16e2 * pow(mu1, 0.3e1) * z * z * delta1 + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.48e2 * log(z) * c * mu1 * mu1 * delta1 * z - 0.12e2 * c * mu1 * mu1 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) + 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) + 0.48e2 * mu2 * z * z * c * delta2 * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z + 0.48e2 * log(z) * c * c * mu1 * delta1 * z - 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * mu2 * z * z * c * delta2 * mu1 - 0.12e2 * c * c * delta1 * delta2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * delta2 * z - 0.12e2 * c * mu1 * mu1 * delta1 * z + 0.24e2 * c * mu1 * mu1 * delta1 * z * z - 0.24e2 * c * mu2 * mu1 * mu1 * z * z - 0.24e2 * c * delta2 * mu1 * mu1 * z * z + 0.24e2 * mu1 * mu1 * mu2 * delta1 * z * z + 0.24e2 * mu1 * mu1 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.32e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta2 + 0.8e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.48e2 * mu2 * mu2 * delta2 * c + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * delta1 * pow(z, 0.3e1) * delta2 + 0.24e2 * c * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * mu1 * delta1 * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * c + 0.24e2 * mu2 * mu2 * z * c * c - 0.8e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.8e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * delta2 * pow(mu1, 0.3e1) * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 - 0.24e2 * log(z) * c * c * mu1 * delta1 + 0.4e1 * log(z) * pow(c, 0.4e1) * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * mu1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.48e2 * mu2 * z * c * c * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.12e2 * log(z) * c * c * mu1 * mu1 - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 4:
			return -(-0.18e2 * c * c * mu2 * mu2 + 0.16e2 * pow(mu2, 0.3e1) * c - 0.20e2 * pow(mu2, 0.3e1) * delta2 + 0.24e2 * c * delta2 * mu1 * z * delta1 - 0.48e2 * mu2 * mu2 * z * delta2 * c - 0.5e1 * pow(mu2, 0.4e1) - 0.48e2 * c * mu1 * delta1 * z * z * mu2 - 0.48e2 * c * mu1 * delta1 * z * z * delta2 + 0.24e2 * c * mu2 * mu1 * z * delta1 - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.2e1 * pow(delta1, 0.4e1) * log(z) - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * c * pow(delta1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * c + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.8e1 * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * mu2 * mu2 * z * z * c * mu1 + 0.24e2 * mu2 * mu2 * z * z * c * delta1 + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * c - 0.12e2 * delta2 * mu1 * mu1 * delta1 * z - 0.12e2 * mu2 * mu1 * mu1 * delta1 * z - 0.12e2 * mu2 * mu1 * delta1 * delta1 * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.2e1 * pow(mu1, 0.4e1) * z + 0.2e1 * pow(delta1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.4e1 * pow(delta1, 0.4e1) * z * z - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.36e2 * c * c * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 + 0.2e1 * z * pow(c, 0.4e1) + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(delta1, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 - pow(c, 0.4e1) - 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * mu2 * delta1 - 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * delta2 * delta1 - 0.12e2 * delta1 * delta1 * pow(z, 0.3e1) * mu2 * mu1 - 0.12e2 * delta1 * delta1 * pow(z, 0.3e1) * delta2 * mu1 + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.24e2 * c * mu2 * delta1 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z + 0.8e1 * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * pow(delta1, 0.3e1) * mu2 * z + 0.8e1 * pow(delta1, 0.3e1) * mu1 * z - 0.4e1 * pow(delta1, 0.3e1) * delta2 * z - 0.4e1 * c * pow(mu1, 0.3e1) * z - 0.4e1 * c * pow(delta1, 0.3e1) * z + 0.12e2 * mu1 * mu1 * delta1 * delta1 * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 + 0.8e1 * pow(mu1, 0.3e1) * z * z * delta2 - 0.16e2 * pow(mu1, 0.3e1) * z * z * delta1 + 0.8e1 * pow(delta1, 0.3e1) * z * z * mu2 - 0.16e2 * pow(delta1, 0.3e1) * z * z * mu1 + 0.8e1 * pow(delta1, 0.3e1) * z * z * delta2 - 0.24e2 * mu1 * mu1 * delta1 * delta1 * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(delta1, 0.3e1) * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.48e2 * log(z) * c * mu1 * mu1 * delta1 * z - 0.48e2 * log(z) * mu1 * c * delta1 * delta1 * z + 0.24e2 * log(z) * mu1 * c * delta1 * delta1 * z * z - 0.12e2 * c * mu1 * mu1 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) + 0.12e2 * c * mu2 * delta1 * delta1 * pow(z, 0.3e1) + 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * delta2 * delta1 * delta1 * pow(z, 0.3e1) + 0.48e2 * mu2 * z * z * c * delta2 * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z + 0.48e2 * log(z) * c * c * mu1 * delta1 * z - 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * mu2 * z * z * c * delta2 * mu1 - 0.12e2 * c * c * delta1 * delta2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * delta2 * z - 0.12e2 * c * mu1 * mu1 * delta1 * z + 0.12e2 * c * delta1 * delta1 * mu2 * z - 0.12e2 * c * delta1 * delta1 * mu1 * z + 0.12e2 * c * delta1 * delta1 * delta2 * z - 0.12e2 * mu1 * delta1 * delta1 * delta2 * z + 0.24e2 * c * mu1 * mu1 * delta1 * z * z + 0.24e2 * c * mu1 * delta1 * delta1 * z * z - 0.24e2 * c * mu2 * mu1 * mu1 * z * z - 0.24e2 * c * mu2 * delta1 * delta1 * z * z - 0.24e2 * c * delta2 * mu1 * mu1 * z * z - 0.24e2 * c * delta2 * delta1 * delta1 * z * z + 0.24e2 * mu1 * mu1 * mu2 * delta1 * z * z + 0.24e2 * mu1 * mu2 * delta1 * delta1 * z * z + 0.24e2 * mu1 * mu1 * delta2 * delta1 * z * z + 0.24e2 * mu1 * delta2 * delta1 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.32e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.4e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * delta2 + 0.8e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.8e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.12e2 * mu1 * mu1 * delta1 * delta1 * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.48e2 * mu2 * mu2 * delta2 * c + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.12e2 * log(z) * c * c * delta1 * delta1 - 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * delta1 * pow(z, 0.3e1) * delta2 + 0.24e2 * c * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * mu1 * delta1 * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * c + 0.24e2 * mu2 * mu2 * z * c * c - 0.8e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.8e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * delta2 * pow(mu1, 0.3e1) * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.16e2 * pow(delta1, 0.3e1) * log(z) * c * z + 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(z) * c * c * delta1 * delta1 * z - 0.12e2 * log(z) * c * c * delta1 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 - 0.24e2 * log(z) * c * c * mu1 * delta1 - 0.2e1 * pow(delta1, 0.4e1) * log(z) * z * z + 0.4e1 * pow(delta1, 0.4e1) * log(z) * z + 0.4e1 * log(z) * pow(c, 0.4e1) * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * mu1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.48e2 * mu2 * z * c * c * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * c * delta1 * delta1 + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.12e2 * log(z) * c * c * mu1 * mu1 - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 5:
			return -(-0.6e1 * c * mu2 * z - 0.6e1 * c * delta2 * z + 0.6e1 * mu1 * c * z + 0.6e1 * mu1 * mu2 * z + 0.6e1 * mu1 * delta2 * z + 0.2e1 * delta1 * c * z + 0.2e1 * delta1 * mu2 * z + 0.2e1 * delta1 * delta2 * z - 0.6e1 * mu1 * mu1 * z - delta1 * delta1 * z - 0.4e1 * mu1 * z * delta1 + 0.6e1 * log(z) * c * c - 0.12e2 * log(z) * c * mu1 - 0.4e1 * delta1 * log(z) * c + 0.6e1 * log(z) * mu1 * mu1 + 0.4e1 * delta1 * log(z) * mu1 + delta1 * delta1 * log(z)) * pow(delta2, -0.2e1) / 0.12e2;
			
		case 6:
			return -(-0.24e2 * log(fabs(-0.1e1 + z)) * c * c * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * z * z - 0.24e2 * c * c * z + 0.18e2 * c * c + 0.12e2 * c * mu1 + 0.12e2 * c * delta1 + 0.48e2 * c * mu2 * z + 0.16e2 * c * delta2 * z + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) + 0.2e1 * delta2 * delta2 * pow(z, 0.3e1) + 0.24e2 * mu1 * z * z * mu2 + 0.8e1 * mu1 * z * z * delta2 + 0.24e2 * delta1 * z * z * mu2 + 0.8e1 * delta1 * z * z * delta2 - 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 - 0.4e1 * mu1 * pow(z, 0.3e1) * delta2 + 0.8e1 * mu2 * pow(z, 0.3e1) * delta2 - 0.12e2 * mu2 * pow(z, 0.3e1) * delta1 - 0.4e1 * delta2 * pow(z, 0.3e1) * delta1 + 0.5e1 * delta2 * delta2 + 0.30e2 * mu2 * mu2 + 0.32e2 * delta2 * log(fabs(-0.1e1 + z)) * c * z - 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * c * z * z - 0.48e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z + 0.24e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z * z + 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.16e2 * mu2 * z * z * delta2 - 0.24e2 * mu2 * mu2 * z * z - 0.4e1 * delta2 * delta2 * z * z + 0.20e2 * mu2 * delta2 + 0.24e2 * z * z * mu2 * c + 0.8e1 * z * z * delta2 * c - 0.24e2 * mu2 * mu2 * z - 0.4e1 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c + 0.12e2 * c * mu1 * pow(z, 0.3e1) + 0.12e2 * c * delta1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * pow(z, 0.3e1) - 0.4e1 * c * delta2 * pow(z, 0.3e1) + 0.24e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * c - 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z + 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z * z - 0.12e2 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z + 0.6e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z * z + 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.6e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.24e2 * mu1 * c * z * z - 0.24e2 * delta1 * c * z * z - 0.16e2 * mu2 * delta2 * z - 0.48e2 * c * mu2 - 0.16e2 * c * delta2 - 0.12e2 * mu1 * mu2 - 0.4e1 * mu1 * delta2 - 0.12e2 * delta1 * mu2 - 0.4e1 * delta1 * delta2) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

		case 7:
			return (0.24e2 * c * mu1 * z * z * delta2 * delta2 + 0.24e2 * c * delta1 * z * z * delta2 * delta2 - 0.18e2 * c * c * mu2 * mu2 - 0.18e2 * c * c * delta2 * delta2 + 0.16e2 * pow(mu2, 0.3e1) * c - 0.20e2 * pow(mu2, 0.3e1) * delta2 + 0.16e2 * pow(delta2, 0.3e1) * c - 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.30e2 * mu2 * mu2 * delta2 * delta2 - 0.48e2 * mu2 * mu2 * z * delta2 * c - 0.5e1 * pow(mu2, 0.4e1) - 0.5e1 * pow(delta2, 0.4e1) + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * c + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * c - 0.4e1 * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * mu1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 - 0.8e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * c * pow(delta2, 0.3e1) * z - 0.8e1 * c * pow(delta2, 0.3e1) * z * z + 0.24e2 * c * c * delta2 * delta2 * z + 0.24e2 * mu2 * mu2 * z * z * c * mu1 + 0.24e2 * mu2 * mu2 * z * z * c * delta1 + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * c + 0.12e2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) * c + 0.12e2 * c * c * delta1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * c * delta1 * mu2 * pow(z, 0.3e1) + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.4e1 * pow(c, 0.4e1) * z * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 + 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.24e2 * c * mu2 * z * z * delta2 * delta2 - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.48e2 * c * mu2 * z * delta2 * delta2 - 0.36e2 * c * c * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 + 0.4e1 * z * pow(c, 0.4e1) + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z + 0.16e2 * mu2 * pow(delta2, 0.3e1) * z + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 - 0.4e1 * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.24e2 * delta1 * mu2 * z * z * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - pow(c, 0.4e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * delta1 - 0.16e2 * pow(c, 0.3e1) * mu2 * z - 0.16e2 * pow(c, 0.3e1) * delta2 * z - 0.24e2 * c * mu2 * delta1 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.16e2 * mu2 * z * z * pow(delta2, 0.3e1) + 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 - 0.24e2 * c * c * delta1 * delta2 * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * c * c * mu1 * mu2 * z * z - 0.24e2 * c * c * mu1 * delta2 * z * z - 0.24e2 * c * c * delta1 * mu2 * z * z + 0.48e2 * mu2 * z * z * c * delta2 * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z + 0.48e2 * mu2 * z * z * c * delta2 * mu1 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.4e1 * pow(delta2, 0.4e1) * z - 0.32e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * delta1 - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * delta2 * delta2 * mu2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.48e2 * mu2 * mu2 * delta2 * c + 0.48e2 * mu2 * delta2 * delta2 * c + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * delta1 * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * c + 0.24e2 * mu2 * mu2 * z * c * c - 0.8e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.8e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * mu1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.48e2 * mu2 * z * c * c * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * pow(delta2, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.12e2 * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.24e2 * mu1 * mu2 * z * z * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 8:
			return (-0.18e2 * c * c * mu2 * mu2 + 0.16e2 * pow(mu2, 0.3e1) * c - 0.20e2 * pow(mu2, 0.3e1) * delta2 - 0.48e2 * mu2 * mu2 * z * delta2 * c - 0.5e1 * pow(mu2, 0.4e1) + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * c - 0.4e1 * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.8e1 * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * mu2 * mu2 * z * z * c * mu1 + 0.24e2 * mu2 * mu2 * z * z * c * delta1 + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * c + 0.12e2 * c * c * delta1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * c * delta1 * mu2 * pow(z, 0.3e1) + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.4e1 * pow(c, 0.4e1) * z * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.36e2 * c * c * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 + 0.4e1 * z * pow(c, 0.4e1) + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 - 0.4e1 * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - pow(c, 0.4e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * delta1 - 0.16e2 * pow(c, 0.3e1) * mu2 * z - 0.16e2 * pow(c, 0.3e1) * delta2 * z - 0.24e2 * c * mu2 * delta1 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.24e2 * c * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) - 0.24e2 * c * c * mu1 * mu2 * z * z - 0.24e2 * c * c * mu1 * delta2 * z * z - 0.24e2 * c * c * delta1 * mu2 * z * z + 0.48e2 * mu2 * z * z * c * delta2 * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z + 0.48e2 * mu2 * z * z * c * delta2 * mu1 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.32e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta1 - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.48e2 * mu2 * mu2 * delta2 * c + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * delta1 * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * c + 0.24e2 * mu2 * mu2 * z * c * c - 0.8e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.8e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * mu1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.48e2 * mu2 * z * c * c * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 9:
			return (-0.12e2 * c * delta2 * mu1 * z * delta1 - 0.12e2 * c * mu2 * mu1 * z * delta1 + 0.6e1 * delta2 * mu1 * mu1 * delta1 * z + 0.6e1 * mu2 * mu1 * mu1 * delta1 * z + 0.6e1 * c * c * mu1 * mu2 * z + 0.6e1 * c * c * mu1 * delta2 * z + 0.6e1 * c * c * delta1 * mu2 * z - pow(mu1, 0.4e1) * z + z * pow(c, 0.4e1) + log(z) * pow(c, 0.4e1) + log(z) * pow(mu1, 0.4e1) - 0.2e1 * pow(c, 0.3e1) * mu1 * z - 0.2e1 * pow(c, 0.3e1) * delta1 * z - 0.2e1 * pow(c, 0.3e1) * mu2 * z - 0.2e1 * pow(c, 0.3e1) * delta2 * z + 0.2e1 * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * pow(mu1, 0.3e1) * delta1 * z + 0.2e1 * c * pow(mu1, 0.3e1) * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 + 0.6e1 * log(z) * c * c * mu1 * mu1 + 0.6e1 * c * c * delta1 * delta2 * z - 0.6e1 * c * mu1 * mu1 * mu2 * z - 0.6e1 * c * mu1 * mu1 * delta2 * z + 0.6e1 * c * mu1 * mu1 * delta1 * z + 0.2e1 * delta2 * pow(mu1, 0.3e1) * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta1 + 0.12e2 * log(z) * c * c * mu1 * delta1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.12e2;

		case 10:
			return (-0.12e2 * c * delta2 * mu1 * z * delta1 - 0.12e2 * c * mu2 * mu1 * z * delta1 + 0.6e1 * delta2 * mu1 * mu1 * delta1 * z + 0.6e1 * mu2 * mu1 * mu1 * delta1 * z + 0.6e1 * mu2 * mu1 * delta1 * delta1 * z + 0.6e1 * c * c * mu1 * mu2 * z + 0.6e1 * c * c * mu1 * delta2 * z + 0.6e1 * c * c * delta1 * mu2 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu1 + 0.6e1 * log(z) * c * c * delta1 * delta1 + 0.6e1 * log(z) * mu1 * mu1 * delta1 * delta1 - pow(mu1, 0.4e1) * z - pow(delta1, 0.4e1) * z + z * pow(c, 0.4e1) - 0.12e2 * log(z) * c * mu1 * delta1 * delta1 + log(z) * pow(c, 0.4e1) + log(z) * pow(mu1, 0.4e1) - 0.2e1 * pow(c, 0.3e1) * mu1 * z - 0.2e1 * pow(c, 0.3e1) * delta1 * z - 0.2e1 * pow(c, 0.3e1) * mu2 * z - 0.2e1 * pow(c, 0.3e1) * delta2 * z + 0.2e1 * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * pow(mu1, 0.3e1) * delta1 * z + 0.2e1 * pow(delta1, 0.3e1) * mu2 * z - 0.4e1 * pow(delta1, 0.3e1) * mu1 * z + 0.2e1 * pow(delta1, 0.3e1) * delta2 * z + 0.2e1 * c * pow(mu1, 0.3e1) * z + 0.2e1 * c * pow(delta1, 0.3e1) * z - 0.6e1 * mu1 * mu1 * delta1 * delta1 * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * c + pow(delta1, 0.4e1) * log(z) + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 + 0.6e1 * log(z) * c * c * mu1 * mu1 + 0.6e1 * c * c * delta1 * delta2 * z - 0.6e1 * c * mu1 * mu1 * mu2 * z - 0.6e1 * c * mu1 * mu1 * delta2 * z + 0.6e1 * c * mu1 * mu1 * delta1 * z - 0.6e1 * c * delta1 * delta1 * mu2 * z + 0.6e1 * c * delta1 * delta1 * mu1 * z - 0.6e1 * c * delta1 * delta1 * delta2 * z + 0.6e1 * mu1 * delta1 * delta1 * delta2 * z + 0.2e1 * delta2 * pow(mu1, 0.3e1) * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta1 + 0.12e2 * log(z) * c * c * mu1 * delta1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.12e2;

	
		case 11:
			return (-0.18e2 * c * c * mu2 * mu2 + 0.16e2 * pow(mu2, 0.3e1) * c - 0.20e2 * pow(mu2, 0.3e1) * delta2 - 0.48e2 * mu2 * mu2 * z * delta2 * c - 0.5e1 * pow(mu2, 0.4e1) + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * c - 0.4e1 * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.8e1 * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * mu2 * mu2 * z * z * c * mu1 + 0.24e2 * mu2 * mu2 * z * z * c * delta1 + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * c + 0.12e2 * c * c * delta1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * c * delta1 * mu2 * pow(z, 0.3e1) + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.4e1 * pow(c, 0.4e1) * z * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.36e2 * c * c * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 + 0.4e1 * z * pow(c, 0.4e1) + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 - 0.4e1 * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - pow(c, 0.4e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * delta1 - 0.16e2 * pow(c, 0.3e1) * mu2 * z - 0.16e2 * pow(c, 0.3e1) * delta2 * z - 0.24e2 * c * mu2 * delta1 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.24e2 * c * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) - 0.24e2 * c * c * mu1 * mu2 * z * z - 0.24e2 * c * c * mu1 * delta2 * z * z - 0.24e2 * c * c * delta1 * mu2 * z * z + 0.48e2 * mu2 * z * z * c * delta2 * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z + 0.48e2 * mu2 * z * z * c * delta2 * mu1 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.32e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta1 - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.48e2 * mu2 * mu2 * delta2 * c + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * delta1 * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * c + 0.24e2 * mu2 * mu2 * z * c * c - 0.8e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.8e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * mu1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.48e2 * mu2 * z * c * c * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

		case 12:
			return (0.24e2 * c * mu1 * z * z * delta2 * delta2 + 0.24e2 * c * delta1 * z * z * delta2 * delta2 - 0.18e2 * c * c * mu2 * mu2 - 0.18e2 * c * c * delta2 * delta2 + 0.16e2 * pow(mu2, 0.3e1) * c - 0.20e2 * pow(mu2, 0.3e1) * delta2 + 0.16e2 * pow(delta2, 0.3e1) * c - 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.30e2 * mu2 * mu2 * delta2 * delta2 - 0.48e2 * mu2 * mu2 * z * delta2 * c - 0.5e1 * pow(mu2, 0.4e1) - 0.5e1 * pow(delta2, 0.4e1) + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * c + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * c - 0.4e1 * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * mu1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 - 0.8e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * c * pow(delta2, 0.3e1) * z - 0.8e1 * c * pow(delta2, 0.3e1) * z * z + 0.24e2 * c * c * delta2 * delta2 * z + 0.24e2 * mu2 * mu2 * z * z * c * mu1 + 0.24e2 * mu2 * mu2 * z * z * c * delta1 + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * c + 0.12e2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) * c + 0.12e2 * c * c * delta1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * c * delta1 * mu2 * pow(z, 0.3e1) + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.4e1 * pow(c, 0.4e1) * z * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 + 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.24e2 * c * mu2 * z * z * delta2 * delta2 - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.48e2 * c * mu2 * z * delta2 * delta2 - 0.36e2 * c * c * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 + 0.4e1 * z * pow(c, 0.4e1) + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z + 0.16e2 * mu2 * pow(delta2, 0.3e1) * z + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 - 0.4e1 * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.24e2 * delta1 * mu2 * z * z * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - pow(c, 0.4e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * delta1 - 0.16e2 * pow(c, 0.3e1) * mu2 * z - 0.16e2 * pow(c, 0.3e1) * delta2 * z - 0.24e2 * c * mu2 * delta1 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.16e2 * mu2 * z * z * pow(delta2, 0.3e1) + 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 - 0.24e2 * c * c * delta1 * delta2 * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * c * c * mu1 * mu2 * z * z - 0.24e2 * c * c * mu1 * delta2 * z * z - 0.24e2 * c * c * delta1 * mu2 * z * z + 0.48e2 * mu2 * z * z * c * delta2 * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z + 0.48e2 * mu2 * z * z * c * delta2 * mu1 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.4e1 * pow(delta2, 0.4e1) * z - 0.32e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * delta1 + 0.4e1 * pow(mu2, 0.4e1) * z + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * delta1 - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * delta2 * delta2 * mu2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.48e2 * mu2 * mu2 * delta2 * c + 0.48e2 * mu2 * delta2 * delta2 * c + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * delta1 * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * c + 0.24e2 * mu2 * mu2 * z * c * c - 0.8e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.8e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * mu1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.48e2 * mu2 * z * c * c * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * pow(delta2, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.12e2 * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.24e2 * mu1 * mu2 * z * z * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		default:
			cout<<"This basic piece doesn't exist"; 
	}
}


/*----------------------------------------------------------------------------------------------------------------------------------------*/


double triangular_kernel_polynomial :: AQBE_integrate_piece_value(double z, int piecenum)
{

	if(fabs(z) < DBL_EPSILON)	
	{
		z = 1.0e-5;
	}
	if(fabs(1-z) < DBL_EPSILON)	
	{
		z = 1 - 1.0e-5;
	}

	
	switch (piecenum)
	{
		// Expressions for pdf(z) 
		case 1:
			return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.8e1 * delta1 * c * mu1 - 0.12e2 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.4e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z - 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.3e1 * mu1 * mu1 * delta2 * z - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.4e1 * delta1 * c * c + 0.4e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.16e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.6e1 * c * delta2 * mu1 * z - 0.8e1 * delta1 * mu2 * c * z + 0.8e1 * delta1 * mu2 * mu1 * z - 0.8e1 * delta1 * delta2 * c * z + 0.8e1 * delta1 * delta2 * mu1 * z - 0.3e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 + 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.4e1 * delta1 * z * z * delta2 * delta2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c - 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 - 0.4e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * mu1 * z * z * delta2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c - pow(z, 0.3e1) * pow(mu2, 0.3e1) - pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.8e1 * delta1 * z * z * mu2 * delta2 + 0.6e1 * mu2 * z * z * delta2 * c - 0.6e1 * mu1 * z * z * mu2 * delta2 - 0.8e1 * delta1 * pow(z, 0.3e1) * mu2 * delta2 + 0.6e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * mu1 * z * z * delta2 + 0.8e1 * delta1 * c * z * z * mu2 + 0.8e1 * delta1 * c * z * z * delta2 - 0.16e2 * delta1 * mu1 * z * z * mu2 + 0.8e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.16e2 * delta1 * mu1 * z * z * delta2 + 0.8e1 * delta1 * mu1 * pow(z, 0.3e1) * delta2 - 0.8e1 * delta1 * mu1 * z * z * c + 0.12e2 * delta1 * mu1 * mu1 * z * z - 0.4e1 * delta1 * mu1 * mu1 * pow(z, 0.3e1) - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1)) * (c - mu1 - mu2 * z + mu1 * z - delta2 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;
 

		case 2:
			return (pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.6e1 * delta1 * c * mu1 - 0.9e1 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z - 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.3e1 * mu1 * mu1 * delta2 * z - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.3e1 * delta1 * c * c + 0.3e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.12e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.6e1 * c * delta2 * mu1 * z - 0.6e1 * delta1 * mu2 * c * z + 0.6e1 * delta1 * mu2 * mu1 * z - 0.6e1 * delta1 * delta2 * c * z + 0.6e1 * delta1 * delta2 * mu1 * z - 0.3e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 + 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * delta1 * z * z * delta2 * delta2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c - 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 - 0.3e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * mu1 * z * z * delta2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c - pow(z, 0.3e1) * pow(mu2, 0.3e1) - pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.6e1 * delta1 * z * z * mu2 * delta2 + 0.6e1 * mu2 * z * z * delta2 * c - 0.6e1 * mu1 * z * z * mu2 * delta2 - 0.6e1 * delta1 * pow(z, 0.3e1) * mu2 * delta2 + 0.6e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * mu1 * z * z * delta2 + 0.6e1 * delta1 * c * z * z * mu2 + 0.6e1 * delta1 * c * z * z * delta2 - 0.12e2 * delta1 * mu1 * z * z * mu2 + 0.6e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.12e2 * delta1 * mu1 * z * z * delta2 + 0.6e1 * delta1 * mu1 * pow(z, 0.3e1) * delta2 - 0.6e1 * delta1 * mu1 * z * z * c + 0.9e1 * delta1 * mu1 * mu1 * z * z - 0.3e1 * delta1 * mu1 * mu1 * pow(z, 0.3e1) - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + pow(delta1, 0.3e1) + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * delta1 * delta1 - 0.3e1 * pow(delta1, 0.3e1) * z + 0.9e1 * mu1 * delta1 * delta1 * z - 0.6e1 * delta1 * delta1 * c * z - 0.3e1 * delta1 * delta1 * mu2 * z - 0.3e1 * delta1 * delta1 * delta2 * z + 0.3e1 * pow(delta1, 0.3e1) * z * z - pow(delta1, 0.3e1) * pow(z, 0.3e1) + 0.3e1 * c * delta1 * delta1 * z * z - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 + 0.6e1 * delta1 * delta1 * z * z * delta2 + 0.6e1 * delta1 * delta1 * z * z * mu2 - 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 - 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * mu2) * (c - mu1 + mu1 * z + delta1 - delta1 * z - mu2 * z - delta2 * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;


		case 3:
			return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.6e1 * delta1 * c * mu1 - 0.9e1 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z - 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.4e1 * mu1 * mu1 * delta2 * z - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.3e1 * delta1 * c * c + 0.3e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.12e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.8e1 * c * delta2 * mu1 * z - 0.6e1 * delta1 * mu2 * c * z + 0.6e1 * delta1 * mu2 * mu1 * z - 0.8e1 * delta1 * delta2 * c * z + 0.8e1 * delta1 * delta2 * mu1 * z - 0.4e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * mu1 * z * z * delta2 - 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c - pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.8e1 * delta1 * z * z * mu2 * delta2 + 0.8e1 * mu2 * z * z * delta2 * c - 0.8e1 * mu1 * z * z * mu2 * delta2 - 0.8e1 * delta1 * pow(z, 0.3e1) * mu2 * delta2 + 0.8e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * mu1 * z * z * delta2 + 0.6e1 * delta1 * c * z * z * mu2 + 0.8e1 * delta1 * c * z * z * delta2 - 0.12e2 * delta1 * mu1 * z * z * mu2 + 0.6e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.16e2 * delta1 * mu1 * z * z * delta2 + 0.8e1 * delta1 * mu1 * pow(z, 0.3e1) * delta2 - 0.6e1 * delta1 * mu1 * z * z * c + 0.9e1 * delta1 * mu1 * mu1 * z * z - 0.3e1 * delta1 * mu1 * mu1 * pow(z, 0.3e1) - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + pow(delta1, 0.3e1) + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * delta1 * delta1 - 0.3e1 * pow(delta1, 0.3e1) * z + 0.9e1 * mu1 * delta1 * delta1 * z - 0.6e1 * delta1 * delta1 * c * z - 0.3e1 * delta1 * delta1 * mu2 * z - 0.4e1 * delta1 * delta1 * delta2 * z + 0.3e1 * pow(delta1, 0.3e1) * z * z - pow(delta1, 0.3e1) * pow(z, 0.3e1) + 0.3e1 * c * delta1 * delta1 * z * z - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 + 0.8e1 * delta1 * delta1 * z * z * delta2 + 0.6e1 * delta1 * delta1 * z * z * mu2 - 0.4e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 - 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * mu2) * (c - mu1 + delta1 - mu2 * z + mu1 * z - delta1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;


		case 4:
			return (pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.8e1 * delta1 * c * mu1 - 0.12e2 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.4e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z - 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.4e1 * mu1 * mu1 * delta2 * z - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.4e1 * delta1 * c * c + 0.4e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.16e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.8e1 * c * delta2 * mu1 * z - 0.8e1 * delta1 * mu2 * c * z + 0.8e1 * delta1 * mu2 * mu1 * z - 0.12e2 * delta1 * delta2 * c * z + 0.12e2 * delta1 * delta2 * mu1 * z - 0.4e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * mu1 * z * z * delta2 - 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c - pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.12e2 * delta1 * z * z * mu2 * delta2 + 0.8e1 * mu2 * z * z * delta2 * c - 0.8e1 * mu1 * z * z * mu2 * delta2 - 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * delta2 + 0.8e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * mu1 * z * z * delta2 + 0.8e1 * delta1 * c * z * z * mu2 + 0.12e2 * delta1 * c * z * z * delta2 - 0.16e2 * delta1 * mu1 * z * z * mu2 + 0.8e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * mu1 * z * z * delta2 + 0.12e2 * delta1 * mu1 * pow(z, 0.3e1) * delta2 - 0.8e1 * delta1 * mu1 * z * z * c + 0.12e2 * delta1 * mu1 * mu1 * z * z - 0.4e1 * delta1 * mu1 * mu1 * pow(z, 0.3e1) - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1)) * (c - mu2 * z - mu1 + mu1 * z) * pow(z, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

			
		case 5:
			return (0.6e1 * c * c - 0.12e2 * c * mu1 + 0.6e1 * mu1 * mu1 + 0.4e1 * delta1 * c - 0.4e1 * delta1 * mu1 - 0.12e2 * c * mu2 * z - 0.12e2 * c * delta2 * z + 0.12e2 * mu1 * c * z + 0.12e2 * mu1 * mu2 * z + 0.12e2 * mu1 * delta2 * z - 0.4e1 * delta1 * c * z - 0.4e1 * delta1 * mu2 * z - 0.4e1 * delta1 * delta2 * z + 0.8e1 * mu1 * z * delta1 - 0.12e2 * mu1 * z * z * delta2 - 0.12e2 * mu1 * z * z * mu2 + 0.4e1 * delta1 * z * z * delta2 + 0.4e1 * delta1 * z * z * mu2 - 0.4e1 * delta1 * z * z * mu1 - 0.12e2 * mu1 * mu1 * z + 0.6e1 * mu1 * mu1 * z * z + delta1 * delta1 * z * z - 0.2e1 * delta1 * delta1 * z + delta1 * delta1 + 0.12e2 * mu2 * z * z * delta2 + 0.6e1 * mu2 * mu2 * z * z + 0.6e1 * delta2 * delta2 * z * z) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

		case 6:
			return -(delta2 * delta2 * z * z + 0.6e1 * mu1 * mu1 * z * z - 0.4e1 * mu1 * z * z * delta2 + 0.4e1 * delta1 * z * z * delta2 - 0.12e2 * mu1 * z * z * mu2 - 0.12e2 * delta1 * z * z * mu1 + 0.12e2 * delta1 * z * z * mu2 + 0.6e1 * mu2 * mu2 * z * z + 0.4e1 * mu2 * z * z * delta2 + 0.4e1 * mu1 * delta2 * z + 0.12e2 * mu1 * c * z + 0.24e2 * mu1 * z * delta1 + 0.12e2 * mu1 * mu2 * z - 0.4e1 * delta1 * delta2 * z - 0.12e2 * delta1 * mu2 * z - 0.4e1 * c * delta2 * z - 0.12e2 * mu1 * mu1 * z - 0.12e2 * c * mu2 * z - 0.12e2 * delta1 * c * z + 0.12e2 * delta1 * c + 0.6e1 * c * c - 0.12e2 * c * mu1 + 0.6e1 * mu1 * mu1 - 0.12e2 * delta1 * mu1) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

			 
		case 7:
			return (-mu2 * mu2 * z - 0.2e1 * mu2 * delta2 * z - 0.2e1 * c * mu2 * z + 0.4e1 * c * mu2 - 0.4e1 * mu1 * mu2 + 0.4e1 * mu1 * mu2 * z + 0.4e1 * delta1 * mu2 - 0.4e1 * delta1 * mu2 * z - delta2 * delta2 * z - 0.2e1 * c * delta2 * z + 0.4e1 * c * delta2 - 0.4e1 * mu1 * delta2 + 0.4e1 * mu1 * delta2 * z + 0.4e1 * delta1 * delta2 - 0.4e1 * delta1 * delta2 * z + 0.3e1 * c * c * z - 0.4e1 * c * c + 0.4e1 * c * mu1 - 0.4e1 * mu1 * c * z - 0.4e1 * delta1 * c + 0.4e1 * delta1 * c * z) * pow(-mu2 - delta2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 8:
			return (0.12e2 * mu1 * delta2 * z + 0.4e1 * mu1 * mu2 * z - 0.12e2 * delta1 * delta2 * z + 0.3e1 * c * c * z - 0.4e1 * mu1 * c * z + 0.4e1 * delta1 * c * z - 0.4e1 * delta1 * mu2 * z - mu2 * mu2 * z - 0.2e1 * c * mu2 * z - 0.8e1 * c * delta2 * z - 0.4e1 * mu2 * delta2 * z + 0.4e1 * c * mu2 - 0.4e1 * c * c + 0.4e1 * c * mu1 - 0.4e1 * delta1 * c + 0.4e1 * delta1 * mu2 + 0.12e2 * c * delta2 - 0.4e1 * mu1 * mu2 - 0.12e2 * mu1 * delta2 + 0.12e2 * delta1 * delta2) * pow(-mu2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 9:
			return pow(c - mu1 + delta1, 0.2e1) * (0.2e1 * c * c * z + c * c - 0.2e1 * c * mu1 + mu1 * mu1 + 0.2e1 * delta1 * c - 0.2e1 * delta1 * mu1 - 0.4e1 * c * mu2 * z - 0.4e1 * c * delta2 * z + 0.4e1 * mu1 * mu2 * z + 0.4e1 * mu1 * delta2 * z - 0.4e1 * delta1 * mu2 * z - 0.4e1 * delta1 * delta2 * z + 0.4e1 * mu1 * z * delta1 - 0.4e1 * mu1 * z * z * delta2 - 0.4e1 * mu1 * z * z * mu2 + 0.4e1 * delta1 * z * z * delta2 + 0.4e1 * delta1 * z * z * mu2 - 0.2e1 * delta1 * z * z * mu1 - 0.2e1 * mu1 * mu1 * z + mu1 * mu1 * z * z + delta1 * delta1 * z * z - 0.2e1 * delta1 * delta1 * z + delta1 * delta1 + 0.3e1 * c * c * z * z + 0.2e1 * mu1 * c * z * z - 0.2e1 * delta1 * c * z * z + 0.12e2 * mu2 * z * z * delta2 + 0.6e1 * mu2 * mu2 * z * z + 0.6e1 * delta2 * delta2 * z * z - 0.8e1 * c * mu2 * z * z - 0.8e1 * c * delta2 * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

		case 10:
			return (c - mu1) * (pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.8e1 * delta1 * c * mu1 - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.4e1 * delta1 * c * c + 0.4e1 * delta1 * mu1 * mu1 + 0.12e2 * delta1 * mu1 * mu2 * z + 0.12e2 * delta1 * mu1 * delta2 * z + 0.4e1 * delta1 * mu1 * c * z + 0.8e1 * c * mu2 * z * mu1 - 0.12e2 * c * mu2 * z * delta1 + 0.8e1 * c * delta2 * z * mu1 - 0.12e2 * c * delta2 * z * delta1 - 0.4e1 * mu1 * mu1 * mu2 * z - 0.4e1 * mu1 * mu1 * delta2 * z - 0.2e1 * mu1 * mu1 * c * z - z * z * c * c * mu1 - z * z * c * mu1 * mu1 + 0.4e1 * z * z * delta1 * c * c - 0.8e1 * z * z * c * c * delta2 + 0.4e1 * z * z * delta1 * mu1 * mu1 + 0.4e1 * z * z * mu1 * mu1 * delta2 + 0.6e1 * z * z * mu2 * mu2 * c - 0.6e1 * z * z * mu2 * mu2 * mu1 + 0.12e2 * z * z * mu2 * mu2 * delta1 - 0.8e1 * z * z * c * c * mu2 + 0.4e1 * z * z * mu1 * mu1 * mu2 - 0.8e1 * mu1 * mu1 * z * delta1 + 0.3e1 * z * z * pow(c, 0.3e1) - z * z * pow(mu1, 0.3e1) + 0.2e1 * pow(mu1, 0.3e1) * z + 0.2e1 * pow(c, 0.3e1) * z - 0.2e1 * c * c * z * mu1 + 0.4e1 * c * c * z * delta1 - 0.4e1 * c * c * mu2 * z - 0.4e1 * c * c * delta2 * z + 0.4e1 * z * z * delta1 * c * mu1 + 0.4e1 * z * z * c * mu1 * delta2 - 0.12e2 * z * z * c * delta1 * delta2 - 0.12e2 * z * z * mu1 * delta1 * delta2 + 0.12e2 * z * z * mu2 * delta2 * c - 0.12e2 * z * z * mu2 * delta2 * mu1 + 0.24e2 * z * z * mu2 * delta2 * delta1 - 0.12e2 * z * z * mu1 * delta1 * mu2 + 0.4e1 * z * z * c * mu2 * mu1 - 0.12e2 * z * z * c * mu2 * delta1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;
	
		case 11:
			return (0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * delta1 * pow(c, 0.3e1) * z * z - 0.12e2 * c * mu1 * delta2 * delta2 + 0.12e2 * delta1 * c * delta2 * delta2 + 0.12e2 * delta1 * mu2 * mu2 * z * delta2 + 0.12e2 * c * mu2 * mu2 * z * delta2 - 0.12e2 * mu1 * mu2 * mu2 * z * delta2 - pow(mu2, 0.4e1) * z * z - 0.12e2 * delta1 * mu1 * delta2 * delta2 + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * c * c * delta2 * delta2 * z + 0.6e1 * c * c * delta2 * delta2 * z * z - 0.12e2 * c * c * mu2 * mu2 * z + 0.6e1 * c * c * mu2 * mu2 * z * z - 0.12e2 * mu1 * mu1 * delta2 * delta2 * z + 0.6e1 * mu1 * mu1 * delta2 * delta2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * c * c * delta1 * mu2 * z * z + 0.12e2 * c * c * delta1 * delta2 * z - 0.12e2 * c * c * delta1 * delta2 * z * z - 0.24e2 * c * c * mu2 * delta2 * z + 0.12e2 * c * c * mu2 * delta2 * z * z + 0.24e2 * c * mu1 * delta2 * delta2 * z - 0.12e2 * c * mu1 * delta2 * delta2 * z * z + 0.12e2 * c * mu1 * mu2 * mu2 * z - 0.12e2 * c * mu1 * mu2 * mu2 * z * z - 0.24e2 * delta1 * c * delta2 * delta2 * z + 0.12e2 * delta1 * c * delta2 * delta2 * z * z - 0.12e2 * delta1 * c * mu2 * mu2 * z + 0.12e2 * delta1 * c * mu2 * mu2 * z * z + 0.24e2 * delta1 * mu1 * delta2 * delta2 * z - 0.12e2 * delta1 * mu1 * delta2 * delta2 * z * z + 0.24e2 * c * mu1 * mu2 * delta2 * z - 0.24e2 * c * mu1 * mu2 * delta2 * z * z - 0.24e2 * delta1 * c * mu2 * delta2 * z + 0.24e2 * delta1 * c * mu2 * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * mu2 * z * z - 0.12e2 * z * delta2 * delta2 * delta1 * delta1 + 0.6e1 * delta2 * delta2 * delta1 * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta2 + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.12e2 * mu1 * mu2 * mu2 * z * z * delta2 - 0.12e2 * delta1 * mu2 * mu2 * z * z * delta2 + 0.6e1 * delta1 * delta1 * delta2 * delta2 * z * z + 0.4e1 * mu1 * z * z * pow(mu2, 0.3e1) - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z + 0.6e1 * c * c * delta2 * delta2 + 0.6e1 * mu1 * mu1 * delta2 * delta2) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 12:
			return (0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * delta1 * pow(c, 0.3e1) * z * z + 0.12e2 * c * mu1 * delta2 * delta2 - 0.12e2 * delta1 * c * delta2 * delta2 + 0.12e2 * delta1 * mu2 * mu2 * z * delta2 + 0.12e2 * c * mu2 * mu2 * z * delta2 - 0.12e2 * mu1 * mu2 * mu2 * z * delta2 - pow(mu2, 0.4e1) * z * z - pow(delta2, 0.4e1) * z * z + 0.12e2 * delta1 * mu1 * delta2 * delta2 + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * c * c * mu2 * mu2 * z + 0.6e1 * c * c * mu2 * mu2 * z * z + 0.12e2 * mu1 * mu1 * delta2 * delta2 * z - 0.6e1 * mu1 * mu1 * delta2 * delta2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * c * c * delta1 * mu2 * z * z + 0.12e2 * c * c * delta1 * delta2 * z - 0.12e2 * c * c * delta1 * delta2 * z * z - 0.24e2 * c * c * mu2 * delta2 * z + 0.12e2 * c * c * mu2 * delta2 * z * z - 0.12e2 * c * mu1 * delta2 * delta2 * z + 0.12e2 * c * mu1 * mu2 * mu2 * z - 0.12e2 * c * mu1 * mu2 * mu2 * z * z + 0.12e2 * delta1 * c * delta2 * delta2 * z - 0.12e2 * delta1 * c * mu2 * mu2 * z + 0.12e2 * delta1 * c * mu2 * mu2 * z * z - 0.24e2 * delta1 * mu1 * delta2 * delta2 * z + 0.12e2 * delta1 * mu1 * delta2 * delta2 * z * z + 0.24e2 * c * mu1 * mu2 * delta2 * z - 0.24e2 * c * mu1 * mu2 * delta2 * z * z - 0.24e2 * delta1 * c * mu2 * delta2 * z + 0.24e2 * delta1 * c * mu2 * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * mu2 * z * z + 0.12e2 * c * mu2 * delta2 * delta2 * z + 0.12e2 * mu1 * mu2 * z * z * delta2 * delta2 - 0.12e2 * mu1 * mu2 * delta2 * delta2 * z + 0.12e2 * mu2 * z * delta1 * delta2 * delta2 - 0.12e2 * mu2 * z * z * delta2 * delta2 * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta2 + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.12e2 * mu1 * mu2 * mu2 * z * z * delta2 - 0.12e2 * delta1 * mu2 * mu2 * z * z * delta2 + 0.4e1 * mu1 * z * z * pow(mu2, 0.3e1) - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z - 0.6e1 * c * c * delta2 * delta2 - 0.6e1 * mu1 * mu1 * delta2 * delta2 + 0.4e1 * c * pow(delta2, 0.3e1) * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z - 0.6e1 * mu2 * mu2 * z * z * delta2 * delta2 - 0.4e1 * mu2 * z * z * pow(delta2, 0.3e1) + 0.4e1 * pow(delta2, 0.3e1) * z * delta1 - 0.4e1 * pow(delta2, 0.3e1) * z * z * delta1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: AQBE_expected_piece_value(double z, int piecenum)
{

	if(fabs(z) < DBL_EPSILON)	
	{
		z = 1.0e-5;
	}
	if(fabs(1-z) < DBL_EPSILON)	
	{
		z = 1 - 1.0e-5;
	}

	
	switch (piecenum)
	{
		// // Expressions for z.pdf(z) and not pdf(z)
		case 1:
			return -(-0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * pow(z, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z - 0.24e2 * c * mu2 * mu1 * delta2 * z + 0.4e1 * pow(mu2, 0.3e1) * delta1 * z * z - 0.4e1 * pow(delta2, 0.3e1) * mu1 * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * mu2 * z * z + 0.4e1 * pow(delta2, 0.3e1) * delta1 * z * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * pow(z, 0.3e1) + 0.48e2 * log(z) * c * mu1 * delta2 * delta1 * z * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * mu2 * c * mu1 * delta1 * z * z - 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z - 0.12e2 * z * z * pow(mu2, 0.3e1) * c - 0.12e2 * c * pow(delta2, 0.3e1) * z * z - 0.3e1 * pow(delta2, 0.4e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * pow(mu2, 0.3e1) * c * z - 0.6e1 * c * c * mu2 * mu2 * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z + 0.8e1 * pow(delta2, 0.3e1) * c * z - 0.12e2 * pow(mu2, 0.3e1) * delta2 * z - 0.12e2 * pow(delta2, 0.3e1) * mu2 * z - 0.4e1 * delta1 * pow(delta2, 0.3e1) * z - 0.18e2 * mu2 * mu2 * delta2 * delta2 * z - 0.6e1 * c * c * delta2 * delta2 * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.3e1 * pow(mu2, 0.4e1) * z + 0.24e2 * delta1 * mu2 * c * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z + 0.2e1 * pow(c, 0.4e1) * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.4e1 * pow(delta2, 0.4e1) * z * z - 0.12e2 * delta1 * mu2 * delta2 * delta2 * z + 0.12e2 * delta1 * delta2 * delta2 * c * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * z + 0.24e2 * mu2 * mu2 * delta2 * c * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 * z + 0.12e2 * delta1 * mu2 * mu2 * c * z - 0.12e2 * c * c * mu2 * delta2 * z + 0.24e2 * mu2 * delta2 * delta2 * c * z + 0.12e2 * mu1 * mu2 * delta2 * delta2 * z - 0.12e2 * c * delta2 * delta2 * mu1 * z - 0.12e2 * delta1 * mu2 * mu2 * delta2 * z + 0.24e2 * c * c * mu2 * delta2 * z * z - 0.12e2 * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * mu1 * mu2 * mu2 * delta2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z * z - 0.12e2 * mu1 * mu2 * delta2 * delta2 * z * z + 0.12e2 * mu2 * mu2 * delta1 * delta2 * z * z + 0.12e2 * mu2 * delta1 * delta2 * delta2 * z * z - 0.24e2 * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * c * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * delta1 * c * c * mu2 * z + 0.48e2 * delta1 * c * c * mu1 * z - 0.12e2 * delta1 * c * c * delta2 * z - 0.48e2 * delta1 * c * mu1 * mu1 * z + 0.24e2 * delta1 * c * mu1 * mu1 * z * z - 0.12e2 * c * c * mu1 * mu2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * delta1 * c * c * mu2 * z * z - 0.24e2 * delta1 * c * c * mu1 * z * z + 0.12e2 * delta1 * c * c * delta2 * z * z + 0.24e2 * delta1 * mu1 * mu1 * c + 0.16e2 * delta1 * pow(mu1, 0.3e1) * z - 0.24e2 * c * c * mu1 * mu1 * z + 0.16e2 * c * pow(mu1, 0.3e1) * z - 0.24e2 * delta1 * c * c * mu1 - 0.8e1 * delta1 * pow(mu1, 0.3e1) * z * z - 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.12e2 * c * c * mu1 * mu1 * z * z + 0.12e2 * pow(c, 0.3e1) * mu1 * z - 0.12e2 * delta1 * pow(c, 0.3e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * delta1 * pow(c, 0.3e1) * z * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z * z - 0.8e1 * pow(mu1, 0.3e1) * c - 0.4e1 * pow(mu1, 0.4e1) * z - 0.8e1 * delta1 * pow(mu1, 0.3e1) - 0.8e1 * pow(c, 0.3e1) * mu1 + 0.12e2 * c * c * mu1 * mu1 + 0.8e1 * delta1 * pow(c, 0.3e1) + 0.2e1 * pow(mu1, 0.4e1) * z * z - 0.3e1 * z * pow(c, 0.4e1) + 0.2e1 * pow(mu1, 0.4e1) + 0.2e1 * pow(c, 0.4e1) + 0.12e2 * c * c * mu2 * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(z, 0.3e1) + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * pow(z, 0.3e1) + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * c * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * c * c * delta1 * z * z + 0.12e2 * log(z) * mu2 * c * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta2 * delta1 * z * z + 0.12e2 * log(z) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.12e2 * log(z) * c * c * delta2 * delta1 * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * z + 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * z + 0.12e2 * log(z) * mu2 * c * c * delta1 * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * mu2 * mu1 * mu1 * z * z + 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * delta2 * delta2 * mu1 * z * z - 0.12e2 * delta1 * delta2 * delta2 * c * z * z - 0.36e2 * c * delta2 * delta2 * z * z * mu2 - 0.36e2 * c * mu2 * mu2 * delta2 * z * z + 0.12e2 * c * c * delta2 * delta2 * z * z) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;

	
		case 2:
			return (0.12e2 * delta1 * delta1 * c * c * z * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * pow(z, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z - 0.24e2 * c * mu2 * mu1 * delta2 * z + 0.4e1 * pow(mu2, 0.3e1) * delta1 * z * z - 0.4e1 * pow(delta2, 0.3e1) * mu1 * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * mu2 * z * z + 0.4e1 * pow(delta2, 0.3e1) * delta1 * z * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * pow(z, 0.3e1) + 0.48e2 * log(z) * c * mu1 * delta2 * delta1 * z * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * mu2 * c * mu1 * delta1 * z * z - 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z - 0.12e2 * z * z * pow(mu2, 0.3e1) * c - 0.12e2 * c * pow(delta2, 0.3e1) * z * z - 0.3e1 * pow(delta2, 0.4e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * pow(mu2, 0.3e1) * c * z - 0.6e1 * c * c * mu2 * mu2 * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z + 0.8e1 * pow(delta2, 0.3e1) * c * z - 0.12e2 * pow(mu2, 0.3e1) * delta2 * z - 0.12e2 * pow(delta2, 0.3e1) * mu2 * z - 0.4e1 * delta1 * pow(delta2, 0.3e1) * z - 0.18e2 * mu2 * mu2 * delta2 * delta2 * z - 0.6e1 * c * c * delta2 * delta2 * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * pow(z, 0.3e1) + 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * pow(z, 0.3e1) + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z + 0.12e2 * delta1 * delta1 * mu1 * mu1 + 0.12e2 * delta1 * delta1 * c * c + 0.16e2 * mu1 * pow(delta1, 0.3e1) * z - 0.16e2 * pow(delta1, 0.3e1) * c * z + 0.2e1 * pow(delta1, 0.4e1) - 0.3e1 * pow(mu2, 0.4e1) * z + 0.24e2 * delta1 * mu2 * c * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z + 0.2e1 * pow(c, 0.4e1) * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.12e2 * log(z) * c * delta2 * delta1 * delta1 * z - 0.12e2 * log(z) * mu1 * delta2 * delta1 * delta1 * z - 0.12e2 * log(z) * c * mu1 * delta1 * delta1 * z + 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * z - 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z - 0.24e2 * log(z) * c * delta2 * delta1 * delta1 * z * z + 0.12e2 * log(z) * c * delta2 * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * delta2 * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu1 * delta2 * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * delta1 * delta1 * z * z - 0.12e2 * log(z) * c * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * c * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z - 0.12e2 * delta1 * mu2 * delta2 * delta2 * z + 0.12e2 * delta1 * delta2 * delta2 * c * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * z + 0.24e2 * mu2 * mu2 * delta2 * c * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 * z + 0.12e2 * delta1 * mu2 * mu2 * c * z - 0.12e2 * c * c * mu2 * delta2 * z + 0.24e2 * mu2 * delta2 * delta2 * c * z + 0.12e2 * mu1 * mu2 * delta2 * delta2 * z - 0.12e2 * c * delta2 * delta2 * mu1 * z - 0.12e2 * delta1 * mu2 * mu2 * delta2 * z + 0.24e2 * c * c * mu2 * delta2 * z * z + 0.8e1 * c * pow(delta1, 0.3e1) - 0.8e1 * mu1 * pow(delta1, 0.3e1) - 0.4e1 * pow(delta1, 0.4e1) * z - 0.12e2 * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * mu1 * mu2 * mu2 * delta2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z * z - 0.12e2 * mu1 * mu2 * delta2 * delta2 * z * z + 0.12e2 * mu2 * mu2 * delta1 * delta2 * z * z + 0.12e2 * mu2 * delta1 * delta2 * delta2 * z * z - 0.24e2 * delta1 * delta1 * mu1 * mu1 * z - 0.24e2 * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * c * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * delta1 * c * c * mu2 * z + 0.48e2 * delta1 * c * c * mu1 * z - 0.12e2 * delta1 * c * c * delta2 * z - 0.48e2 * delta1 * c * mu1 * mu1 * z + 0.24e2 * delta1 * c * mu1 * mu1 * z * z - 0.12e2 * c * c * mu1 * mu2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * delta1 * c * c * mu2 * z * z - 0.24e2 * delta1 * c * c * mu1 * z * z + 0.12e2 * delta1 * c * c * delta2 * z * z + 0.24e2 * delta1 * mu1 * mu1 * c + 0.16e2 * delta1 * pow(mu1, 0.3e1) * z - 0.24e2 * c * c * mu1 * mu1 * z + 0.16e2 * c * pow(mu1, 0.3e1) * z - 0.24e2 * delta1 * c * c * mu1 - 0.8e1 * delta1 * pow(mu1, 0.3e1) * z * z - 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.12e2 * c * c * mu1 * mu1 * z * z + 0.12e2 * pow(c, 0.3e1) * mu1 * z - 0.12e2 * delta1 * pow(c, 0.3e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * delta1 * pow(c, 0.3e1) * z * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z * z - 0.8e1 * pow(mu1, 0.3e1) * c - 0.4e1 * pow(mu1, 0.4e1) * z - 0.8e1 * delta1 * pow(mu1, 0.3e1) - 0.8e1 * pow(c, 0.3e1) * mu1 + 0.12e2 * c * c * mu1 * mu1 + 0.8e1 * delta1 * pow(c, 0.3e1) + 0.2e1 * pow(mu1, 0.4e1) * z * z - 0.3e1 * z * pow(c, 0.4e1) + 0.2e1 * pow(mu1, 0.4e1) + 0.2e1 * pow(c, 0.4e1) - 0.24e2 * delta1 * delta1 * c * mu1 + 0.12e2 * delta1 * delta1 * mu1 * mu1 * z * z + 0.8e1 * pow(delta1, 0.3e1) * z * z * c - 0.8e1 * pow(delta1, 0.3e1) * z * z * mu1 + 0.12e2 * c * c * mu2 * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(z, 0.3e1) + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * pow(z, 0.3e1) + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * c * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * c * c * delta1 * z * z + 0.12e2 * log(z) * mu2 * c * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta2 * delta1 * z * z + 0.12e2 * log(z) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.24e2 * delta1 * delta1 * c * c * z + 0.12e2 * log(z) * c * c * delta2 * delta1 * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * z + 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * z + 0.12e2 * log(z) * mu2 * c * c * delta1 * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * mu2 * mu1 * mu1 * z * z + 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * delta2 * delta2 * mu1 * z * z - 0.12e2 * delta1 * delta2 * delta2 * c * z * z - 0.36e2 * c * delta2 * delta2 * z * z * mu2 - 0.36e2 * c * mu2 * mu2 * delta2 * z * z + 0.2e1 * pow(delta1, 0.4e1) * z * z + 0.12e2 * c * c * delta2 * delta2 * z * z + 0.2e1 * pow(delta1, 0.4e1) * log(z) * z - 0.4e1 * pow(delta1, 0.4e1) * log(z) * z * z + 0.2e1 * pow(delta1, 0.4e1) * log(z) * pow(z, 0.3e1) + 0.48e2 * delta1 * delta1 * c * mu1 * z - 0.24e2 * delta1 * delta1 * c * mu1 * z * z) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;


		case 3:
			return -(0.12e2 * delta1 * delta1 * c * c * z * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z - 0.24e2 * c * mu2 * mu1 * delta2 * z + 0.4e1 * pow(mu2, 0.3e1) * delta1 * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * pow(z, 0.3e1) + 0.48e2 * log(z) * c * mu1 * delta2 * delta1 * z * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * mu2 * c * mu1 * delta1 * z * z - 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z - 0.12e2 * z * z * pow(mu2, 0.3e1) * c + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * pow(mu2, 0.3e1) * c * z - 0.6e1 * c * c * mu2 * mu2 * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.12e2 * pow(mu2, 0.3e1) * delta2 * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * pow(z, 0.3e1) + 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * pow(z, 0.3e1) + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z + 0.12e2 * delta1 * delta1 * mu1 * mu1 + 0.12e2 * delta1 * delta1 * c * c + 0.16e2 * mu1 * pow(delta1, 0.3e1) * z - 0.16e2 * pow(delta1, 0.3e1) * c * z + 0.2e1 * pow(delta1, 0.4e1) - 0.3e1 * pow(mu2, 0.4e1) * z + 0.24e2 * delta1 * mu2 * c * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.2e1 * pow(c, 0.4e1) * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * log(z) * c * delta2 * delta1 * delta1 * z - 0.12e2 * log(z) * mu1 * delta2 * delta1 * delta1 * z - 0.12e2 * log(z) * c * mu1 * delta1 * delta1 * z + 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * z - 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z - 0.24e2 * log(z) * c * delta2 * delta1 * delta1 * z * z + 0.12e2 * log(z) * c * delta2 * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * delta2 * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu1 * delta2 * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * delta1 * delta1 * z * z - 0.12e2 * log(z) * c * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * c * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * z + 0.24e2 * mu2 * mu2 * delta2 * c * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 * z + 0.12e2 * delta1 * mu2 * mu2 * c * z - 0.12e2 * c * c * mu2 * delta2 * z - 0.12e2 * delta1 * mu2 * mu2 * delta2 * z + 0.24e2 * c * c * mu2 * delta2 * z * z + 0.8e1 * c * pow(delta1, 0.3e1) - 0.8e1 * mu1 * pow(delta1, 0.3e1) - 0.4e1 * pow(delta1, 0.4e1) * z - 0.12e2 * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * mu1 * mu2 * mu2 * delta2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * mu2 * mu2 * delta1 * delta2 * z * z - 0.24e2 * delta1 * delta1 * mu1 * mu1 * z - 0.24e2 * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * c * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * delta1 * c * c * mu2 * z + 0.48e2 * delta1 * c * c * mu1 * z - 0.12e2 * delta1 * c * c * delta2 * z - 0.48e2 * delta1 * c * mu1 * mu1 * z + 0.24e2 * delta1 * c * mu1 * mu1 * z * z - 0.12e2 * c * c * mu1 * mu2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * delta1 * c * c * mu2 * z * z - 0.24e2 * delta1 * c * c * mu1 * z * z + 0.12e2 * delta1 * c * c * delta2 * z * z + 0.24e2 * delta1 * mu1 * mu1 * c + 0.16e2 * delta1 * pow(mu1, 0.3e1) * z - 0.24e2 * c * c * mu1 * mu1 * z + 0.16e2 * c * pow(mu1, 0.3e1) * z - 0.24e2 * delta1 * c * c * mu1 - 0.8e1 * delta1 * pow(mu1, 0.3e1) * z * z - 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.12e2 * c * c * mu1 * mu1 * z * z + 0.12e2 * pow(c, 0.3e1) * mu1 * z - 0.12e2 * delta1 * pow(c, 0.3e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * delta1 * pow(c, 0.3e1) * z * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z * z - 0.8e1 * pow(mu1, 0.3e1) * c - 0.4e1 * pow(mu1, 0.4e1) * z - 0.8e1 * delta1 * pow(mu1, 0.3e1) - 0.8e1 * pow(c, 0.3e1) * mu1 + 0.12e2 * c * c * mu1 * mu1 + 0.8e1 * delta1 * pow(c, 0.3e1) + 0.2e1 * pow(mu1, 0.4e1) * z * z - 0.3e1 * z * pow(c, 0.4e1) + 0.2e1 * pow(mu1, 0.4e1) + 0.2e1 * pow(c, 0.4e1) - 0.24e2 * delta1 * delta1 * c * mu1 + 0.12e2 * delta1 * delta1 * mu1 * mu1 * z * z + 0.8e1 * pow(delta1, 0.3e1) * z * z * c - 0.8e1 * pow(delta1, 0.3e1) * z * z * mu1 + 0.12e2 * c * c * mu2 * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * c * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * c * c * delta1 * z * z + 0.12e2 * log(z) * mu2 * c * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta2 * delta1 * z * z + 0.12e2 * log(z) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.24e2 * delta1 * delta1 * c * c * z + 0.12e2 * log(z) * c * c * delta2 * delta1 * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * z + 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * z + 0.12e2 * log(z) * mu2 * c * c * delta1 * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * mu2 * mu1 * mu1 * z * z + 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) - 0.36e2 * c * mu2 * mu2 * delta2 * z * z + 0.2e1 * pow(delta1, 0.4e1) * z * z + 0.2e1 * pow(delta1, 0.4e1) * log(z) * z - 0.4e1 * pow(delta1, 0.4e1) * log(z) * z * z + 0.2e1 * pow(delta1, 0.4e1) * log(z) * pow(z, 0.3e1) + 0.48e2 * delta1 * delta1 * c * mu1 * z - 0.24e2 * delta1 * delta1 * c * mu1 * z * z) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;



		case 4:
			return (0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z - 0.24e2 * c * mu2 * mu1 * delta2 * z + 0.4e1 * pow(mu2, 0.3e1) * delta1 * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * pow(z, 0.3e1) + 0.48e2 * log(z) * c * mu1 * delta2 * delta1 * z * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * mu2 * c * mu1 * delta1 * z * z - 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z - 0.12e2 * z * z * pow(mu2, 0.3e1) * c + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * pow(mu2, 0.3e1) * c * z - 0.6e1 * c * c * mu2 * mu2 * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.12e2 * pow(mu2, 0.3e1) * delta2 * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.3e1 * pow(mu2, 0.4e1) * z + 0.24e2 * delta1 * mu2 * c * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.2e1 * pow(c, 0.4e1) * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * z + 0.24e2 * mu2 * mu2 * delta2 * c * z + 0.12e2 * mu1 * mu2 * mu2 * delta2 * z + 0.12e2 * delta1 * mu2 * mu2 * c * z - 0.12e2 * c * c * mu2 * delta2 * z - 0.12e2 * delta1 * mu2 * mu2 * delta2 * z + 0.24e2 * c * c * mu2 * delta2 * z * z - 0.12e2 * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * mu1 * mu2 * mu2 * delta2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * mu2 * mu2 * delta1 * delta2 * z * z - 0.24e2 * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * c * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * delta1 * c * c * mu2 * z + 0.48e2 * delta1 * c * c * mu1 * z - 0.12e2 * delta1 * c * c * delta2 * z - 0.48e2 * delta1 * c * mu1 * mu1 * z + 0.24e2 * delta1 * c * mu1 * mu1 * z * z - 0.12e2 * c * c * mu1 * mu2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * delta1 * c * c * mu2 * z * z - 0.24e2 * delta1 * c * c * mu1 * z * z + 0.12e2 * delta1 * c * c * delta2 * z * z + 0.24e2 * delta1 * mu1 * mu1 * c + 0.16e2 * delta1 * pow(mu1, 0.3e1) * z - 0.24e2 * c * c * mu1 * mu1 * z + 0.16e2 * c * pow(mu1, 0.3e1) * z - 0.24e2 * delta1 * c * c * mu1 - 0.8e1 * delta1 * pow(mu1, 0.3e1) * z * z - 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.12e2 * c * c * mu1 * mu1 * z * z + 0.12e2 * pow(c, 0.3e1) * mu1 * z - 0.12e2 * delta1 * pow(c, 0.3e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * delta1 * pow(c, 0.3e1) * z * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z * z - 0.8e1 * pow(mu1, 0.3e1) * c - 0.4e1 * pow(mu1, 0.4e1) * z - 0.8e1 * delta1 * pow(mu1, 0.3e1) - 0.8e1 * pow(c, 0.3e1) * mu1 + 0.12e2 * c * c * mu1 * mu1 + 0.8e1 * delta1 * pow(c, 0.3e1) + 0.2e1 * pow(mu1, 0.4e1) * z * z - 0.3e1 * z * pow(c, 0.4e1) + 0.2e1 * pow(mu1, 0.4e1) + 0.2e1 * pow(c, 0.4e1) + 0.12e2 * c * c * mu2 * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * c * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * c * c * delta1 * z * z + 0.12e2 * log(z) * mu2 * c * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta2 * delta1 * z * z + 0.12e2 * log(z) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.12e2 * log(z) * c * c * delta2 * delta1 * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * z + 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * z + 0.12e2 * log(z) * mu2 * c * c * delta1 * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * mu2 * mu1 * mu1 * z * z + 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) - 0.36e2 * c * mu2 * mu2 * delta2 * z * z) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;

			
		case 5:
			return (0.6e1 * c * c - 0.12e2 * c * mu1 + delta1 * delta1 + 0.4e1 * delta1 * c - 0.4e1 * delta1 * mu1 + 0.6e1 * mu1 * mu1 + 0.6e1 * log(z) * mu2 * c * z + 0.6e1 * log(z) * c * delta2 * z - 0.6e1 * log(z) * c * mu1 * z - 0.6e1 * log(z) * mu2 * mu1 * z - 0.6e1 * log(z) * mu1 * delta2 * z + 0.2e1 * delta1 * log(z) * c * z + 0.2e1 * delta1 * log(z) * mu2 * z + 0.2e1 * delta1 * log(z) * delta2 * z - 0.4e1 * delta1 * log(z) * mu1 * z + 0.6e1 * log(z) * mu1 * mu1 * z + delta1 * delta1 * log(z) * z) * pow(delta2, -0.2e1) / z / 0.12e2;

		case 6:
			return  -(-0.36e2 * c * mu2 * z - 0.12e2 * c * delta2 * z + 0.12e2 * mu1 * c * z - 0.12e2 * mu1 * mu2 * z - 0.4e1 * mu1 * delta2 * z - 0.12e2 * delta1 * c * z + 0.12e2 * delta1 * mu2 * z + 0.4e1 * delta1 * delta2 * z + 0.12e2 * c * c * z - 0.6e1 * c * c - 0.12e2 * c * mu1 + 0.12e2 * delta1 * c + 0.24e2 * c * mu2 + 0.8e1 * c * delta2 + 0.12e2 * mu1 * mu2 + 0.4e1 * mu1 * delta2 - 0.12e2 * delta1 * mu2 - 0.4e1 * delta1 * delta2 + 0.4e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z - 0.2e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 + 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * c - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.3e1 * delta2 * delta2 - 0.18e2 * mu2 * mu2 + 0.16e2 * mu2 * delta2 * z + 0.24e2 * mu2 * mu2 * z - 0.12e2 * mu2 * delta2 + 0.4e1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.2e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z - 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z * z - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z + 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * c * z + 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * c * z * z + 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z * z) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 7:
			return -(0.24e2 * c * mu2 * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.4e1 * pow(delta2, 0.4e1) * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.12e2 * pow(mu2, 0.3e1) * c * z + 0.12e2 * c * c * mu2 * mu2 * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z - 0.12e2 * pow(delta2, 0.3e1) * c * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.16e2 * pow(delta2, 0.3e1) * mu2 * z + 0.4e1 * delta1 * pow(delta2, 0.3e1) * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z + 0.12e2 * c * c * delta2 * delta2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 * pow(mu2, 0.4e1) * z - 0.24e2 * delta1 * mu2 * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.12e2 * delta1 * mu2 * delta2 * delta2 * z - 0.12e2 * delta1 * delta2 * delta2 * c * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.36e2 * mu2 * mu2 * delta2 * c * z - 0.12e2 * mu1 * mu2 * mu2 * delta2 * z - 0.12e2 * delta1 * mu2 * mu2 * c * z + 0.24e2 * c * c * mu2 * delta2 * z - 0.36e2 * mu2 * delta2 * delta2 * c * z - 0.12e2 * mu1 * mu2 * delta2 * delta2 * z + 0.12e2 * c * delta2 * delta2 * mu1 * z + 0.12e2 * delta1 * mu2 * mu2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * delta1 * c * c * delta2 * z + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.12e2 * delta1 * delta2 * c * c + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(delta2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(delta2, 0.3e1) + 0.8e1 * pow(delta2, 0.3e1) * c + 0.8e1 * pow(mu2, 0.3e1) * c - 0.12e2 * pow(mu2, 0.3e1) * delta2 - 0.12e2 * pow(delta2, 0.3e1) * mu2 - 0.18e2 * mu2 * mu2 * delta2 * delta2 - 0.6e1 * c * c * mu2 * mu2 - 0.6e1 * c * c * delta2 * delta2 + pow(c, 0.4e1) + 0.24e2 * mu2 * mu2 * delta2 * c + 0.24e2 * mu2 * delta2 * delta2 * c - 0.12e2 * delta1 * mu2 * mu2 * delta2 - 0.12e2 * delta1 * mu2 * delta2 * delta2 + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * mu2 * delta2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * delta2 * delta2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c + 0.12e2 * delta1 * delta2 * delta2 * c - 0.12e2 * c * c * mu2 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * c * delta2 - 0.3e1 * pow(mu2, 0.4e1) - 0.3e1 * pow(delta2, 0.4e1)) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;



		case 8:
			return -(0.24e2 * c * mu2 * mu1 * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.12e2 * pow(mu2, 0.3e1) * c * z + 0.12e2 * c * c * mu2 * mu2 * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 * pow(mu2, 0.4e1) * z - 0.24e2 * delta1 * mu2 * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.36e2 * mu2 * mu2 * delta2 * c * z - 0.12e2 * mu1 * mu2 * mu2 * delta2 * z - 0.12e2 * delta1 * mu2 * mu2 * c * z + 0.24e2 * c * c * mu2 * delta2 * z + 0.12e2 * delta1 * mu2 * mu2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * delta1 * c * c * delta2 * z + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.12e2 * delta1 * delta2 * c * c + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.8e1 * pow(mu2, 0.3e1) * c - 0.12e2 * pow(mu2, 0.3e1) * delta2 - 0.6e1 * c * c * mu2 * mu2 + pow(c, 0.4e1) + 0.24e2 * mu2 * mu2 * delta2 * c - 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * mu2 * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.12e2 * c * c * mu2 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * c * delta2 - 0.3e1 * pow(mu2, 0.4e1)) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 9:
			return -(-log(z) * pow(mu1, 0.4e1) * z + log(z) * pow(c, 0.4e1) * z + 0.12e2 * log(z) * mu2 * c * mu1 * delta1 * z + 0.12e2 * log(z) * c * mu1 * delta2 * delta1 * z - 0.6e1 * log(z) * mu1 * mu1 * delta1 * delta1 * z - 0.2e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z - 0.2e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z - 0.2e1 * pow(delta1, 0.3e1) * log(z) * c * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.6e1 * delta1 * delta1 * mu1 * mu1 - 0.6e1 * delta1 * delta1 * c * c - pow(delta1, 0.4e1) - 0.6e1 * log(z) * c * delta2 * delta1 * delta1 * z + 0.6e1 * log(z) * mu1 * delta2 * delta1 * delta1 * z + 0.6e1 * log(z) * c * mu1 * delta1 * delta1 * z - 0.6e1 * log(z) * mu2 * c * delta1 * delta1 * z + 0.6e1 * log(z) * mu2 * mu1 * delta1 * delta1 * z - 0.4e1 * c * pow(delta1, 0.3e1) + 0.4e1 * mu1 * pow(delta1, 0.3e1) - 0.12e2 * delta1 * mu1 * mu1 * c + 0.12e2 * delta1 * c * c * mu1 + 0.4e1 * pow(mu1, 0.3e1) * c + 0.4e1 * delta1 * pow(mu1, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * mu1 - 0.6e1 * c * c * mu1 * mu1 - 0.4e1 * delta1 * pow(c, 0.3e1) - pow(mu1, 0.4e1) - pow(c, 0.4e1) + 0.12e2 * delta1 * delta1 * c * mu1 + 0.2e1 * log(z) * pow(mu1, 0.3e1) * c * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.2e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * delta2 * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.6e1 * log(z) * c * c * delta2 * delta1 * z - 0.6e1 * log(z) * mu1 * mu1 * delta2 * delta1 * z + 0.6e1 * log(z) * c * c * mu2 * mu1 * z - 0.6e1 * log(z) * c * mu2 * mu1 * mu1 * z - 0.6e1 * log(z) * mu1 * mu1 * c * delta1 * z + 0.6e1 * log(z) * c * c * mu1 * delta2 * z - 0.6e1 * log(z) * mu1 * mu1 * c * delta2 * z - 0.6e1 * log(z) * mu2 * c * c * delta1 * z - 0.6e1 * log(z) * mu2 * mu1 * mu1 * delta1 * z - pow(delta1, 0.4e1) * log(z) * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z / 0.12e2;

			
		case 10:
			return -(-log(z) * pow(mu1, 0.4e1) * z + log(z) * pow(c, 0.4e1) * z + 0.12e2 * log(z) * mu2 * c * mu1 * delta1 * z + 0.12e2 * log(z) * c * mu1 * delta2 * delta1 * z - 0.12e2 * delta1 * mu1 * mu1 * c + 0.12e2 * delta1 * c * c * mu1 + 0.4e1 * pow(mu1, 0.3e1) * c + 0.4e1 * delta1 * pow(mu1, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * mu1 - 0.6e1 * c * c * mu1 * mu1 - 0.4e1 * delta1 * pow(c, 0.3e1) - pow(mu1, 0.4e1) - pow(c, 0.4e1) + 0.2e1 * log(z) * pow(mu1, 0.3e1) * c * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.2e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * delta2 * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.6e1 * log(z) * c * c * delta2 * delta1 * z - 0.6e1 * log(z) * mu1 * mu1 * delta2 * delta1 * z + 0.6e1 * log(z) * c * c * mu2 * mu1 * z - 0.6e1 * log(z) * c * mu2 * mu1 * mu1 * z - 0.6e1 * log(z) * mu1 * mu1 * c * delta1 * z + 0.6e1 * log(z) * c * c * mu1 * delta2 * z - 0.6e1 * log(z) * mu1 * mu1 * c * delta2 * z - 0.6e1 * log(z) * mu2 * c * c * delta1 * z - 0.6e1 * log(z) * mu2 * mu1 * mu1 * delta1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z / 0.12e2;
			
		case 11:
			return -(0.24e2 * c * mu2 * mu1 * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.12e2 * pow(mu2, 0.3e1) * c * z + 0.12e2 * c * c * mu2 * mu2 * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 * pow(mu2, 0.4e1) * z - 0.24e2 * delta1 * mu2 * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.36e2 * mu2 * mu2 * delta2 * c * z - 0.12e2 * mu1 * mu2 * mu2 * delta2 * z - 0.12e2 * delta1 * mu2 * mu2 * c * z + 0.24e2 * c * c * mu2 * delta2 * z + 0.12e2 * delta1 * mu2 * mu2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * delta1 * c * c * delta2 * z + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.12e2 * delta1 * delta2 * c * c + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.8e1 * pow(mu2, 0.3e1) * c - 0.12e2 * pow(mu2, 0.3e1) * delta2 - 0.6e1 * c * c * mu2 * mu2 + pow(c, 0.4e1) + 0.24e2 * mu2 * mu2 * delta2 * c - 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * mu2 * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.12e2 * c * c * mu2 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * c * delta2 - 0.3e1 * pow(mu2, 0.4e1)) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 12:
			return  -(0.24e2 * c * mu2 * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.4e1 * pow(delta2, 0.4e1) * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.12e2 * pow(mu2, 0.3e1) * c * z + 0.12e2 * c * c * mu2 * mu2 * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z - 0.12e2 * pow(delta2, 0.3e1) * c * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.16e2 * pow(delta2, 0.3e1) * mu2 * z + 0.4e1 * delta1 * pow(delta2, 0.3e1) * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z + 0.12e2 * c * c * delta2 * delta2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 * pow(mu2, 0.4e1) * z - 0.24e2 * delta1 * mu2 * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.12e2 * delta1 * mu2 * delta2 * delta2 * z - 0.12e2 * delta1 * delta2 * delta2 * c * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.36e2 * mu2 * mu2 * delta2 * c * z - 0.12e2 * mu1 * mu2 * mu2 * delta2 * z - 0.12e2 * delta1 * mu2 * mu2 * c * z + 0.24e2 * c * c * mu2 * delta2 * z - 0.36e2 * mu2 * delta2 * delta2 * c * z - 0.12e2 * mu1 * mu2 * delta2 * delta2 * z + 0.12e2 * c * delta2 * delta2 * mu1 * z + 0.12e2 * delta1 * mu2 * mu2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * delta1 * c * c * delta2 * z + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.12e2 * delta1 * delta2 * c * c + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(delta2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(delta2, 0.3e1) + 0.8e1 * pow(delta2, 0.3e1) * c + 0.8e1 * pow(mu2, 0.3e1) * c - 0.12e2 * pow(mu2, 0.3e1) * delta2 - 0.12e2 * pow(delta2, 0.3e1) * mu2 - 0.18e2 * mu2 * mu2 * delta2 * delta2 - 0.6e1 * c * c * mu2 * mu2 - 0.6e1 * c * c * delta2 * delta2 + pow(c, 0.4e1) + 0.24e2 * mu2 * mu2 * delta2 * c + 0.24e2 * mu2 * delta2 * delta2 * c - 0.12e2 * delta1 * mu2 * mu2 * delta2 - 0.12e2 * delta1 * mu2 * delta2 * delta2 + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * mu2 * delta2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * delta2 * delta2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c + 0.12e2 * delta1 * delta2 * delta2 * c - 0.12e2 * c * c * mu2 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * c * delta2 - 0.3e1 * pow(mu2, 0.4e1) - 0.3e1 * pow(delta2, 0.4e1)) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;			
			
		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: AQBE_second_moment_piece_value(double z, int piecenum)
{
	
	if(fabs(z) < DBL_EPSILON)	
	{
		z = 1.0e-5;
	}
	if(fabs(1-z) < DBL_EPSILON)	
	{
		z = 1 - 1.0e-5;
	}

	
	switch (piecenum)
	{
		// Expressions for z^2.pdf(z) and not pdf(z)
		case 1:
			return -(-0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.48e2 * delta1 * c * mu1 * z * z * mu2 + 0.48e2 * delta1 * c * mu1 * z * z * delta2 + 0.48e2 * c * mu2 * mu1 * z * z * delta2 - 0.24e2 * delta1 * mu2 * c * z * mu1 - 0.48e2 * delta1 * mu2 * c * z * z * delta2 - 0.24e2 * delta1 * delta2 * c * z * mu1 - 0.24e2 * delta1 * c * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * c * mu1 * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 + 0.24e2 * delta1 * mu2 * c * pow(z, 0.3e1) * delta2 - 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.12e2 * delta1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 + 0.12e2 * delta1 * mu1 * mu1 * mu2 * z + 0.12e2 * delta1 * mu1 * mu1 * delta2 * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * delta2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * delta1 * c * c * delta2 * z + 0.12e2 * delta1 * c * mu1 * mu1 * z - 0.24e2 * delta1 * c * mu1 * mu1 * z * z + 0.24e2 * c * mu2 * mu2 * mu1 * z * z - 0.24e2 * c * mu2 * mu1 * mu1 * z * z - 0.24e2 * c * delta2 * mu1 * mu1 * z * z + 0.24e2 * c * delta2 * delta2 * mu1 * z * z - 0.24e2 * delta1 * mu2 * mu2 * c * z * z - 0.24e2 * delta1 * mu2 * mu1 * mu1 * z * z - 0.24e2 * delta1 * delta2 * delta2 * c * z * z - 0.24e2 * delta1 * delta2 * mu1 * mu1 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 + 0.2e1 * pow(mu1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * delta1 * pow(mu1, 0.3e1) * z - 0.4e1 * c * pow(mu1, 0.3e1) * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 + 0.8e1 * pow(mu1, 0.3e1) * z * z * delta2 + 0.16e2 * delta1 * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(delta2, 0.3e1) - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.8e1 * delta1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.12e2 * c * c * mu2 * mu1 + 0.24e2 * c * c * mu2 * mu2 * z + 0.12e2 * c * c * delta2 * mu1 + 0.24e2 * c * c * delta2 * delta2 * z - 0.12e2 * delta1 * mu2 * c * c - 0.12e2 * delta1 * delta2 * c * c - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.8e1 * c * pow(delta2, 0.3e1) * z * z - 0.8e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * mu1 * pow(delta2, 0.3e1) * z * z + 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z + 0.8e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.8e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * delta2 - 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(delta2, 0.3e1) * pow(z, 0.3e1) - pow(c, 0.4e1) + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * mu1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 + 0.12e2 * delta1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.48e2 * c * c * mu2 * delta2 * z - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.24e2 * c * delta2 * delta2 * z * z * mu2 - 0.24e2 * mu1 * mu2 * mu2 * z * z * delta2 - 0.24e2 * mu1 * delta2 * delta2 * z * z * mu2 + 0.24e2 * delta1 * mu2 * mu2 * z * z * delta2 + 0.24e2 * delta1 * delta2 * delta2 * z * z * mu2 + 0.12e2 * delta1 * c * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) + 0.12e2 * delta1 * delta2 * delta2 * c * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu2 * pow(z, 0.3e1) * delta2 + 0.12e2 * c * delta2 * delta2 * pow(z, 0.3e1) * mu2 + 0.2e1 * z * pow(c, 0.4e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(delta2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(delta2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) + 0.16e2 * c * pow(delta2, 0.3e1) - 0.20e2 * pow(mu2, 0.3e1) * delta2 - 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.30e2 * mu2 * mu2 * delta2 * delta2 - 0.18e2 * c * c * mu2 * mu2 - 0.18e2 * c * c * delta2 * delta2 + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) - 0.24e2 * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * c * delta2 - 0.12e2 * delta1 * mu2 * mu2 * delta2 - 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * delta2 * delta2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * delta2 * delta2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c + 0.12e2 * delta1 * delta2 * delta2 * c + 0.48e2 * c * mu2 * mu2 * delta2 + 0.48e2 * c * delta2 * delta2 * mu2 - 0.36e2 * c * c * mu2 * delta2 - 0.5e1 * pow(mu2, 0.4e1) - 0.5e1 * pow(delta2, 0.4e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.16e2 * z * c * pow(mu2, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 - 0.12e2 * log(z) * c * c * mu1 * mu1 + 0.4e1 * z * pow(mu2, 0.4e1) + 0.24e2 * mu2 * mu2 * z * delta2 * delta2 - 0.16e2 * c * pow(delta2, 0.3e1) * z + 0.16e2 * pow(mu2, 0.3e1) * z * delta2 + 0.16e2 * mu2 * pow(delta2, 0.3e1) * z + 0.4e1 * pow(delta2, 0.4e1) * z * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.48e2 * c * mu2 * z * delta2 * delta2 - 0.48e2 * c * mu2 * mu2 * z * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z * z + 0.48e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.48e2 * log(z) * c * c * mu1 * delta1 * z + 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 + 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 + 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 + 0.16e2 * mu2 * pow(delta2, 0.3e1) * z * z + 0.4e1 * pow(delta2, 0.4e1) * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.4e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 + 0.24e2 * log(z) * c * c * mu1 * delta1 - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 2:
			return -(-0.4e1 * pow(delta1, 0.4e1) * log(z) * z + 0.2e1 * pow(delta1, 0.4e1) * log(z) * z * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 + 0.12e2 * log(z) * c * c * delta1 * delta1 - 0.12e2 * delta1 * delta1 * mu1 * mu1 * pow(z, 0.3e1) - 0.4e1 * mu2 * pow(z, 0.3e1) * pow(delta1, 0.3e1) + 0.8e1 * mu1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.4e1 * pow(delta1, 0.3e1) * c * pow(z, 0.3e1) + 0.12e2 * delta1 * delta1 * mu2 * mu1 * z + 0.12e2 * delta1 * delta1 * delta2 * mu1 * z + 0.12e2 * mu1 * delta1 * delta1 * z * c - 0.24e2 * mu1 * delta1 * delta1 * z * z * mu2 - 0.24e2 * mu1 * delta1 * delta1 * z * z * delta2 + 0.24e2 * delta1 * delta1 * c * z * z * mu2 - 0.24e2 * delta1 * delta1 * c * z * z * mu1 + 0.24e2 * delta1 * delta1 * c * z * z * delta2 - 0.12e2 * delta1 * delta1 * mu2 * z * c - 0.12e2 * delta1 * delta1 * delta2 * z * c + 0.48e2 * log(z) * c * mu1 * delta1 * delta1 * z - 0.24e2 * log(z) * c * mu1 * delta1 * delta1 * z * z + 0.2e1 * pow(delta1, 0.4e1) * log(z) - 0.4e1 * pow(delta1, 0.3e1) * mu2 * z - 0.4e1 * pow(delta1, 0.3e1) * delta2 * z - 0.12e2 * mu1 * mu1 * delta1 * delta1 * z + 0.24e2 * mu1 * mu1 * delta1 * delta1 * z * z + 0.8e1 * mu1 * pow(delta1, 0.3e1) * z - 0.16e2 * mu1 * pow(delta1, 0.3e1) * z * z - 0.4e1 * pow(delta1, 0.3e1) * c * z + 0.8e1 * pow(delta1, 0.3e1) * c * z * z + 0.8e1 * pow(delta1, 0.3e1) * mu2 * z * z + 0.8e1 * pow(delta1, 0.3e1) * delta2 * z * z - 0.12e2 * delta1 * delta1 * c * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * delta1 * c * pow(z, 0.3e1) * mu1 - 0.12e2 * delta1 * delta1 * c * pow(z, 0.3e1) * delta2 - 0.2e1 * pow(delta1, 0.4e1) * z - 0.24e2 * log(z) * c * mu1 * delta1 * delta1 - 0.16e2 * pow(delta1, 0.3e1) * log(z) * c * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z + 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z - 0.24e2 * log(z) * c * c * delta1 * delta1 * z + 0.12e2 * log(z) * c * c * delta1 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.48e2 * delta1 * c * mu1 * z * z * mu2 - 0.48e2 * delta1 * c * mu1 * z * z * delta2 - 0.48e2 * c * mu2 * mu1 * z * z * delta2 + 0.24e2 * delta1 * mu2 * c * z * mu1 + 0.48e2 * delta1 * mu2 * c * z * z * delta2 + 0.24e2 * delta1 * delta2 * c * z * mu1 + 0.24e2 * delta1 * c * mu1 * pow(z, 0.3e1) * mu2 + 0.24e2 * delta1 * c * mu1 * pow(z, 0.3e1) * delta2 + 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 - 0.24e2 * delta1 * mu2 * c * pow(z, 0.3e1) * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 - 0.12e2 * delta1 * mu1 * mu1 * mu2 * z - 0.12e2 * delta1 * mu1 * mu1 * delta2 * z + 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * mu1 * mu1 * mu2 * z - 0.12e2 * c * mu1 * mu1 * delta2 * z - 0.12e2 * delta1 * c * c * mu2 * z - 0.12e2 * delta1 * c * c * delta2 * z - 0.12e2 * delta1 * c * mu1 * mu1 * z + 0.24e2 * delta1 * c * mu1 * mu1 * z * z - 0.24e2 * c * mu2 * mu2 * mu1 * z * z + 0.24e2 * c * mu2 * mu1 * mu1 * z * z + 0.24e2 * c * delta2 * mu1 * mu1 * z * z - 0.24e2 * c * delta2 * delta2 * mu1 * z * z + 0.24e2 * delta1 * mu2 * mu2 * c * z * z + 0.24e2 * delta1 * mu2 * mu1 * mu1 * z * z + 0.24e2 * delta1 * delta2 * delta2 * c * z * z + 0.24e2 * delta1 * delta2 * mu1 * mu1 * z * z - 0.8e1 * pow(c, 0.3e1) * mu2 - 0.8e1 * pow(c, 0.3e1) * delta2 - 0.2e1 * pow(mu1, 0.4e1) * z + 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * delta1 * pow(c, 0.3e1) + 0.4e1 * pow(mu1, 0.4e1) * z * z + 0.12e2 * delta1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * delta1 * mu1 * pow(z, 0.3e1) * delta2 + 0.4e1 * pow(mu1, 0.3e1) * mu2 * z + 0.4e1 * pow(mu1, 0.3e1) * delta2 * z + 0.8e1 * delta1 * pow(mu1, 0.3e1) * z + 0.4e1 * c * pow(mu1, 0.3e1) * z - 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 - 0.8e1 * pow(mu1, 0.3e1) * z * z * delta2 - 0.16e2 * delta1 * pow(mu1, 0.3e1) * z * z - 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(z, 0.3e1) * pow(delta2, 0.3e1) - 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * mu1 * pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 + 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta2 + 0.8e1 * delta1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.12e2 * c * c * mu2 * mu1 - 0.24e2 * c * c * mu2 * mu2 * z - 0.12e2 * c * c * delta2 * mu1 - 0.24e2 * c * c * delta2 * delta2 * z + 0.12e2 * delta1 * mu2 * c * c + 0.12e2 * delta1 * delta2 * c * c + 0.8e1 * c * pow(mu2, 0.3e1) * z * z + 0.8e1 * c * pow(delta2, 0.3e1) * z * z + 0.8e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.8e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * delta1 * pow(delta2, 0.3e1) * z * z + 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 + 0.8e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu2 + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * delta2 + 0.12e2 * pow(c, 0.3e1) * mu2 * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * c * pow(delta2, 0.3e1) * pow(z, 0.3e1) + pow(c, 0.4e1) - 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.12e2 * mu1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 - 0.12e2 * delta1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 - 0.12e2 * delta1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 - 0.48e2 * c * c * mu2 * delta2 * z + 0.24e2 * c * mu2 * mu2 * z * z * delta2 + 0.24e2 * c * delta2 * delta2 * z * z * mu2 + 0.24e2 * mu1 * mu2 * mu2 * z * z * delta2 + 0.24e2 * mu1 * delta2 * delta2 * z * z * mu2 - 0.24e2 * delta1 * mu2 * mu2 * z * z * delta2 - 0.24e2 * delta1 * delta2 * delta2 * z * z * mu2 - 0.12e2 * delta1 * c * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) - 0.12e2 * delta1 * delta2 * delta2 * c * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * pow(z, 0.3e1) * delta2 - 0.12e2 * c * delta2 * delta2 * pow(z, 0.3e1) * mu2 - 0.2e1 * z * pow(c, 0.4e1) + 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(delta2, 0.3e1) - 0.4e1 * mu1 * pow(mu2, 0.3e1) - 0.4e1 * mu1 * pow(delta2, 0.3e1) - 0.16e2 * c * pow(mu2, 0.3e1) - 0.16e2 * c * pow(delta2, 0.3e1) + 0.20e2 * pow(mu2, 0.3e1) * delta2 + 0.20e2 * pow(delta2, 0.3e1) * mu2 + 0.30e2 * mu2 * mu2 * delta2 * delta2 + 0.18e2 * c * c * mu2 * mu2 + 0.18e2 * c * c * delta2 * delta2 - 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) + 0.24e2 * c * mu2 * mu1 * delta2 - 0.24e2 * delta1 * mu2 * c * delta2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.12e2 * delta1 * delta2 * delta2 * mu2 - 0.12e2 * mu1 * mu2 * mu2 * delta2 - 0.12e2 * mu1 * delta2 * delta2 * mu2 + 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * delta1 * mu2 * mu2 * c - 0.12e2 * delta1 * delta2 * delta2 * c - 0.48e2 * c * mu2 * mu2 * delta2 - 0.48e2 * c * delta2 * delta2 * mu2 + 0.36e2 * c * c * mu2 * delta2 + 0.5e1 * pow(mu2, 0.4e1) + 0.5e1 * pow(delta2, 0.4e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(z) * pow(mu1, 0.4e1) + 0.2e1 * log(z) * pow(c, 0.4e1) + 0.16e2 * z * c * pow(mu2, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.8e1 * log(z) * pow(mu1, 0.3e1) * c - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 + 0.12e2 * log(z) * c * c * mu1 * mu1 - 0.4e1 * z * pow(mu2, 0.4e1) - 0.24e2 * mu2 * mu2 * z * delta2 * delta2 + 0.16e2 * c * pow(delta2, 0.3e1) * z - 0.16e2 * pow(mu2, 0.3e1) * z * delta2 - 0.16e2 * mu2 * pow(delta2, 0.3e1) * z - 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.4e1 * z * z * pow(mu2, 0.4e1) + 0.48e2 * c * mu2 * z * delta2 * delta2 + 0.48e2 * c * mu2 * mu2 * z * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z * z - 0.48e2 * log(z) * mu1 * mu1 * c * delta1 * z + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(z) * c * c * mu1 * delta1 * z - 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 - 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.16e2 * mu2 * pow(delta2, 0.3e1) * z * z - 0.4e1 * pow(delta2, 0.4e1) * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(z) * pow(mu1, 0.4e1) * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z - 0.4e1 * log(z) * pow(c, 0.4e1) * z + 0.2e1 * log(z) * pow(c, 0.4e1) * z * z - 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z + 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(z) * c * c * mu1 * delta1 + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z - 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z - 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z + 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z - 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z + 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z - 0.24e2 * log(z) * c * c * mu1 * mu1 * z + 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z + 0.4e1 * pow(delta1, 0.4e1) * z * z - 0.2e1 * pow(delta1, 0.4e1) * pow(z, 0.3e1)) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 3:
			return (-0.4e1 * pow(delta1, 0.4e1) * log(z) * z + 0.2e1 * pow(delta1, 0.4e1) * log(z) * z * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 + 0.12e2 * log(z) * c * c * delta1 * delta1 - 0.12e2 * delta1 * delta1 * mu1 * mu1 * pow(z, 0.3e1) - 0.4e1 * mu2 * pow(z, 0.3e1) * pow(delta1, 0.3e1) + 0.8e1 * mu1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.4e1 * pow(delta1, 0.3e1) * c * pow(z, 0.3e1) + 0.12e2 * delta1 * delta1 * mu2 * mu1 * z + 0.12e2 * delta1 * delta1 * delta2 * mu1 * z + 0.12e2 * mu1 * delta1 * delta1 * z * c - 0.24e2 * mu1 * delta1 * delta1 * z * z * mu2 - 0.24e2 * mu1 * delta1 * delta1 * z * z * delta2 + 0.24e2 * delta1 * delta1 * c * z * z * mu2 - 0.24e2 * delta1 * delta1 * c * z * z * mu1 + 0.24e2 * delta1 * delta1 * c * z * z * delta2 - 0.12e2 * delta1 * delta1 * mu2 * z * c - 0.12e2 * delta1 * delta1 * delta2 * z * c + 0.48e2 * log(z) * c * mu1 * delta1 * delta1 * z - 0.24e2 * log(z) * c * mu1 * delta1 * delta1 * z * z + 0.2e1 * pow(delta1, 0.4e1) * log(z) - 0.4e1 * pow(delta1, 0.3e1) * mu2 * z - 0.4e1 * pow(delta1, 0.3e1) * delta2 * z - 0.12e2 * mu1 * mu1 * delta1 * delta1 * z + 0.24e2 * mu1 * mu1 * delta1 * delta1 * z * z + 0.8e1 * mu1 * pow(delta1, 0.3e1) * z - 0.16e2 * mu1 * pow(delta1, 0.3e1) * z * z - 0.4e1 * pow(delta1, 0.3e1) * c * z + 0.8e1 * pow(delta1, 0.3e1) * c * z * z + 0.8e1 * pow(delta1, 0.3e1) * mu2 * z * z + 0.8e1 * pow(delta1, 0.3e1) * delta2 * z * z - 0.12e2 * delta1 * delta1 * c * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * delta1 * c * pow(z, 0.3e1) * mu1 - 0.12e2 * delta1 * delta1 * c * pow(z, 0.3e1) * delta2 - 0.2e1 * pow(delta1, 0.4e1) * z - 0.24e2 * log(z) * c * mu1 * delta1 * delta1 - 0.16e2 * pow(delta1, 0.3e1) * log(z) * c * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z + 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z - 0.24e2 * log(z) * c * c * delta1 * delta1 * z + 0.12e2 * log(z) * c * c * delta1 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.48e2 * delta1 * c * mu1 * z * z * mu2 - 0.48e2 * delta1 * c * mu1 * z * z * delta2 - 0.48e2 * c * mu2 * mu1 * z * z * delta2 + 0.24e2 * delta1 * mu2 * c * z * mu1 + 0.48e2 * delta1 * mu2 * c * z * z * delta2 + 0.24e2 * delta1 * delta2 * c * z * mu1 + 0.24e2 * delta1 * c * mu1 * pow(z, 0.3e1) * mu2 + 0.24e2 * delta1 * c * mu1 * pow(z, 0.3e1) * delta2 + 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 - 0.24e2 * delta1 * mu2 * c * pow(z, 0.3e1) * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.12e2 * delta1 * mu1 * mu1 * mu2 * z - 0.12e2 * delta1 * mu1 * mu1 * delta2 * z + 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * mu1 * mu1 * mu2 * z - 0.12e2 * c * mu1 * mu1 * delta2 * z - 0.12e2 * delta1 * c * c * mu2 * z - 0.12e2 * delta1 * c * c * delta2 * z - 0.12e2 * delta1 * c * mu1 * mu1 * z + 0.24e2 * delta1 * c * mu1 * mu1 * z * z - 0.24e2 * c * mu2 * mu2 * mu1 * z * z + 0.24e2 * c * mu2 * mu1 * mu1 * z * z + 0.24e2 * c * delta2 * mu1 * mu1 * z * z + 0.24e2 * delta1 * mu2 * mu2 * c * z * z + 0.24e2 * delta1 * mu2 * mu1 * mu1 * z * z + 0.24e2 * delta1 * delta2 * mu1 * mu1 * z * z - 0.8e1 * pow(c, 0.3e1) * mu2 - 0.8e1 * pow(c, 0.3e1) * delta2 - 0.2e1 * pow(mu1, 0.4e1) * z + 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * delta1 * pow(c, 0.3e1) + 0.4e1 * pow(mu1, 0.4e1) * z * z + 0.12e2 * delta1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * delta1 * mu1 * pow(z, 0.3e1) * delta2 + 0.4e1 * pow(mu1, 0.3e1) * mu2 * z + 0.4e1 * pow(mu1, 0.3e1) * delta2 * z + 0.8e1 * delta1 * pow(mu1, 0.3e1) * z + 0.4e1 * c * pow(mu1, 0.3e1) * z - 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 - 0.8e1 * pow(mu1, 0.3e1) * z * z * delta2 - 0.16e2 * delta1 * pow(mu1, 0.3e1) * z * z - 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 + 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta2 + 0.8e1 * delta1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.12e2 * c * c * mu2 * mu1 - 0.24e2 * c * c * mu2 * mu2 * z - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * delta1 * mu2 * c * c + 0.12e2 * delta1 * delta2 * c * c + 0.8e1 * c * pow(mu2, 0.3e1) * z * z + 0.8e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z + 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 + 0.12e2 * pow(c, 0.3e1) * mu2 * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + pow(c, 0.4e1) - 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.12e2 * delta1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 - 0.12e2 * delta1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 - 0.48e2 * c * c * mu2 * delta2 * z + 0.24e2 * c * mu2 * mu2 * z * z * delta2 + 0.24e2 * mu1 * mu2 * mu2 * z * z * delta2 - 0.24e2 * delta1 * mu2 * mu2 * z * z * delta2 - 0.12e2 * delta1 * c * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * pow(z, 0.3e1) * delta2 - 0.2e1 * z * pow(c, 0.4e1) + 0.4e1 * delta1 * pow(mu2, 0.3e1) - 0.4e1 * mu1 * pow(mu2, 0.3e1) - 0.16e2 * c * pow(mu2, 0.3e1) + 0.20e2 * pow(mu2, 0.3e1) * delta2 + 0.18e2 * c * c * mu2 * mu2 - 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.24e2 * c * mu2 * mu1 * delta2 - 0.24e2 * delta1 * mu2 * c * delta2 + 0.12e2 * delta1 * mu2 * mu2 * delta2 - 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * delta1 * mu2 * mu2 * c - 0.48e2 * c * mu2 * mu2 * delta2 + 0.36e2 * c * c * mu2 * delta2 + 0.5e1 * pow(mu2, 0.4e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(z) * pow(mu1, 0.4e1) + 0.2e1 * log(z) * pow(c, 0.4e1) + 0.16e2 * z * c * pow(mu2, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.8e1 * log(z) * pow(mu1, 0.3e1) * c - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 + 0.12e2 * log(z) * c * c * mu1 * mu1 - 0.4e1 * z * pow(mu2, 0.4e1) - 0.16e2 * pow(mu2, 0.3e1) * z * delta2 - 0.4e1 * z * z * pow(mu2, 0.4e1) + 0.48e2 * c * mu2 * mu2 * z * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z * z - 0.48e2 * log(z) * mu1 * mu1 * c * delta1 * z + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(z) * c * c * mu1 * delta1 * z - 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(z) * pow(mu1, 0.4e1) * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z - 0.4e1 * log(z) * pow(c, 0.4e1) * z + 0.2e1 * log(z) * pow(c, 0.4e1) * z * z + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(z) * c * c * mu1 * delta1 + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z - 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z - 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z + 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z - 0.24e2 * log(z) * c * c * mu1 * mu1 * z + 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z + 0.4e1 * pow(delta1, 0.4e1) * z * z - 0.2e1 * pow(delta1, 0.4e1) * pow(z, 0.3e1)) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
			
		case 4:
			return (-0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.48e2 * delta1 * c * mu1 * z * z * mu2 + 0.48e2 * delta1 * c * mu1 * z * z * delta2 + 0.48e2 * c * mu2 * mu1 * z * z * delta2 - 0.24e2 * delta1 * mu2 * c * z * mu1 - 0.48e2 * delta1 * mu2 * c * z * z * delta2 - 0.24e2 * delta1 * delta2 * c * z * mu1 - 0.24e2 * delta1 * c * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * c * mu1 * pow(z, 0.3e1) * delta2 - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 + 0.24e2 * delta1 * mu2 * c * pow(z, 0.3e1) * delta2 - 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * delta1 * mu1 * mu1 * mu2 * z + 0.12e2 * delta1 * mu1 * mu1 * delta2 * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * delta2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * delta1 * c * c * delta2 * z + 0.12e2 * delta1 * c * mu1 * mu1 * z - 0.24e2 * delta1 * c * mu1 * mu1 * z * z + 0.24e2 * c * mu2 * mu2 * mu1 * z * z - 0.24e2 * c * mu2 * mu1 * mu1 * z * z - 0.24e2 * c * delta2 * mu1 * mu1 * z * z - 0.24e2 * delta1 * mu2 * mu2 * c * z * z - 0.24e2 * delta1 * mu2 * mu1 * mu1 * z * z - 0.24e2 * delta1 * delta2 * mu1 * mu1 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 + 0.2e1 * pow(mu1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * delta1 * pow(mu1, 0.3e1) * z - 0.4e1 * c * pow(mu1, 0.3e1) * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 + 0.8e1 * pow(mu1, 0.3e1) * z * z * delta2 + 0.16e2 * delta1 * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.8e1 * delta1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.12e2 * c * c * mu2 * mu1 + 0.24e2 * c * c * mu2 * mu2 * z + 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.12e2 * delta1 * delta2 * c * c - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.8e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - pow(c, 0.4e1) + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * delta1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.48e2 * c * c * mu2 * delta2 * z - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.24e2 * mu1 * mu2 * mu2 * z * z * delta2 + 0.24e2 * delta1 * mu2 * mu2 * z * z * delta2 + 0.12e2 * delta1 * c * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu2 * pow(z, 0.3e1) * delta2 + 0.2e1 * z * pow(c, 0.4e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) - 0.20e2 * pow(mu2, 0.3e1) * delta2 - 0.18e2 * c * c * mu2 * mu2 + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.24e2 * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * c * delta2 - 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * mu2 * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c + 0.48e2 * c * mu2 * mu2 * delta2 - 0.36e2 * c * c * mu2 * delta2 - 0.5e1 * pow(mu2, 0.4e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.16e2 * z * c * pow(mu2, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 - 0.12e2 * log(z) * c * c * mu1 * mu1 + 0.4e1 * z * pow(mu2, 0.4e1) + 0.16e2 * pow(mu2, 0.3e1) * z * delta2 + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.48e2 * c * mu2 * mu2 * z * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z * z + 0.48e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.48e2 * log(z) * c * c * mu1 * delta1 * z + 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 + 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.4e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 + 0.24e2 * log(z) * c * c * mu1 * delta1 - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 5:
			return -(-0.6e1 * c * mu2 * z - 0.6e1 * c * delta2 * z + 0.6e1 * mu1 * c * z + 0.6e1 * mu1 * mu2 * z + 0.6e1 * mu1 * delta2 * z - 0.2e1 * delta1 * c * z - 0.2e1 * delta1 * mu2 * z - 0.2e1 * delta1 * delta2 * z + 0.4e1 * mu1 * z * delta1 - 0.6e1 * mu1 * mu1 * z - delta1 * delta1 * z + 0.6e1 * log(z) * c * c - 0.12e2 * log(z) * c * mu1 + 0.6e1 * log(z) * mu1 * mu1 + 0.4e1 * delta1 * log(z) * c - 0.4e1 * delta1 * log(z) * mu1 + delta1 * delta1 * log(z)) * pow(delta2, -0.2e1) / 0.12e2;

		case 6:
			return (-0.24e2 * c * c * z + 0.18e2 * c * c + 0.12e2 * c * mu1 - 0.12e2 * delta1 * c + 0.48e2 * c * mu2 * z + 0.16e2 * c * delta2 * z - 0.48e2 * c * mu2 - 0.16e2 * c * delta2 - 0.12e2 * mu1 * mu2 - 0.4e1 * mu1 * delta2 + 0.12e2 * delta1 * mu2 + 0.4e1 * delta1 * delta2 + 0.8e1 * mu1 * z * z * delta2 + 0.24e2 * mu1 * z * z * mu2 - 0.8e1 * delta1 * z * z * delta2 - 0.24e2 * delta1 * z * z * mu2 + 0.2e1 * delta2 * delta2 * pow(z, 0.3e1) + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) + 0.8e1 * delta2 * pow(z, 0.3e1) * mu2 - 0.4e1 * delta2 * pow(z, 0.3e1) * mu1 - 0.12e2 * mu2 * pow(z, 0.3e1) * mu1 + 0.5e1 * delta2 * delta2 - 0.24e2 * mu1 * c * z * z + 0.24e2 * delta1 * c * z * z + 0.30e2 * mu2 * mu2 - 0.16e2 * mu2 * z * z * delta2 + 0.4e1 * delta1 * pow(z, 0.3e1) * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 - 0.24e2 * mu2 * mu2 * z * z - 0.4e1 * delta2 * delta2 * z * z + 0.24e2 * c * mu2 * z * z + 0.8e1 * c * delta2 * z * z - 0.12e2 * c * pow(z, 0.3e1) * mu2 - 0.4e1 * c * pow(z, 0.3e1) * delta2 + 0.12e2 * mu1 * pow(z, 0.3e1) * c - 0.24e2 * mu2 * mu2 * z + 0.20e2 * mu2 * delta2 - 0.4e1 * delta2 * delta2 * z - 0.16e2 * mu2 * delta2 * z - 0.12e2 * delta1 * pow(z, 0.3e1) * c - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * c + 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * z + 0.6e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z * z - 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z * z - 0.48e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z + 0.24e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z * z + 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.32e2 * delta2 * log(fabs(-0.1e1 + z)) * c * z - 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * c * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c + 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.6e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 - 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * z * z - 0.12e2 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 + 0.24e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 7:
			return -(-0.24e2 * c * mu2 * z * z * delta2 * delta2 + 0.24e2 * c * delta2 * delta2 * mu1 * z * z - 0.24e2 * mu1 * delta2 * delta2 * mu2 * z * z + 0.48e2 * c * c * mu2 * delta2 * z + 0.24e2 * mu2 * z * z * delta1 * delta2 * delta2 - 0.24e2 * c * z * z * delta1 * delta2 * delta2 + 0.4e1 * z * pow(mu2, 0.4e1) + 0.24e2 * mu2 * mu2 * z * delta2 * delta2 + 0.24e2 * z * z * c * mu2 * mu2 * mu1 - 0.24e2 * mu1 * mu2 * mu2 * z * z * delta2 - 0.24e2 * c * mu2 * mu2 * z * z * delta1 - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 - 0.16e2 * z * c * pow(mu2, 0.3e1) - 0.4e1 * z * z * pow(c, 0.4e1) + 0.2e1 * pow(z, 0.3e1) * pow(c, 0.4e1) + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.2e1 * pow(z, 0.3e1) * pow(mu2, 0.4e1) + 0.4e1 * pow(delta2, 0.4e1) * z * z - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.48e2 * c * mu2 * mu1 * z * z * delta2 - 0.48e2 * c * mu2 * z * z * delta1 * delta2 - 0.48e2 * c * mu2 * mu2 * z * delta2 - 0.48e2 * c * mu2 * z * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * mu2 * delta2 * z * z - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 + 0.24e2 * delta1 * mu2 * c * pow(z, 0.3e1) * delta2 - 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.12e2 * delta1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.12e2 * delta1 * delta2 * c * c - 0.16e2 * pow(c, 0.3e1) * mu2 * z - 0.16e2 * pow(c, 0.3e1) * delta2 * z + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(delta2, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z - 0.8e1 * delta1 * pow(c, 0.3e1) * z * z + 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 - 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * delta2 - 0.8e1 * z * z * mu1 * pow(mu2, 0.3e1) - 0.8e1 * z * z * c * pow(mu2, 0.3e1) + 0.24e2 * c * c * mu2 * mu2 * z - pow(c, 0.4e1) + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * mu1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 - 0.24e2 * c * c * mu1 * mu2 * z * z - 0.24e2 * c * c * mu1 * delta2 * z * z + 0.24e2 * delta1 * c * c * mu2 * z * z + 0.24e2 * delta1 * c * c * delta2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) + 0.12e2 * delta1 * delta2 * delta2 * c * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu2 * pow(z, 0.3e1) * delta2 + 0.12e2 * c * delta2 * delta2 * pow(z, 0.3e1) * mu2 + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * delta1 * c * c * mu2 * pow(z, 0.3e1) - 0.12e2 * delta1 * c * c * delta2 * pow(z, 0.3e1) + 0.4e1 * z * pow(c, 0.4e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(delta2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(delta2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) + 0.16e2 * c * pow(delta2, 0.3e1) - 0.20e2 * pow(mu2, 0.3e1) * delta2 - 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.30e2 * mu2 * mu2 * delta2 * delta2 - 0.18e2 * c * c * mu2 * mu2 - 0.18e2 * c * c * delta2 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * c * delta2 - 0.12e2 * delta1 * mu2 * mu2 * delta2 - 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * delta2 * delta2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * delta2 * delta2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c + 0.12e2 * delta1 * delta2 * delta2 * c + 0.48e2 * c * mu2 * mu2 * delta2 + 0.48e2 * c * delta2 * delta2 * mu2 - 0.36e2 * c * c * mu2 * delta2 - 0.5e1 * pow(mu2, 0.4e1) - 0.5e1 * pow(delta2, 0.4e1) - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z - 0.16e2 * c * pow(delta2, 0.3e1) * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.16e2 * pow(delta2, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * delta1 * pow(c, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * c * pow(delta2, 0.3e1) * z * z + 0.16e2 * pow(delta2, 0.3e1) * mu2 * z * z - 0.8e1 * pow(delta2, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z - 0.8e1 * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.24e2 * c * c * delta2 * delta2 * z + 0.8e1 * delta1 * pow(delta2, 0.3e1) * z * z + 0.4e1 * pow(delta2, 0.4e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 8:
			return -(0.48e2 * c * c * mu2 * delta2 * z + 0.4e1 * z * pow(mu2, 0.4e1) + 0.24e2 * z * z * c * mu2 * mu2 * mu1 - 0.24e2 * mu1 * mu2 * mu2 * z * z * delta2 - 0.24e2 * c * mu2 * mu2 * z * z * delta1 - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 - 0.16e2 * z * c * pow(mu2, 0.3e1) - 0.4e1 * z * z * pow(c, 0.4e1) + 0.2e1 * pow(z, 0.3e1) * pow(c, 0.4e1) + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.2e1 * pow(z, 0.3e1) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.48e2 * c * mu2 * mu1 * z * z * delta2 - 0.48e2 * c * mu2 * z * z * delta1 * delta2 - 0.48e2 * c * mu2 * mu2 * z * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * mu2 * delta2 * z * z - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 + 0.24e2 * delta1 * mu2 * c * pow(z, 0.3e1) * delta2 - 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.12e2 * delta1 * delta2 * c * c - 0.16e2 * pow(c, 0.3e1) * mu2 * z - 0.16e2 * pow(c, 0.3e1) * delta2 * z + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z - 0.8e1 * delta1 * pow(c, 0.3e1) * z * z - 0.8e1 * z * z * mu1 * pow(mu2, 0.3e1) - 0.8e1 * z * z * c * pow(mu2, 0.3e1) + 0.24e2 * c * c * mu2 * mu2 * z - pow(c, 0.4e1) + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.24e2 * c * c * mu1 * mu2 * z * z - 0.24e2 * c * c * mu1 * delta2 * z * z + 0.24e2 * delta1 * c * c * mu2 * z * z + 0.24e2 * delta1 * c * c * delta2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu2 * pow(z, 0.3e1) * delta2 + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * delta1 * c * c * mu2 * pow(z, 0.3e1) - 0.12e2 * delta1 * c * c * delta2 * pow(z, 0.3e1) + 0.4e1 * z * pow(c, 0.4e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) - 0.20e2 * pow(mu2, 0.3e1) * delta2 - 0.18e2 * c * c * mu2 * mu2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * c * delta2 - 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * mu2 * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c + 0.48e2 * c * mu2 * mu2 * delta2 - 0.36e2 * c * c * mu2 * delta2 - 0.5e1 * pow(mu2, 0.4e1) - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * delta1 * pow(c, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z - 0.8e1 * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 9:
			return -(-0.12e2 * log(z) * c * c * mu1 * delta1 + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 - 0.12e2 * log(z) * c * mu1 * delta1 * delta1 + 0.6e1 * delta1 * delta1 * mu2 * mu1 * z + 0.6e1 * delta1 * delta1 * delta2 * mu1 * z + 0.6e1 * mu1 * delta1 * delta1 * z * c - 0.6e1 * delta1 * delta1 * mu2 * z * c - 0.6e1 * delta1 * delta1 * delta2 * z * c - 0.2e1 * pow(delta1, 0.3e1) * mu2 * z - 0.2e1 * pow(delta1, 0.3e1) * delta2 * z - 0.6e1 * mu1 * mu1 * delta1 * delta1 * z + 0.4e1 * mu1 * pow(delta1, 0.3e1) * z - 0.2e1 * pow(delta1, 0.3e1) * c * z - pow(delta1, 0.4e1) * z + log(z) * pow(mu1, 0.4e1) + log(z) * pow(c, 0.4e1) + pow(delta1, 0.4e1) * log(z) + 0.12e2 * delta1 * mu2 * c * z * mu1 + 0.12e2 * delta1 * delta2 * c * z * mu1 - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 + 0.6e1 * log(z) * c * c * mu1 * mu1 + 0.6e1 * log(z) * mu1 * mu1 * delta1 * delta1 + 0.6e1 * log(z) * c * c * delta1 * delta1 + 0.4e1 * pow(delta1, 0.3e1) * log(z) * c - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu1 - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 - 0.6e1 * delta1 * mu1 * mu1 * mu2 * z - 0.6e1 * delta1 * mu1 * mu1 * delta2 * z + 0.6e1 * c * c * mu1 * mu2 * z + 0.6e1 * c * c * mu1 * delta2 * z - 0.6e1 * c * mu1 * mu1 * mu2 * z - 0.6e1 * c * mu1 * mu1 * delta2 * z - 0.6e1 * delta1 * c * c * mu2 * z - 0.6e1 * delta1 * c * c * delta2 * z - 0.6e1 * delta1 * c * mu1 * mu1 * z - pow(mu1, 0.4e1) * z + 0.2e1 * pow(mu1, 0.3e1) * mu2 * z + 0.2e1 * pow(mu1, 0.3e1) * delta2 * z + 0.4e1 * delta1 * pow(mu1, 0.3e1) * z + 0.2e1 * c * pow(mu1, 0.3e1) * z - 0.2e1 * pow(c, 0.3e1) * mu2 * z - 0.2e1 * pow(c, 0.3e1) * delta2 * z - 0.2e1 * pow(c, 0.3e1) * mu1 * z + 0.2e1 * delta1 * pow(c, 0.3e1) * z + z * pow(c, 0.4e1)) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.12e2;

		case 10:
			return -(-0.12e2 * log(z) * c * c * mu1 * delta1 + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 + log(z) * pow(mu1, 0.4e1) + log(z) * pow(c, 0.4e1) + 0.12e2 * delta1 * mu2 * c * z * mu1 + 0.12e2 * delta1 * delta2 * c * z * mu1 - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 + 0.6e1 * log(z) * c * c * mu1 * mu1 - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 - 0.6e1 * delta1 * mu1 * mu1 * mu2 * z - 0.6e1 * delta1 * mu1 * mu1 * delta2 * z + 0.6e1 * c * c * mu1 * mu2 * z + 0.6e1 * c * c * mu1 * delta2 * z - 0.6e1 * c * mu1 * mu1 * mu2 * z - 0.6e1 * c * mu1 * mu1 * delta2 * z - 0.6e1 * delta1 * c * c * mu2 * z - 0.6e1 * delta1 * c * c * delta2 * z - 0.6e1 * delta1 * c * mu1 * mu1 * z - pow(mu1, 0.4e1) * z + 0.2e1 * pow(mu1, 0.3e1) * mu2 * z + 0.2e1 * pow(mu1, 0.3e1) * delta2 * z + 0.4e1 * delta1 * pow(mu1, 0.3e1) * z + 0.2e1 * c * pow(mu1, 0.3e1) * z - 0.2e1 * pow(c, 0.3e1) * mu2 * z - 0.2e1 * pow(c, 0.3e1) * delta2 * z - 0.2e1 * pow(c, 0.3e1) * mu1 * z + 0.2e1 * delta1 * pow(c, 0.3e1) * z + z * pow(c, 0.4e1)) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.12e2;
	
		case 11:
			return -(0.48e2 * c * c * mu2 * delta2 * z + 0.4e1 * z * pow(mu2, 0.4e1) + 0.24e2 * z * z * c * mu2 * mu2 * mu1 - 0.24e2 * mu1 * mu2 * mu2 * z * z * delta2 - 0.24e2 * c * mu2 * mu2 * z * z * delta1 - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 - 0.16e2 * z * c * pow(mu2, 0.3e1) - 0.4e1 * z * z * pow(c, 0.4e1) + 0.2e1 * pow(z, 0.3e1) * pow(c, 0.4e1) + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.2e1 * pow(z, 0.3e1) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.48e2 * c * mu2 * mu1 * z * z * delta2 - 0.48e2 * c * mu2 * z * z * delta1 * delta2 - 0.48e2 * c * mu2 * mu2 * z * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * mu2 * delta2 * z * z - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 + 0.24e2 * delta1 * mu2 * c * pow(z, 0.3e1) * delta2 - 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.12e2 * delta1 * delta2 * c * c - 0.16e2 * pow(c, 0.3e1) * mu2 * z - 0.16e2 * pow(c, 0.3e1) * delta2 * z + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z - 0.8e1 * delta1 * pow(c, 0.3e1) * z * z - 0.8e1 * z * z * mu1 * pow(mu2, 0.3e1) - 0.8e1 * z * z * c * pow(mu2, 0.3e1) + 0.24e2 * c * c * mu2 * mu2 * z - pow(c, 0.4e1) + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.24e2 * c * c * mu1 * mu2 * z * z - 0.24e2 * c * c * mu1 * delta2 * z * z + 0.24e2 * delta1 * c * c * mu2 * z * z + 0.24e2 * delta1 * c * c * delta2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu2 * pow(z, 0.3e1) * delta2 + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * delta1 * c * c * mu2 * pow(z, 0.3e1) - 0.12e2 * delta1 * c * c * delta2 * pow(z, 0.3e1) + 0.4e1 * z * pow(c, 0.4e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) - 0.20e2 * pow(mu2, 0.3e1) * delta2 - 0.18e2 * c * c * mu2 * mu2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * c * delta2 - 0.12e2 * delta1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * mu2 * mu2 * delta2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c + 0.48e2 * c * mu2 * mu2 * delta2 - 0.36e2 * c * c * mu2 * delta2 - 0.5e1 * pow(mu2, 0.4e1) - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * delta1 * pow(c, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z - 0.8e1 * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 12:
			return -(0.24e2 * c * delta2 * delta2 * mu1 * z * z + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 + 0.48e2 * c * c * mu2 * delta2 * z - 0.24e2 * c * z * z * delta1 * delta2 * delta2 - 0.8e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * mu2 * pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.16e2 * mu2 * z * z * pow(delta2, 0.3e1) - 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * delta2 + 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 + 0.4e1 * z * pow(mu2, 0.4e1) + 0.24e2 * z * z * c * mu2 * mu2 * mu1 - 0.24e2 * mu1 * mu2 * mu2 * z * z * delta2 - 0.24e2 * c * mu2 * mu2 * z * z * delta1 - 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.8e1 * c * pow(delta2, 0.3e1) * z * z - 0.16e2 * c * pow(delta2, 0.3e1) * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z + 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.4e1 * pow(delta2, 0.4e1) * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 - 0.16e2 * z * c * pow(mu2, 0.3e1) - 0.4e1 * z * z * pow(c, 0.4e1) + 0.2e1 * pow(z, 0.3e1) * pow(c, 0.4e1) + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.2e1 * pow(z, 0.3e1) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.48e2 * c * mu2 * mu1 * z * z * delta2 - 0.48e2 * c * mu2 * z * z * delta1 * delta2 - 0.48e2 * c * mu2 * mu2 * z * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.16e2 * mu2 * pow(delta2, 0.3e1) * z + 0.24e2 * delta1 * mu2 * mu2 * delta2 * z * z - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(delta2, 0.3e1) * z * z * delta1 + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z - 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 + 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.24e2 * c * mu2 * mu1 * pow(z, 0.3e1) * delta2 + 0.24e2 * delta1 * mu2 * c * pow(z, 0.3e1) * delta2 - 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.12e2 * delta1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.8e1 * pow(c, 0.3e1) * delta2 - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.12e2 * delta1 * delta2 * c * c - 0.16e2 * pow(c, 0.3e1) * mu2 * z - 0.16e2 * pow(c, 0.3e1) * delta2 * z + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(delta2, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z - 0.8e1 * delta1 * pow(c, 0.3e1) * z * z - 0.8e1 * z * z * mu1 * pow(mu2, 0.3e1) - 0.8e1 * z * z * c * pow(mu2, 0.3e1) + 0.24e2 * c * c * mu2 * mu2 * z - pow(c, 0.4e1) + 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.12e2 * mu1 * pow(z, 0.3e1) * delta2 * delta2 * mu2 - 0.24e2 * c * c * mu1 * mu2 * z * z - 0.24e2 * c * c * mu1 * delta2 * z * z + 0.24e2 * delta1 * c * c * mu2 * z * z + 0.24e2 * delta1 * c * c * delta2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) + 0.12e2 * delta1 * delta2 * delta2 * c * pow(z, 0.3e1) + 0.12e2 * c * mu2 * mu2 * pow(z, 0.3e1) * delta2 + 0.12e2 * c * delta2 * delta2 * pow(z, 0.3e1) * mu2 + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * delta1 * c * c * mu2 * pow(z, 0.3e1) - 0.12e2 * delta1 * c * c * delta2 * pow(z, 0.3e1) + 0.4e1 * z * pow(c, 0.4e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(delta2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(delta2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) + 0.16e2 * c * pow(delta2, 0.3e1) - 0.20e2 * pow(mu2, 0.3e1) * delta2 - 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.30e2 * mu2 * mu2 * delta2 * delta2 - 0.18e2 * c * c * mu2 * mu2 - 0.18e2 * c * c * delta2 * delta2 - 0.24e2 * c * mu2 * mu1 * delta2 + 0.24e2 * delta1 * mu2 * c * delta2 - 0.12e2 * delta1 * mu2 * mu2 * delta2 - 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.12e2 * mu1 * mu2 * mu2 * delta2 + 0.12e2 * mu1 * delta2 * delta2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * delta2 * delta2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c + 0.12e2 * delta1 * delta2 * delta2 * c + 0.48e2 * c * mu2 * mu2 * delta2 + 0.48e2 * c * delta2 * delta2 * mu2 - 0.36e2 * c * c * mu2 * delta2 - 0.5e1 * pow(mu2, 0.4e1) - 0.5e1 * pow(delta2, 0.4e1) + 0.24e2 * mu2 * z * z * delta1 * delta2 * delta2 - 0.24e2 * mu1 * mu2 * z * z * delta2 * delta2 - 0.24e2 * c * mu2 * z * z * delta2 * delta2 - 0.48e2 * c * delta2 * delta2 * z * mu2 - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * delta1 * pow(c, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z - 0.8e1 * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.24e2 * c * c * delta2 * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

/*----------------------------------------------------------------------------------------------------------------------------------------*/


double triangular_kernel_polynomial :: EBRC_integrate_piece_value(double z, int piecenum)
{
	
	if(fabs(z) < DBL_EPSILON)	
	{
		z = 1.0e-5;
	}
	if(fabs(1-z) < DBL_EPSILON)	
	{
		z = 1 - 1.0e-5;
	}



	switch (piecenum)
	{
		// Expressions for pdf(z)
		case 1:
			return (pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.16e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z - 0.8e1 * c * delta2 * mu1 * z - 0.8e1 * delta1 * mu2 * c * z + 0.8e1 * delta1 * mu2 * mu1 * z + 0.12e2 * delta1 * delta2 * c * z - 0.12e2 * delta1 * delta2 * mu1 * z - 0.12e2 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.4e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z + 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.4e1 * mu1 * mu1 * delta2 * z - 0.8e1 * delta1 * c * mu1 - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.4e1 * delta1 * c * c + 0.4e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * delta2 * z * z * mu2 + 0.8e1 * mu1 * delta2 * z * z * mu2 - 0.8e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * delta2 * z * z * c - 0.16e2 * delta1 * mu1 * z * z * mu2 + 0.8e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.8e1 * delta1 * mu1 * z * z * c - 0.12e2 * delta1 * delta2 * z * z * mu2 + 0.12e2 * delta1 * delta2 * pow(z, 0.3e1) * mu2 - 0.12e2 * delta1 * delta2 * z * z * c + 0.8e1 * delta1 * c * z * z * mu2 + 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.24e2 * mu1 * delta1 * delta2 * z * z - 0.12e2 * mu1 * pow(z, 0.3e1) * delta1 * delta2 + 0.12e2 * delta1 * z * z * mu1 * mu1 - 0.8e1 * delta2 * z * z * mu1 * mu1 - 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2) * (c - mu1 - mu2 * z + mu1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

		case 2:
			return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.12e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z - 0.8e1 * c * delta2 * mu1 * z - 0.6e1 * delta1 * mu2 * c * z + 0.6e1 * delta1 * mu2 * mu1 * z + 0.8e1 * delta1 * delta2 * c * z - 0.8e1 * delta1 * delta2 * mu1 * z - 0.9e1 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z + 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.4e1 * mu1 * mu1 * delta2 * z - 0.6e1 * delta1 * c * mu1 - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.3e1 * delta1 * c * c + 0.3e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * delta2 * z * z * mu2 + 0.8e1 * mu1 * delta2 * z * z * mu2 - 0.8e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * delta2 * z * z * c - 0.12e2 * delta1 * mu1 * z * z * mu2 + 0.6e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.6e1 * delta1 * mu1 * z * z * c - 0.8e1 * delta1 * delta2 * z * z * mu2 + 0.8e1 * delta1 * delta2 * pow(z, 0.3e1) * mu2 - 0.8e1 * delta1 * delta2 * z * z * c + 0.6e1 * delta1 * c * z * z * mu2 + 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.16e2 * mu1 * delta1 * delta2 * z * z - 0.8e1 * mu1 * pow(z, 0.3e1) * delta1 * delta2 + 0.9e1 * delta1 * z * z * mu1 * mu1 - 0.8e1 * delta2 * z * z * mu1 * mu1 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + pow(delta1, 0.3e1) - 0.3e1 * pow(delta1, 0.3e1) * z + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * delta1 * delta1 + 0.9e1 * mu1 * delta1 * delta1 * z - 0.6e1 * delta1 * delta1 * c * z - 0.3e1 * delta1 * delta1 * mu2 * z + 0.4e1 * delta1 * delta1 * delta2 * z + 0.6e1 * mu2 * z * z * delta1 * delta1 - 0.3e1 * mu2 * pow(z, 0.3e1) * delta1 * delta1 + 0.3e1 * c * z * z * delta1 * delta1 - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 - 0.8e1 * delta1 * delta1 * delta2 * z * z + 0.4e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 + 0.3e1 * pow(delta1, 0.3e1) * z * z - pow(delta1, 0.3e1) * pow(z, 0.3e1)) * (c - mu1 + mu1 * z + delta1 - delta1 * z - mu2 * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;


		case 3:
			return (pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.12e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z - 0.6e1 * c * delta2 * mu1 * z - 0.6e1 * delta1 * mu2 * c * z + 0.6e1 * delta1 * mu2 * mu1 * z + 0.6e1 * delta1 * delta2 * c * z - 0.6e1 * delta1 * delta2 * mu1 * z - 0.9e1 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z + 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.3e1 * mu1 * mu1 * delta2 * z - 0.6e1 * delta1 * c * mu1 - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.3e1 * delta1 * c * c + 0.3e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * delta2 * z * z * mu2 + 0.6e1 * mu1 * delta2 * z * z * mu2 - 0.6e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * delta2 * z * z * c - 0.12e2 * delta1 * mu1 * z * z * mu2 + 0.6e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.6e1 * delta1 * mu1 * z * z * c - 0.6e1 * delta1 * delta2 * z * z * mu2 + 0.6e1 * delta1 * delta2 * pow(z, 0.3e1) * mu2 - 0.6e1 * delta1 * delta2 * z * z * c + 0.6e1 * delta1 * c * z * z * mu2 + 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.12e2 * mu1 * delta1 * delta2 * z * z - 0.6e1 * mu1 * pow(z, 0.3e1) * delta1 * delta2 + 0.9e1 * delta1 * z * z * mu1 * mu1 - 0.6e1 * delta2 * z * z * mu1 * mu1 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + pow(delta1, 0.3e1) - 0.3e1 * pow(delta1, 0.3e1) * z + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * delta1 * delta1 + 0.9e1 * mu1 * delta1 * delta1 * z - 0.6e1 * delta1 * delta1 * c * z - 0.3e1 * delta1 * delta1 * mu2 * z + 0.3e1 * delta1 * delta1 * delta2 * z + 0.6e1 * mu2 * z * z * delta1 * delta1 - 0.3e1 * mu2 * pow(z, 0.3e1) * delta1 * delta1 + 0.3e1 * c * z * z * delta1 * delta1 - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 - 0.6e1 * delta1 * delta1 * delta2 * z * z + 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 + 0.3e1 * pow(delta1, 0.3e1) * z * z - pow(delta1, 0.3e1) * pow(z, 0.3e1) + pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 - 0.3e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c) * (c - mu1 + delta1 - mu2 * z + mu1 * z - delta1 * z + delta2 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;


		case 4:
			return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.16e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z - 0.6e1 * c * delta2 * mu1 * z - 0.8e1 * delta1 * mu2 * c * z + 0.8e1 * delta1 * mu2 * mu1 * z + 0.8e1 * delta1 * delta2 * c * z - 0.8e1 * delta1 * delta2 * mu1 * z - 0.12e2 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.4e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z + 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.3e1 * mu1 * mu1 * delta2 * z - 0.8e1 * delta1 * c * mu1 - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.4e1 * delta1 * c * c + 0.4e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * delta2 * z * z * mu2 + 0.6e1 * mu1 * delta2 * z * z * mu2 - 0.6e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * delta2 * z * z * c - 0.16e2 * delta1 * mu1 * z * z * mu2 + 0.8e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.8e1 * delta1 * mu1 * z * z * c - 0.8e1 * delta1 * delta2 * z * z * mu2 + 0.8e1 * delta1 * delta2 * pow(z, 0.3e1) * mu2 - 0.8e1 * delta1 * delta2 * z * z * c + 0.8e1 * delta1 * c * z * z * mu2 + 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.16e2 * mu1 * delta1 * delta2 * z * z - 0.8e1 * mu1 * pow(z, 0.3e1) * delta1 * delta2 + 0.12e2 * delta1 * z * z * mu1 * mu1 - 0.6e1 * delta2 * z * z * mu1 * mu1 - 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 - 0.4e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.4e1 * delta1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c) * (c - mu2 * z - mu1 + mu1 * z + delta2 * z) * pow(z, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 5:
			return -(0.6e1 * c * c - 0.12e2 * c * mu1 + 0.6e1 * mu1 * mu1 + 0.4e1 * delta1 * c - 0.4e1 * delta1 * mu1 - 0.12e2 * c * mu2 * z + 0.12e2 * c * delta2 * z + 0.12e2 * mu1 * mu2 * z - 0.12e2 * mu1 * delta2 * z + 0.12e2 * mu1 * c * z - 0.4e1 * delta1 * mu2 * z + 0.4e1 * delta1 * delta2 * z - 0.4e1 * delta1 * c * z - 0.12e2 * mu1 * mu1 * z - 0.2e1 * delta1 * delta1 * z + 0.6e1 * mu1 * mu1 * z * z + 0.8e1 * mu1 * z * delta1 - 0.12e2 * mu1 * z * z * mu2 + 0.4e1 * delta1 * z * z * mu2 - 0.4e1 * delta1 * z * z * mu1 - 0.12e2 * delta2 * z * z * mu2 + 0.12e2 * delta2 * z * z * mu1 + delta1 * delta1 - 0.4e1 * delta1 * delta2 * z * z + 0.6e1 * mu2 * mu2 * z * z + delta1 * delta1 * z * z) * pow(z, -0.2e1) * pow(delta2, -0.2e1) / 0.24e2;


		case 6:
			return -(-0.12e2 * mu1 * z * z * mu2 - 0.12e2 * delta1 * z * z * mu1 - 0.4e1 * delta1 * delta2 * z * z + 0.4e1 * delta2 * z * z * mu1 + 0.12e2 * delta1 * z * z * mu2 + 0.6e1 * mu1 * mu1 * z * z + delta2 * delta2 * z * z + 0.6e1 * mu2 * mu2 * z * z - 0.4e1 * delta2 * z * z * mu2 - 0.12e2 * c * mu2 * z - 0.4e1 * mu1 * delta2 * z - 0.12e2 * mu1 * mu1 * z + 0.4e1 * c * delta2 * z + 0.12e2 * mu1 * c * z - 0.12e2 * delta1 * mu2 * z + 0.24e2 * mu1 * z * delta1 + 0.12e2 * mu1 * mu2 * z - 0.12e2 * delta1 * c * z + 0.4e1 * delta1 * delta2 * z + 0.6e1 * c * c - 0.12e2 * c * mu1 + 0.6e1 * mu1 * mu1 + 0.12e2 * delta1 * c - 0.12e2 * delta1 * mu1) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 7:
			return -(0.4e1 * mu1 * mu2 * z + 0.4e1 * delta2 * mu2 * z - 0.4e1 * delta1 * mu2 * z - mu2 * mu2 * z - 0.4e1 * mu1 * c * z - 0.12e2 * mu1 * delta2 * z - 0.2e1 * c * mu2 * z + 0.4e1 * delta1 * c * z + 0.3e1 * c * c * z + 0.8e1 * c * delta2 * z + 0.12e2 * delta1 * delta2 * z - 0.4e1 * c * c + 0.4e1 * c * mu1 - 0.4e1 * mu1 * mu2 - 0.4e1 * delta1 * c + 0.4e1 * c * mu2 - 0.12e2 * c * delta2 + 0.12e2 * mu1 * delta2 + 0.4e1 * delta1 * mu2 - 0.12e2 * delta1 * delta2) * pow(-mu2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 8:
			return -(-mu2 * mu2 * z + 0.2e1 * delta2 * mu2 * z - 0.2e1 * c * mu2 * z + 0.4e1 * c * mu2 - 0.4e1 * mu1 * mu2 + 0.4e1 * mu1 * mu2 * z + 0.4e1 * delta1 * mu2 - 0.4e1 * delta1 * mu2 * z - delta2 * delta2 * z + 0.2e1 * c * delta2 * z - 0.4e1 * c * delta2 + 0.4e1 * mu1 * delta2 - 0.4e1 * mu1 * delta2 * z - 0.4e1 * delta1 * delta2 + 0.4e1 * delta1 * delta2 * z + 0.3e1 * c * c * z - 0.4e1 * c * c + 0.4e1 * c * mu1 - 0.4e1 * mu1 * c * z - 0.4e1 * delta1 * c + 0.4e1 * delta1 * c * z) * pow(-mu2 + delta2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 9:
			return -pow(c - mu1 + delta1, 0.2e1) * (c * c - 0.2e1 * c * mu1 + 0.2e1 * c * c * z + mu1 * mu1 + 0.2e1 * delta1 * c - 0.2e1 * delta1 * mu1 - 0.4e1 * c * mu2 * z + 0.4e1 * c * delta2 * z + 0.4e1 * mu1 * mu2 * z - 0.4e1 * mu1 * delta2 * z - 0.4e1 * delta1 * mu2 * z + 0.4e1 * delta1 * delta2 * z - 0.2e1 * mu1 * mu1 * z - 0.2e1 * delta1 * delta1 * z + mu1 * mu1 * z * z + 0.4e1 * mu1 * z * delta1 - 0.4e1 * mu1 * z * z * mu2 + 0.4e1 * delta1 * z * z * mu2 - 0.2e1 * delta1 * z * z * mu1 - 0.12e2 * delta2 * z * z * mu2 + 0.4e1 * delta2 * z * z * mu1 + delta1 * delta1 + 0.3e1 * c * c * z * z + 0.8e1 * c * delta2 * z * z + 0.2e1 * mu1 * c * z * z - 0.4e1 * delta1 * delta2 * z * z - 0.2e1 * delta1 * c * z * z + 0.6e1 * mu2 * mu2 * z * z - 0.8e1 * mu2 * z * z * c + delta1 * delta1 * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;


		case 10:
			return -(c - mu1) * (0.2e1 * pow(c, 0.3e1) * z + pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.8e1 * delta1 * c * mu1 - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.4e1 * delta1 * c * c + 0.4e1 * delta1 * mu1 * mu1 + 0.12e2 * delta1 * mu1 * mu2 * z - 0.12e2 * delta1 * mu1 * delta2 * z + 0.4e1 * delta1 * mu1 * c * z - 0.4e1 * c * c * mu2 * z + 0.4e1 * c * c * delta2 * z - 0.2e1 * c * c * z * mu1 + 0.4e1 * c * c * z * delta1 + 0.12e2 * c * delta2 * z * delta1 + 0.8e1 * c * mu2 * z * mu1 - 0.12e2 * c * mu2 * z * delta1 - 0.8e1 * c * delta2 * z * mu1 + 0.12e2 * delta1 * delta2 * delta2 * z * z + 0.3e1 * z * z * pow(c, 0.3e1) - z * z * pow(mu1, 0.3e1) + 0.2e1 * pow(mu1, 0.3e1) * z - z * z * c * c * mu1 + 0.4e1 * z * z * delta1 * c * c - z * z * c * mu1 * mu1 + 0.4e1 * z * z * delta1 * mu1 * mu1 + 0.6e1 * z * z * mu2 * mu2 * c - 0.6e1 * z * z * mu2 * mu2 * mu1 + 0.12e2 * z * z * mu2 * mu2 * delta1 - 0.8e1 * z * z * c * c * mu2 - 0.4e1 * z * z * mu1 * mu1 * delta2 + 0.8e1 * z * z * c * c * delta2 + 0.4e1 * z * z * mu1 * mu1 * mu2 + 0.6e1 * z * z * delta2 * delta2 * c - 0.6e1 * z * z * delta2 * delta2 * mu1 - 0.8e1 * mu1 * mu1 * z * delta1 - 0.4e1 * mu1 * mu1 * mu2 * z + 0.4e1 * mu1 * mu1 * delta2 * z - 0.2e1 * mu1 * mu1 * c * z - 0.12e2 * z * z * c * mu2 * delta1 - 0.12e2 * z * z * mu1 * mu2 * delta1 + 0.12e2 * z * z * delta1 * c * delta2 + 0.12e2 * z * z * delta1 * mu1 * delta2 - 0.4e1 * z * z * c * mu1 * delta2 + 0.4e1 * z * z * delta1 * c * mu1 - 0.24e2 * z * z * delta2 * mu2 * delta1 - 0.12e2 * z * z * delta2 * mu2 * c + 0.12e2 * z * z * delta2 * mu2 * mu1 + 0.4e1 * z * z * c * mu2 * mu1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

	
		case 11:
			return -(-0.6e1 * delta1 * delta1 * delta2 * delta2 * z * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * c * pow(delta2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * delta1 * pow(delta2, 0.3e1) * z + 0.4e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.6e1 * delta2 * delta2 * delta1 * delta1 + 0.4e1 * pow(delta2, 0.3e1) * z * z * mu2 + 0.4e1 * delta2 * z * z * pow(mu2, 0.3e1) - 0.6e1 * delta2 * delta2 * z * z * mu2 * mu2 - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z - 0.6e1 * mu1 * mu1 * delta2 * delta2 - 0.6e1 * c * c * delta2 * delta2 + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - pow(mu2, 0.4e1) * z * z - pow(delta2, 0.4e1) * z * z + 0.12e2 * c * mu2 * z * delta2 * delta2 - 0.12e2 * c * mu2 * mu2 * z * delta2 - 0.12e2 * mu1 * mu2 * z * delta2 * delta2 - 0.12e2 * mu1 * mu2 * mu2 * z * z * delta2 + 0.12e2 * mu1 * mu2 * mu2 * z * delta2 + 0.12e2 * mu1 * mu2 * z * z * delta2 * delta2 + 0.12e2 * delta1 * mu2 * z * delta2 * delta2 + 0.12e2 * delta1 * mu2 * mu2 * z * z * delta2 - 0.12e2 * delta1 * mu2 * mu2 * z * delta2 - 0.12e2 * delta1 * mu2 * z * z * delta2 * delta2 - 0.12e2 * c * c * mu2 * mu2 * z + 0.6e1 * c * c * mu2 * mu2 * z * z - 0.6e1 * z * z * mu1 * mu1 * delta2 * delta2 - 0.12e2 * delta1 * c * delta2 * delta2 + 0.12e2 * delta1 * mu1 * delta2 * delta2 + 0.12e2 * c * mu1 * delta2 * delta2 + 0.12e2 * mu1 * mu1 * delta2 * delta2 * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * mu1 * delta2 * z * z - 0.12e2 * delta1 * c * c * delta2 * z + 0.12e2 * delta1 * c * c * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * mu2 * z * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * c * c * delta1 * mu2 * z * z + 0.24e2 * c * c * delta2 * mu2 * z - 0.12e2 * c * c * delta2 * mu2 * z * z + 0.12e2 * c * mu1 * mu2 * mu2 * z - 0.12e2 * c * mu1 * mu2 * mu2 * z * z - 0.12e2 * delta1 * c * mu2 * mu2 * z + 0.12e2 * delta1 * c * mu2 * mu2 * z * z - 0.24e2 * delta1 * mu1 * delta2 * delta2 * z + 0.12e2 * c * delta2 * delta2 * z * delta1 - 0.12e2 * c * delta2 * delta2 * z * mu1 + 0.12e2 * z * z * delta1 * mu1 * delta2 * delta2 + 0.12e2 * z * delta2 * delta2 * delta1 * delta1 - 0.24e2 * c * mu1 * delta2 * mu2 * z + 0.24e2 * c * mu1 * delta2 * mu2 * z * z + 0.24e2 * delta1 * c * delta2 * mu2 * z - 0.24e2 * delta1 * c * delta2 * mu2 * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 12:
			return -(0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * delta2 * z * z * pow(mu2, 0.3e1) - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z + 0.6e1 * mu1 * mu1 * delta2 * delta2 + 0.6e1 * c * c * delta2 * delta2 + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - pow(mu2, 0.4e1) * z * z - 0.12e2 * c * mu2 * mu2 * z * delta2 - 0.12e2 * mu1 * mu2 * mu2 * z * z * delta2 + 0.12e2 * mu1 * mu2 * mu2 * z * delta2 + 0.12e2 * delta1 * mu2 * mu2 * z * z * delta2 - 0.12e2 * delta1 * mu2 * mu2 * z * delta2 - 0.12e2 * c * c * mu2 * mu2 * z + 0.6e1 * c * c * mu2 * mu2 * z * z - 0.12e2 * c * c * delta2 * delta2 * z + 0.6e1 * z * z * mu1 * mu1 * delta2 * delta2 + 0.6e1 * z * z * c * c * delta2 * delta2 + 0.12e2 * delta1 * c * delta2 * delta2 - 0.12e2 * delta1 * mu1 * delta2 * delta2 - 0.12e2 * c * mu1 * delta2 * delta2 - 0.12e2 * mu1 * mu1 * delta2 * delta2 * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * mu1 * delta2 * z * z - 0.12e2 * delta1 * c * c * delta2 * z + 0.12e2 * delta1 * c * c * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * mu2 * z * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * c * c * delta1 * mu2 * z * z + 0.24e2 * c * c * delta2 * mu2 * z - 0.12e2 * c * c * delta2 * mu2 * z * z + 0.12e2 * c * mu1 * mu2 * mu2 * z - 0.12e2 * c * mu1 * mu2 * mu2 * z * z - 0.12e2 * delta1 * c * mu2 * mu2 * z + 0.12e2 * delta1 * c * mu2 * mu2 * z * z + 0.24e2 * delta1 * mu1 * delta2 * delta2 * z - 0.24e2 * c * delta2 * delta2 * z * delta1 + 0.24e2 * c * delta2 * delta2 * z * mu1 + 0.12e2 * z * z * delta1 * c * delta2 * delta2 - 0.12e2 * z * z * delta1 * mu1 * delta2 * delta2 - 0.12e2 * z * z * c * mu1 * delta2 * delta2 - 0.24e2 * c * mu1 * delta2 * mu2 * z + 0.24e2 * c * mu1 * delta2 * mu2 * z * z + 0.24e2 * delta1 * c * delta2 * mu2 * z - 0.24e2 * delta1 * c * delta2 * mu2 * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: EBRC_expected_piece_value(double z, int piecenum)
{
	
	if(fabs(z) < DBL_EPSILON)	
	{
		z = 1.0e-5;
	}
	if(fabs(1-z) < DBL_EPSILON)	
	{
		z = 1 - 1.0e-5;
	}

	
	switch (piecenum)
	{
		// Expressions for z.pdf(z) and not pdf(z)
		case 1:
				
			return -(-0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * mu2 * mu2 * mu1 * delta2 * z * z + 0.12e2 * mu2 * mu2 * delta1 * delta2 * z * z - 0.24e2 * c * delta2 * mu1 * mu2 * z + 0.24e2 * delta1 * delta2 * c * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.12e2 * c * pow(mu2, 0.3e1) * z * z - 0.12e2 * delta1 * delta2 * mu2 * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.36e2 * c * mu2 * mu2 * z * z * delta2 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(c, 0.4e1) * z * z + 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z + 0.2e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * pow(c, 0.4e1) * z * z - 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.24e2 * c * c * delta2 * mu2 * z * z - 0.4e1 * pow(mu2, 0.3e1) * delta1 * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.12e2 * c * c * mu1 * mu2 * z * z - 0.12e2 * delta1 * c * c * mu2 * z * z + 0.24e2 * delta1 * c * c * mu1 * z * z - 0.12e2 * c * c * delta2 * mu1 * z * z + 0.12e2 * delta1 * delta2 * c * c * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * delta1 * c * c * mu2 * z - 0.48e2 * delta1 * c * c * mu1 * z + 0.48e2 * delta1 * c * mu1 * mu1 * z - 0.24e2 * delta1 * c * mu1 * mu1 * z * z + 0.12e2 * c * c * delta2 * mu1 * z - 0.12e2 * delta1 * delta2 * c * c * z - 0.24e2 * delta1 * mu1 * mu1 * c - 0.16e2 * delta1 * pow(mu1, 0.3e1) * z + 0.24e2 * c * c * mu1 * mu1 * z - 0.16e2 * c * pow(mu1, 0.3e1) * z + 0.24e2 * delta1 * c * c * mu1 + 0.8e1 * delta1 * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z - 0.12e2 * c * c * mu1 * mu1 * z * z - 0.12e2 * pow(c, 0.3e1) * mu1 * z + 0.12e2 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * pow(c, 0.3e1) * mu2 * z * z + 0.8e1 * pow(mu1, 0.3e1) * c + 0.4e1 * pow(mu1, 0.4e1) * z + 0.8e1 * delta1 * pow(mu1, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu1 - 0.12e2 * c * c * mu1 * mu1 - 0.8e1 * delta1 * pow(c, 0.3e1) - 0.2e1 * pow(mu1, 0.4e1) * z * z + 0.3e1 * z * pow(c, 0.4e1) - 0.2e1 * pow(mu1, 0.4e1) - 0.2e1 * pow(c, 0.4e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.8e1 * c * pow(mu2, 0.3e1) * z + 0.6e1 * c * c * mu2 * mu2 * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.12e2 * delta2 * pow(mu2, 0.3e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu2 * mu1 * mu1 * z * z - 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta2 * delta1 * z * z + 0.12e2 * log(z) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z - 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * c * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * c * c * delta1 * z * z - 0.12e2 * log(z) * mu2 * c * c * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(z) * c * c * mu2 * mu1 * z - 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * z + 0.12e2 * log(z) * c * c * delta2 * delta1 * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z - 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * z - 0.12e2 * log(z) * mu2 * c * c * delta1 * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z - 0.12e2 * c * c * mu2 * mu2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * delta1 * mu2 * mu2 * c * z + 0.24e2 * delta2 * mu2 * mu2 * c * z - 0.12e2 * c * c * delta2 * mu2 * z + 0.12e2 * delta2 * mu2 * mu2 * mu1 * z + 0.3e1 * pow(mu2, 0.4e1) * z - 0.24e2 * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * c * mu1 * mu2 * delta2 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * z + 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * pow(z, 0.3e1) - 0.48e2 * log(z) * mu2 * c * mu1 * delta1 * z * z + 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * c * mu1 * delta2 * delta1 * z * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * pow(z, 0.3e1)) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;


		case 2:
			return (-0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * mu2 * mu2 * mu1 * delta2 * z * z + 0.12e2 * mu2 * mu2 * delta1 * delta2 * z * z - 0.24e2 * c * delta2 * mu1 * mu2 * z + 0.24e2 * delta1 * delta2 * c * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.12e2 * c * pow(mu2, 0.3e1) * z * z - 0.12e2 * delta1 * delta2 * mu2 * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.36e2 * c * mu2 * mu2 * z * z * delta2 - 0.48e2 * delta1 * delta1 * c * mu1 * z + 0.24e2 * delta1 * delta1 * c * mu1 * z * z + 0.24e2 * delta1 * delta1 * mu1 * mu1 * z + 0.24e2 * delta1 * delta1 * c * c * z - 0.12e2 * delta1 * delta1 * mu1 * mu1 - 0.12e2 * delta1 * delta1 * c * c + 0.4e1 * pow(delta1, 0.4e1) * z - 0.2e1 * pow(delta1, 0.4e1) * z * z + 0.8e1 * mu1 * pow(delta1, 0.3e1) - 0.8e1 * c * pow(delta1, 0.3e1) - 0.2e1 * pow(delta1, 0.4e1) + 0.24e2 * delta1 * delta1 * c * mu1 - 0.12e2 * delta1 * delta1 * mu1 * mu1 * z * z + 0.16e2 * pow(delta1, 0.3e1) * z * c - 0.16e2 * pow(delta1, 0.3e1) * z * mu1 + 0.8e1 * pow(delta1, 0.3e1) * z * z * mu1 - 0.8e1 * pow(delta1, 0.3e1) * c * z * z - 0.12e2 * delta1 * delta1 * c * c * z * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(c, 0.4e1) * z * z + 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z + 0.2e1 * log(z) * pow(c, 0.4e1) * z + 0.4e1 * pow(delta1, 0.4e1) * log(z) * z * z - 0.2e1 * pow(delta1, 0.4e1) * log(z) * pow(z, 0.3e1) - 0.2e1 * pow(delta1, 0.4e1) * log(z) * z - 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * pow(z, 0.3e1) + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * pow(z, 0.3e1) + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * pow(z, 0.3e1) - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z + 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * pow(z, 0.3e1) - 0.2e1 * pow(c, 0.4e1) * z * z - 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.24e2 * c * c * delta2 * mu2 * z * z - 0.4e1 * pow(mu2, 0.3e1) * delta1 * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.12e2 * c * c * mu1 * mu2 * z * z - 0.12e2 * delta1 * c * c * mu2 * z * z + 0.24e2 * delta1 * c * c * mu1 * z * z - 0.12e2 * c * c * delta2 * mu1 * z * z + 0.12e2 * delta1 * delta2 * c * c * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * delta1 * c * c * mu2 * z - 0.48e2 * delta1 * c * c * mu1 * z + 0.48e2 * delta1 * c * mu1 * mu1 * z - 0.24e2 * delta1 * c * mu1 * mu1 * z * z + 0.12e2 * c * c * delta2 * mu1 * z - 0.12e2 * delta1 * delta2 * c * c * z - 0.24e2 * delta1 * mu1 * mu1 * c - 0.16e2 * delta1 * pow(mu1, 0.3e1) * z + 0.24e2 * c * c * mu1 * mu1 * z - 0.16e2 * c * pow(mu1, 0.3e1) * z + 0.24e2 * delta1 * c * c * mu1 + 0.8e1 * delta1 * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z - 0.12e2 * c * c * mu1 * mu1 * z * z - 0.12e2 * pow(c, 0.3e1) * mu1 * z + 0.12e2 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * pow(c, 0.3e1) * mu2 * z * z + 0.8e1 * pow(mu1, 0.3e1) * c + 0.4e1 * pow(mu1, 0.4e1) * z + 0.8e1 * delta1 * pow(mu1, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu1 - 0.12e2 * c * c * mu1 * mu1 - 0.8e1 * delta1 * pow(c, 0.3e1) - 0.2e1 * pow(mu1, 0.4e1) * z * z + 0.3e1 * z * pow(c, 0.4e1) - 0.2e1 * pow(mu1, 0.4e1) - 0.2e1 * pow(c, 0.4e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.8e1 * c * pow(mu2, 0.3e1) * z + 0.6e1 * c * c * mu2 * mu2 * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.12e2 * delta2 * pow(mu2, 0.3e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.24e2 * log(z) * c * delta2 * delta1 * delta1 * z * z + 0.12e2 * log(z) * c * delta2 * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * delta2 * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu1 * delta2 * delta1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * mu1 * delta1 * delta1 * z * z + 0.12e2 * log(z) * c * mu1 * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * c * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu2 * mu1 * mu1 * z * z - 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta2 * delta1 * z * z + 0.12e2 * log(z) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z - 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * c * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * c * c * delta1 * z * z - 0.12e2 * log(z) * mu2 * c * c * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(z) * c * c * mu2 * mu1 * z - 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * z + 0.12e2 * log(z) * c * c * delta2 * delta1 * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z - 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * z - 0.12e2 * log(z) * mu2 * c * c * delta1 * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z - 0.12e2 * c * c * mu2 * mu2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * delta1 * mu2 * mu2 * c * z + 0.24e2 * delta2 * mu2 * mu2 * c * z - 0.12e2 * c * c * delta2 * mu2 * z + 0.12e2 * delta2 * mu2 * mu2 * mu1 * z + 0.3e1 * pow(mu2, 0.4e1) * z - 0.24e2 * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * c * mu1 * mu2 * delta2 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.12e2 * log(z) * c * delta2 * delta1 * delta1 * z - 0.12e2 * log(z) * mu1 * delta2 * delta1 * delta1 * z + 0.12e2 * log(z) * c * mu1 * delta1 * delta1 * z - 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * z + 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * z + 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * pow(z, 0.3e1) - 0.48e2 * log(z) * mu2 * c * mu1 * delta1 * z * z + 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * c * mu1 * delta2 * delta1 * z * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * pow(z, 0.3e1)) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;


		case 3:
			return -(-0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * mu2 * mu2 * mu1 * delta2 * z * z + 0.12e2 * mu2 * mu2 * delta1 * delta2 * z * z + 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * pow(z, 0.3e1) - 0.24e2 * c * delta2 * mu1 * mu2 * z + 0.24e2 * delta1 * delta2 * c * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.12e2 * c * pow(mu2, 0.3e1) * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * mu2 * z * z - 0.4e1 * pow(delta2, 0.3e1) * mu1 * z * z - 0.24e2 * mu2 * mu2 * delta2 * delta2 * z * z + 0.4e1 * pow(delta2, 0.3e1) * delta1 * z * z - 0.12e2 * delta1 * delta2 * mu2 * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * pow(z, 0.3e1) + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * pow(z, 0.3e1) + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.36e2 * c * mu2 * mu2 * z * z * delta2 - 0.48e2 * delta1 * delta1 * c * mu1 * z + 0.24e2 * delta1 * delta1 * c * mu1 * z * z + 0.24e2 * delta1 * delta1 * mu1 * mu1 * z + 0.24e2 * delta1 * delta1 * c * c * z - 0.12e2 * delta1 * delta1 * mu1 * mu1 - 0.12e2 * delta1 * delta1 * c * c + 0.4e1 * pow(delta1, 0.4e1) * z - 0.2e1 * pow(delta1, 0.4e1) * z * z + 0.8e1 * mu1 * pow(delta1, 0.3e1) - 0.8e1 * c * pow(delta1, 0.3e1) - 0.2e1 * pow(delta1, 0.4e1) + 0.24e2 * delta1 * delta1 * c * mu1 - 0.12e2 * delta1 * delta1 * mu1 * mu1 * z * z + 0.16e2 * pow(delta1, 0.3e1) * z * c - 0.16e2 * pow(delta1, 0.3e1) * z * mu1 + 0.8e1 * pow(delta1, 0.3e1) * z * z * mu1 - 0.8e1 * pow(delta1, 0.3e1) * c * z * z - 0.12e2 * delta1 * delta1 * c * c * z * z + 0.4e1 * pow(delta2, 0.3e1) * mu1 * z - 0.12e2 * mu2 * pow(delta2, 0.3e1) * z + 0.8e1 * pow(delta2, 0.3e1) * c * z - 0.4e1 * pow(delta2, 0.3e1) * delta1 * z + 0.18e2 * mu2 * mu2 * delta2 * delta2 * z + 0.6e1 * c * c * delta2 * delta2 * z + 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(c, 0.4e1) * z * z + 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z + 0.2e1 * log(z) * pow(c, 0.4e1) * z + 0.4e1 * pow(delta1, 0.4e1) * log(z) * z * z - 0.2e1 * pow(delta1, 0.4e1) * log(z) * pow(z, 0.3e1) - 0.2e1 * pow(delta1, 0.4e1) * log(z) * z - 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * pow(z, 0.3e1) + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * pow(z, 0.3e1) + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * pow(z, 0.3e1) - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z + 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * pow(z, 0.3e1) - 0.2e1 * pow(c, 0.4e1) * z * z - 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.24e2 * c * c * delta2 * mu2 * z * z + 0.3e1 * pow(delta2, 0.4e1) * z + 0.12e2 * delta1 * delta2 * delta2 * c * z * z + 0.36e2 * c * delta2 * delta2 * mu2 * z * z - 0.12e2 * c * delta2 * delta2 * mu1 * z * z - 0.4e1 * pow(mu2, 0.3e1) * delta1 * z * z + 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.12e2 * c * c * delta2 * delta2 * z * z + 0.12e2 * c * c * mu1 * mu2 * z * z - 0.12e2 * delta1 * c * c * mu2 * z * z + 0.24e2 * delta1 * c * c * mu1 * z * z - 0.12e2 * c * c * delta2 * mu1 * z * z + 0.12e2 * delta1 * delta2 * c * c * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * delta1 * c * c * mu2 * z - 0.48e2 * delta1 * c * c * mu1 * z + 0.48e2 * delta1 * c * mu1 * mu1 * z - 0.24e2 * delta1 * c * mu1 * mu1 * z * z + 0.12e2 * c * c * delta2 * mu1 * z - 0.12e2 * delta1 * delta2 * c * c * z - 0.24e2 * delta1 * mu1 * mu1 * c - 0.16e2 * delta1 * pow(mu1, 0.3e1) * z + 0.24e2 * c * c * mu1 * mu1 * z - 0.16e2 * c * pow(mu1, 0.3e1) * z + 0.24e2 * delta1 * c * c * mu1 + 0.8e1 * delta1 * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z - 0.12e2 * c * c * mu1 * mu1 * z * z - 0.12e2 * pow(c, 0.3e1) * mu1 * z + 0.12e2 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z * z - 0.4e1 * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * pow(c, 0.3e1) * mu2 * z * z + 0.8e1 * pow(mu1, 0.3e1) * c + 0.4e1 * pow(mu1, 0.4e1) * z + 0.8e1 * delta1 * pow(mu1, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu1 - 0.12e2 * c * c * mu1 * mu1 - 0.8e1 * delta1 * pow(c, 0.3e1) - 0.2e1 * pow(mu1, 0.4e1) * z * z + 0.3e1 * z * pow(c, 0.4e1) - 0.2e1 * pow(mu1, 0.4e1) - 0.2e1 * pow(c, 0.4e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.8e1 * c * pow(mu2, 0.3e1) * z + 0.6e1 * c * c * mu2 * mu2 * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.12e2 * delta2 * pow(mu2, 0.3e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.24e2 * log(z) * c * delta2 * delta1 * delta1 * z * z + 0.12e2 * log(z) * c * delta2 * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * delta2 * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu1 * delta2 * delta1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * mu1 * delta1 * delta1 * z * z + 0.12e2 * log(z) * c * mu1 * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * c * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * pow(z, 0.3e1) + 0.12e2 * mu1 * mu2 * delta2 * delta2 * z * z - 0.12e2 * mu2 * delta1 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) + 0.12e2 * c * delta2 * delta2 * mu1 * z - 0.12e2 * mu1 * delta2 * delta2 * mu2 * z - 0.24e2 * mu2 * delta2 * delta2 * c * z + 0.12e2 * delta1 * delta2 * delta2 * mu2 * z - 0.12e2 * delta1 * delta2 * delta2 * c * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu2 * mu1 * mu1 * z * z - 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta2 * delta1 * z * z + 0.12e2 * log(z) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z - 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * c * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * c * c * delta1 * z * z - 0.12e2 * log(z) * mu2 * c * c * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.12e2 * log(z) * c * c * mu2 * mu1 * z - 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * z + 0.12e2 * log(z) * c * c * delta2 * delta1 * z + 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z - 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.12e2 * log(z) * c * c * mu1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * z - 0.12e2 * log(z) * mu2 * c * c * delta1 * z - 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z - 0.12e2 * pow(delta2, 0.3e1) * c * z * z - 0.12e2 * c * c * mu2 * mu2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * delta1 * mu2 * mu2 * c * z + 0.24e2 * delta2 * mu2 * mu2 * c * z - 0.12e2 * c * c * delta2 * mu2 * z + 0.12e2 * delta2 * mu2 * mu2 * mu1 * z + 0.3e1 * pow(mu2, 0.4e1) * z - 0.24e2 * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * c * mu1 * mu2 * delta2 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.12e2 * log(z) * c * delta2 * delta1 * delta1 * z - 0.12e2 * log(z) * mu1 * delta2 * delta1 * delta1 * z + 0.12e2 * log(z) * c * mu1 * delta1 * delta1 * z - 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * z + 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * z + 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * pow(z, 0.3e1) - 0.48e2 * log(z) * mu2 * c * mu1 * delta1 * z * z + 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * pow(z, 0.3e1) + 0.48e2 * log(z) * c * mu1 * delta2 * delta1 * z * z - 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * pow(z, 0.3e1) + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;

			
		case 4:
			return -(0.12e2 * c * mu2 * mu2 * mu1 * z * z - 0.12e2 * mu2 * mu2 * c * delta1 * z * z + 0.12e2 * mu2 * mu2 * mu1 * delta2 * z * z - 0.12e2 * mu2 * mu2 * delta1 * delta2 * z * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * pow(z, 0.3e1) + 0.24e2 * c * delta2 * mu1 * mu2 * z - 0.24e2 * delta1 * delta2 * c * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * c * pow(mu2, 0.3e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z * z + 0.4e1 * pow(delta2, 0.3e1) * mu1 * z * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z * z - 0.4e1 * pow(delta2, 0.3e1) * delta1 * z * z + 0.12e2 * delta1 * delta2 * mu2 * mu2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * pow(z, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * pow(z, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z + 0.36e2 * c * mu2 * mu2 * z * z * delta2 - 0.4e1 * pow(delta2, 0.3e1) * mu1 * z + 0.12e2 * mu2 * pow(delta2, 0.3e1) * z - 0.8e1 * pow(delta2, 0.3e1) * c * z + 0.4e1 * pow(delta2, 0.3e1) * delta1 * z - 0.18e2 * mu2 * mu2 * delta2 * delta2 * z - 0.6e1 * c * c * delta2 * delta2 * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z + 0.2e1 * pow(c, 0.4e1) * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z - 0.24e2 * c * c * delta2 * mu2 * z * z - 0.3e1 * pow(delta2, 0.4e1) * z - 0.12e2 * delta1 * delta2 * delta2 * c * z * z - 0.36e2 * c * delta2 * delta2 * mu2 * z * z + 0.12e2 * c * delta2 * delta2 * mu1 * z * z + 0.4e1 * pow(mu2, 0.3e1) * delta1 * z * z - 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.12e2 * c * c * delta2 * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z * z + 0.12e2 * delta1 * c * c * mu2 * z * z - 0.24e2 * delta1 * c * c * mu1 * z * z + 0.12e2 * c * c * delta2 * mu1 * z * z - 0.12e2 * delta1 * delta2 * c * c * z * z + 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * delta1 * c * c * mu2 * z + 0.48e2 * delta1 * c * c * mu1 * z - 0.48e2 * delta1 * c * mu1 * mu1 * z + 0.24e2 * delta1 * c * mu1 * mu1 * z * z - 0.12e2 * c * c * delta2 * mu1 * z + 0.12e2 * delta1 * delta2 * c * c * z + 0.24e2 * delta1 * mu1 * mu1 * c + 0.16e2 * delta1 * pow(mu1, 0.3e1) * z - 0.24e2 * c * c * mu1 * mu1 * z + 0.16e2 * c * pow(mu1, 0.3e1) * z - 0.24e2 * delta1 * c * c * mu1 - 0.8e1 * delta1 * pow(mu1, 0.3e1) * z * z - 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.12e2 * c * c * mu1 * mu1 * z * z + 0.12e2 * pow(c, 0.3e1) * mu1 * z - 0.12e2 * delta1 * pow(c, 0.3e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * delta1 * pow(c, 0.3e1) * z * z + 0.4e1 * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * pow(mu1, 0.3e1) * c - 0.4e1 * pow(mu1, 0.4e1) * z - 0.8e1 * delta1 * pow(mu1, 0.3e1) - 0.8e1 * pow(c, 0.3e1) * mu1 + 0.12e2 * c * c * mu1 * mu1 + 0.8e1 * delta1 * pow(c, 0.3e1) + 0.2e1 * pow(mu1, 0.4e1) * z * z - 0.3e1 * z * pow(c, 0.4e1) + 0.2e1 * pow(mu1, 0.4e1) + 0.2e1 * pow(c, 0.4e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * c * pow(mu2, 0.3e1) * z - 0.6e1 * c * c * mu2 * mu2 * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z + 0.12e2 * delta2 * pow(mu2, 0.3e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.12e2 * mu1 * mu2 * delta2 * delta2 * z * z + 0.12e2 * mu2 * delta1 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * mu1 * z + 0.12e2 * mu1 * delta2 * delta2 * mu2 * z + 0.24e2 * mu2 * delta2 * delta2 * c * z - 0.12e2 * delta1 * delta2 * delta2 * mu2 * z + 0.12e2 * delta1 * delta2 * delta2 * c * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * mu2 * mu1 * mu1 * z * z + 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * delta2 * delta1 * z * z - 0.12e2 * log(z) * c * c * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z * z - 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * mu1 * c * delta2 * z * z - 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * c * c * delta1 * z * z + 0.12e2 * log(z) * mu2 * c * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * log(z) * c * c * mu2 * mu1 * z + 0.12e2 * log(z) * c * mu2 * mu1 * mu1 * z - 0.12e2 * log(z) * c * c * delta2 * delta1 * z - 0.12e2 * log(z) * mu1 * mu1 * delta2 * delta1 * z + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * z - 0.12e2 * log(z) * mu1 * mu1 * c * delta2 * z + 0.12e2 * log(z) * mu2 * c * c * delta1 * z + 0.12e2 * log(z) * mu2 * mu1 * mu1 * delta1 * z + 0.12e2 * pow(delta2, 0.3e1) * c * z * z + 0.12e2 * c * c * mu2 * mu2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * z + 0.12e2 * delta1 * mu2 * mu2 * c * z - 0.24e2 * delta2 * mu2 * mu2 * c * z + 0.12e2 * c * c * delta2 * mu2 * z - 0.12e2 * delta2 * mu2 * mu2 * mu1 * z - 0.3e1 * pow(mu2, 0.4e1) * z + 0.24e2 * mu2 * c * delta1 * delta2 * z * z - 0.24e2 * c * mu1 * mu2 * delta2 * z * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * z - 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * pow(z, 0.3e1) + 0.48e2 * log(z) * mu2 * c * mu1 * delta1 * z * z - 0.24e2 * log(z) * mu2 * c * mu1 * delta1 * pow(z, 0.3e1) - 0.48e2 * log(z) * c * mu1 * delta2 * delta1 * z * z + 0.24e2 * log(z) * c * mu1 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * pow(z, 0.3e1) - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;


		case 5:
			return -(0.6e1 * c * c - 0.12e2 * c * mu1 + delta1 * delta1 + 0.4e1 * delta1 * c - 0.4e1 * delta1 * mu1 + 0.6e1 * mu1 * mu1 + 0.6e1 * log(z) * mu2 * c * z - 0.6e1 * log(z) * c * delta2 * z - 0.6e1 * log(z) * mu2 * mu1 * z + 0.6e1 * log(z) * mu1 * delta2 * z - 0.6e1 * log(z) * c * mu1 * z + 0.2e1 * delta1 * log(z) * mu2 * z - 0.2e1 * delta1 * log(z) * delta2 * z + 0.2e1 * delta1 * log(z) * c * z + 0.6e1 * log(z) * mu1 * mu1 * z - 0.4e1 * delta1 * log(z) * mu1 * z + delta1 * delta1 * log(z) * z) * pow(delta2, -0.2e1) / z / 0.12e2;

		case 6:
			return -(-0.36e2 * c * mu2 * z + 0.12e2 * c * delta2 * z - 0.12e2 * mu1 * mu2 * z + 0.4e1 * mu1 * delta2 * z + 0.12e2 * mu1 * c * z + 0.12e2 * delta1 * mu2 * z - 0.4e1 * delta1 * delta2 * z - 0.12e2 * delta1 * c * z - 0.6e1 * c * c - 0.12e2 * c * mu1 + 0.12e2 * c * c * z + 0.12e2 * delta1 * c + 0.24e2 * c * mu2 - 0.8e1 * c * delta2 + 0.12e2 * mu1 * mu2 - 0.4e1 * mu1 * delta2 - 0.12e2 * delta1 * mu2 + 0.4e1 * delta1 * delta2 - 0.18e2 * mu2 * mu2 - 0.16e2 * delta2 * mu2 * z + 0.24e2 * mu2 * mu2 * z + 0.12e2 * delta2 * mu2 - 0.2e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * c - 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z * z + 0.4e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z - 0.2e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 + 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z * z - 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * c * z - 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * c * z * z + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z - 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z * z - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z + 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.3e1 * delta2 * delta2 + 0.4e1 * delta2 * delta2 * z) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
			
		case 7:
			return (-0.24e2 * c * delta2 * mu1 * mu2 * z + 0.24e2 * delta1 * delta2 * c * mu2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * delta1 * delta2 * mu2 * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * c * c * delta2 * mu1 * z - 0.12e2 * delta1 * delta2 * c * c * z - 0.12e2 * c * c * mu1 * delta2 + 0.12e2 * c * c * delta1 * delta2 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * delta1 * mu2 * c * c + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.12e2 * delta2 * pow(mu2, 0.3e1) + 0.8e1 * c * pow(mu2, 0.3e1) - 0.6e1 * c * c * mu2 * mu2 + pow(c, 0.4e1) + 0.12e2 * delta1 * delta2 * mu2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.24e2 * delta2 * mu2 * mu2 * c + 0.12e2 * c * c * delta2 * mu2 - 0.12e2 * delta2 * mu2 * mu2 * mu1 - 0.3e1 * pow(mu2, 0.4e1) + 0.24e2 * c * delta2 * mu1 * mu2 - 0.24e2 * delta1 * delta2 * c * mu2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.12e2 * c * pow(mu2, 0.3e1) * z + 0.12e2 * c * c * mu2 * mu2 * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.16e2 * delta2 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * delta1 * mu2 * mu2 * c * z + 0.36e2 * delta2 * mu2 * mu2 * c * z - 0.24e2 * c * c * delta2 * mu2 * z + 0.12e2 * delta2 * mu2 * mu2 * mu1 * z + 0.4e1 * pow(mu2, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1)) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;
			
		case 8:
			return (-0.3e1 * pow(delta2, 0.4e1) - 0.18e2 * mu2 * mu2 * delta2 * delta2 + 0.12e2 * mu2 * pow(delta2, 0.3e1) - 0.8e1 * pow(delta2, 0.3e1) * c - 0.24e2 * c * delta2 * mu1 * mu2 * z + 0.24e2 * delta1 * delta2 * c * mu2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.6e1 * c * c * delta2 * delta2 - 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * delta1 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.12e2 * delta1 * delta2 * mu2 * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z + 0.4e1 * pow(delta2, 0.3e1) * mu1 * z - 0.16e2 * mu2 * pow(delta2, 0.3e1) * z + 0.12e2 * pow(delta2, 0.3e1) * c * z - 0.4e1 * pow(delta2, 0.3e1) * delta1 * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z + 0.12e2 * c * c * delta2 * delta2 * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.12e2 * mu1 * delta2 * delta2 * mu2 - 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.24e2 * mu2 * delta2 * delta2 * c - 0.12e2 * c * delta2 * delta2 * mu1 + 0.12e2 * delta1 * delta2 * delta2 * c + 0.4e1 * pow(delta2, 0.4e1) * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * c * c * delta2 * mu1 * z - 0.12e2 * delta1 * delta2 * c * c * z - 0.12e2 * c * c * mu1 * delta2 + 0.12e2 * c * c * delta1 * delta2 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * delta1 * mu2 * c * c + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.12e2 * delta2 * pow(mu2, 0.3e1) + 0.8e1 * c * pow(mu2, 0.3e1) - 0.6e1 * c * c * mu2 * mu2 + pow(c, 0.4e1) + 0.12e2 * delta1 * delta2 * mu2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.24e2 * delta2 * mu2 * mu2 * c + 0.12e2 * c * c * delta2 * mu2 - 0.12e2 * delta2 * mu2 * mu2 * mu1 - 0.3e1 * pow(mu2, 0.4e1) + 0.24e2 * c * delta2 * mu1 * mu2 - 0.24e2 * delta1 * delta2 * c * mu2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.12e2 * c * pow(mu2, 0.3e1) * z + 0.12e2 * c * c * mu2 * mu2 * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.16e2 * delta2 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.12e2 * c * delta2 * delta2 * mu1 * z - 0.12e2 * mu1 * delta2 * delta2 * mu2 * z - 0.36e2 * mu2 * delta2 * delta2 * c * z + 0.12e2 * delta1 * delta2 * delta2 * mu2 * z - 0.12e2 * delta1 * delta2 * delta2 * c * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * delta1 * mu2 * mu2 * c * z + 0.36e2 * delta2 * mu2 * mu2 * c * z - 0.24e2 * c * c * delta2 * mu2 * z + 0.12e2 * delta2 * mu2 * mu2 * mu1 * z + 0.4e1 * pow(mu2, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 9:
			return (-0.6e1 * delta1 * delta1 * mu1 * mu1 - 0.6e1 * delta1 * delta1 * c * c + 0.4e1 * mu1 * pow(delta1, 0.3e1) - 0.4e1 * c * pow(delta1, 0.3e1) - pow(delta1, 0.4e1) + 0.12e2 * delta1 * delta1 * c * mu1 - log(z) * pow(mu1, 0.4e1) * z + log(z) * pow(c, 0.4e1) * z - pow(delta1, 0.4e1) * log(z) * z - 0.6e1 * log(z) * mu1 * mu1 * delta1 * delta1 * z + 0.2e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.2e1 * pow(delta1, 0.3e1) * log(z) * c * z - 0.2e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z - 0.12e2 * delta1 * mu1 * mu1 * c + 0.12e2 * delta1 * c * c * mu1 + 0.4e1 * pow(mu1, 0.3e1) * c + 0.4e1 * delta1 * pow(mu1, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * mu1 - 0.6e1 * c * c * mu1 * mu1 - 0.4e1 * delta1 * pow(c, 0.3e1) - pow(mu1, 0.4e1) - pow(c, 0.4e1) + 0.6e1 * log(z) * c * c * mu2 * mu1 * z - 0.6e1 * log(z) * c * mu2 * mu1 * mu1 * z + 0.6e1 * log(z) * c * c * delta2 * delta1 * z + 0.6e1 * log(z) * mu1 * mu1 * delta2 * delta1 * z - 0.6e1 * log(z) * mu1 * mu1 * c * delta1 * z - 0.6e1 * log(z) * c * c * mu1 * delta2 * z + 0.6e1 * log(z) * mu1 * mu1 * c * delta2 * z - 0.6e1 * log(z) * mu2 * c * c * delta1 * z - 0.6e1 * log(z) * mu2 * mu1 * mu1 * delta1 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.2e1 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.2e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.2e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * c * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z + 0.6e1 * log(z) * c * delta2 * delta1 * delta1 * z - 0.6e1 * log(z) * mu1 * delta2 * delta1 * delta1 * z + 0.6e1 * log(z) * c * mu1 * delta1 * delta1 * z - 0.6e1 * log(z) * mu2 * c * delta1 * delta1 * z + 0.6e1 * log(z) * mu2 * mu1 * delta1 * delta1 * z - 0.12e2 * log(z) * c * mu1 * delta2 * delta1 * z + 0.12e2 * log(z) * mu2 * c * mu1 * delta1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z / 0.12e2;
			
		case 10:
			return (-log(z) * pow(mu1, 0.4e1) * z + log(z) * pow(c, 0.4e1) * z - 0.12e2 * delta1 * mu1 * mu1 * c + 0.12e2 * delta1 * c * c * mu1 + 0.4e1 * pow(mu1, 0.3e1) * c + 0.4e1 * delta1 * pow(mu1, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * mu1 - 0.6e1 * c * c * mu1 * mu1 - 0.4e1 * delta1 * pow(c, 0.3e1) - pow(mu1, 0.4e1) - pow(c, 0.4e1) + 0.6e1 * log(z) * c * c * mu2 * mu1 * z - 0.6e1 * log(z) * c * mu2 * mu1 * mu1 * z + 0.6e1 * log(z) * c * c * delta2 * delta1 * z + 0.6e1 * log(z) * mu1 * mu1 * delta2 * delta1 * z - 0.6e1 * log(z) * mu1 * mu1 * c * delta1 * z - 0.6e1 * log(z) * c * c * mu1 * delta2 * z + 0.6e1 * log(z) * mu1 * mu1 * c * delta2 * z - 0.6e1 * log(z) * mu2 * c * c * delta1 * z - 0.6e1 * log(z) * mu2 * mu1 * mu1 * delta1 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.2e1 * log(z) * pow(c, 0.3e1) * delta1 * z + 0.2e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.2e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * c * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z - 0.12e2 * log(z) * c * mu1 * delta2 * delta1 * z + 0.12e2 * log(z) * mu2 * c * mu1 * delta1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z / 0.12e2;
	
		case 11:
			return (-0.3e1 * pow(delta2, 0.4e1) - 0.18e2 * mu2 * mu2 * delta2 * delta2 + 0.12e2 * mu2 * pow(delta2, 0.3e1) - 0.8e1 * pow(delta2, 0.3e1) * c - 0.24e2 * c * delta2 * mu1 * mu2 * z + 0.24e2 * delta1 * delta2 * c * mu2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.6e1 * c * c * delta2 * delta2 - 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.4e1 * pow(delta2, 0.3e1) * delta1 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.12e2 * delta1 * delta2 * mu2 * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z + 0.4e1 * pow(delta2, 0.3e1) * mu1 * z - 0.16e2 * mu2 * pow(delta2, 0.3e1) * z + 0.12e2 * pow(delta2, 0.3e1) * c * z - 0.4e1 * pow(delta2, 0.3e1) * delta1 * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z + 0.12e2 * c * c * delta2 * delta2 * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.12e2 * mu1 * delta2 * delta2 * mu2 - 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.24e2 * mu2 * delta2 * delta2 * c - 0.12e2 * c * delta2 * delta2 * mu1 + 0.12e2 * delta1 * delta2 * delta2 * c + 0.4e1 * pow(delta2, 0.4e1) * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * c * c * delta2 * mu1 * z - 0.12e2 * delta1 * delta2 * c * c * z - 0.12e2 * c * c * mu1 * delta2 + 0.12e2 * c * c * delta1 * delta2 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * delta1 * mu2 * c * c + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.12e2 * delta2 * pow(mu2, 0.3e1) + 0.8e1 * c * pow(mu2, 0.3e1) - 0.6e1 * c * c * mu2 * mu2 + pow(c, 0.4e1) + 0.12e2 * delta1 * delta2 * mu2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.24e2 * delta2 * mu2 * mu2 * c + 0.12e2 * c * c * delta2 * mu2 - 0.12e2 * delta2 * mu2 * mu2 * mu1 - 0.3e1 * pow(mu2, 0.4e1) + 0.24e2 * c * delta2 * mu1 * mu2 - 0.24e2 * delta1 * delta2 * c * mu2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.12e2 * c * pow(mu2, 0.3e1) * z + 0.12e2 * c * c * mu2 * mu2 * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.16e2 * delta2 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.12e2 * c * delta2 * delta2 * mu1 * z - 0.12e2 * mu1 * delta2 * delta2 * mu2 * z - 0.36e2 * mu2 * delta2 * delta2 * c * z + 0.12e2 * delta1 * delta2 * delta2 * mu2 * z - 0.12e2 * delta1 * delta2 * delta2 * c * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * delta1 * mu2 * mu2 * c * z + 0.36e2 * delta2 * mu2 * mu2 * c * z - 0.24e2 * c * c * delta2 * mu2 * z + 0.12e2 * delta2 * mu2 * mu2 * mu1 * z + 0.4e1 * pow(mu2, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 12:
			return (-0.24e2 * c * delta2 * mu1 * mu2 * z + 0.24e2 * delta1 * delta2 * c * mu2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * delta1 * delta2 * mu2 * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * c * c * delta2 * mu1 * z - 0.12e2 * delta1 * delta2 * c * c * z - 0.12e2 * c * c * mu1 * delta2 + 0.12e2 * c * c * delta1 * delta2 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * delta1 * mu2 * c * c + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.12e2 * delta2 * pow(mu2, 0.3e1) + 0.8e1 * c * pow(mu2, 0.3e1) - 0.6e1 * c * c * mu2 * mu2 + pow(c, 0.4e1) + 0.12e2 * delta1 * delta2 * mu2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.24e2 * delta2 * mu2 * mu2 * c + 0.12e2 * c * c * delta2 * mu2 - 0.12e2 * delta2 * mu2 * mu2 * mu1 - 0.3e1 * pow(mu2, 0.4e1) + 0.24e2 * c * delta2 * mu1 * mu2 - 0.24e2 * delta1 * delta2 * c * mu2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.12e2 * c * pow(mu2, 0.3e1) * z + 0.12e2 * c * c * mu2 * mu2 * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.16e2 * delta2 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * delta1 * mu2 * mu2 * c * z + 0.36e2 * delta2 * mu2 * mu2 * c * z - 0.24e2 * c * c * delta2 * mu2 * z + 0.12e2 * delta2 * mu2 * mu2 * mu1 * z + 0.4e1 * pow(mu2, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1)) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: EBRC_second_moment_piece_value(double z, int piecenum)
{	
	
	if(fabs(z) < DBL_EPSILON)	
	{
		z = 1.0e-5;
	}
	if(fabs(1-z) < DBL_EPSILON)	
	{
		z = 1 - 1.0e-5;
	}

	switch (piecenum)
	{
		// Expressions for z^2.pdf(z) and not pdf(z)
		case 1:
			return (-0.24e2 * delta1 * c * mu1 * mu2 * z + 0.48e2 * delta1 * c * mu1 * z * z * mu2 - 0.48e2 * c * delta2 * mu1 * z * z * mu2 + 0.24e2 * delta1 * delta2 * c * z * mu1 + 0.48e2 * delta1 * delta2 * c * z * z * mu2 - 0.48e2 * delta1 * delta2 * c * z * z * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * delta2 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.8e1 * delta1 * pow(z, 0.3e1) * pow(mu1, 0.3e1) + 0.4e1 * delta2 * pow(z, 0.3e1) * pow(mu1, 0.3e1) + 0.12e2 * c * c * delta1 * delta2 + 0.24e2 * c * c * mu2 * mu2 * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.8e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z - 0.8e1 * delta1 * pow(mu1, 0.3e1) * z - 0.4e1 * c * pow(mu1, 0.3e1) * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 + 0.16e2 * delta1 * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.4e1 * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * pow(mu1, 0.3e1) * delta2 * z * z - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.2e1 * pow(mu1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.12e2 * delta1 * mu1 * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * delta1 * c * mu1 * mu1 * z - 0.24e2 * delta1 * mu1 * mu1 * z * z * mu2 - 0.24e2 * c * mu1 * mu1 * z * z * mu2 - 0.12e2 * mu1 * mu1 * delta2 * z * c - 0.24e2 * delta1 * c * mu1 * mu1 * z * z + 0.24e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * c * c * delta2 * mu1 * z + 0.24e2 * c * delta2 * mu1 * mu1 * z * z - 0.24e2 * delta1 * mu2 * mu2 * c * z * z - 0.12e2 * delta1 * delta2 * c * c * z - 0.12e2 * delta1 * delta2 * mu1 * mu1 * z + 0.24e2 * delta1 * delta2 * mu1 * mu1 * z * z + 0.24e2 * delta2 * z * z * mu2 * mu2 * c + 0.24e2 * delta2 * z * z * mu2 * mu2 * mu1 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 - 0.48e2 * c * c * delta2 * z * mu2 - 0.24e2 * delta1 * delta2 * z * z * mu2 * mu2 + 0.12e2 * delta1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 - 0.12e2 * mu1 * mu1 * delta1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * c * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c - pow(c, 0.4e1) - 0.24e2 * delta1 * c * mu1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * delta2 * c * pow(z, 0.3e1) * mu2 + 0.24e2 * delta1 * delta2 * c * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.12e2 * delta2 * mu2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * mu2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.48e2 * delta2 * mu2 * mu2 * c + 0.36e2 * c * c * delta2 * mu2 + 0.2e1 * z * pow(c, 0.4e1) + 0.16e2 * c * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 + 0.24e2 * c * delta2 * mu1 * mu2 - 0.24e2 * delta1 * delta2 * c * mu2 - 0.5e1 * pow(mu2, 0.4e1) - 0.16e2 * z * c * pow(mu2, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.4e1 * z * pow(mu2, 0.4e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 - 0.12e2 * log(z) * c * c * mu1 * mu1 - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z * z + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.4e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.48e2 * c * mu2 * mu2 * z * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z - 0.48e2 * log(z) * c * c * mu1 * delta1 * z + 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z - 0.16e2 * pow(mu2, 0.3e1) * z * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 + 0.24e2 * log(z) * c * c * mu1 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;
			
		case 2:
			return -(-0.12e2 * delta1 * delta1 * mu2 * mu1 * z - 0.12e2 * delta1 * delta1 * c * mu1 * z + 0.4e1 * pow(delta1, 0.3e1) * mu2 * z + 0.12e2 * delta1 * delta1 * mu1 * mu1 * z - 0.24e2 * delta1 * delta1 * mu1 * mu1 * z * z + 0.12e2 * delta1 * delta1 * pow(z, 0.3e1) * mu1 * mu1 - 0.8e1 * pow(delta1, 0.3e1) * z * z * c + 0.4e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * mu2 + 0.16e2 * pow(delta1, 0.3e1) * z * z * mu1 - 0.8e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * mu1 - 0.8e1 * mu1 * pow(delta1, 0.3e1) * z + 0.4e1 * pow(delta1, 0.3e1) * c * z - 0.4e1 * pow(delta1, 0.3e1) * delta2 * z + 0.8e1 * pow(delta1, 0.3e1) * delta2 * z * z - 0.8e1 * pow(delta1, 0.3e1) * mu2 * z * z - 0.4e1 * pow(delta1, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * c - 0.4e1 * pow(delta1, 0.4e1) * z * z + 0.2e1 * pow(delta1, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(delta1, 0.4e1) * z + 0.24e2 * delta1 * delta1 * c * mu1 * z * z + 0.12e2 * delta1 * delta1 * mu2 * c * z - 0.24e2 * delta1 * delta1 * mu2 * c * z * z + 0.24e2 * delta1 * delta1 * mu2 * mu1 * z * z - 0.12e2 * delta1 * delta1 * delta2 * c * z + 0.24e2 * delta1 * delta1 * delta2 * c * z * z + 0.12e2 * delta1 * delta1 * delta2 * mu1 * z - 0.24e2 * delta1 * delta1 * delta2 * mu1 * z * z - 0.12e2 * delta1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * mu1 * delta1 * delta1 * delta2 * pow(z, 0.3e1) - 0.12e2 * delta1 * delta1 * c * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * delta1 * mu2 * c * pow(z, 0.3e1) - 0.12e2 * delta1 * delta1 * delta2 * c * pow(z, 0.3e1) - 0.24e2 * delta1 * c * mu1 * mu2 * z + 0.48e2 * delta1 * c * mu1 * z * z * mu2 - 0.48e2 * c * delta2 * mu1 * z * z * mu2 + 0.24e2 * delta1 * delta2 * c * z * mu1 + 0.48e2 * delta1 * delta2 * c * z * z * mu2 - 0.48e2 * delta1 * delta2 * c * z * z * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * delta2 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.8e1 * delta1 * pow(z, 0.3e1) * pow(mu1, 0.3e1) + 0.4e1 * delta2 * pow(z, 0.3e1) * pow(mu1, 0.3e1) + 0.12e2 * c * c * delta1 * delta2 + 0.24e2 * c * c * mu2 * mu2 * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.8e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z - 0.8e1 * delta1 * pow(mu1, 0.3e1) * z - 0.4e1 * c * pow(mu1, 0.3e1) * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 + 0.16e2 * delta1 * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.4e1 * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * pow(mu1, 0.3e1) * delta2 * z * z - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.2e1 * pow(mu1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.12e2 * delta1 * mu1 * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * delta1 * c * mu1 * mu1 * z - 0.24e2 * delta1 * mu1 * mu1 * z * z * mu2 - 0.24e2 * c * mu1 * mu1 * z * z * mu2 - 0.12e2 * mu1 * mu1 * delta2 * z * c - 0.24e2 * delta1 * c * mu1 * mu1 * z * z + 0.24e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * c * c * delta2 * mu1 * z + 0.24e2 * c * delta2 * mu1 * mu1 * z * z - 0.24e2 * delta1 * mu2 * mu2 * c * z * z - 0.12e2 * delta1 * delta2 * c * c * z - 0.12e2 * delta1 * delta2 * mu1 * mu1 * z + 0.24e2 * delta1 * delta2 * mu1 * mu1 * z * z + 0.24e2 * delta2 * z * z * mu2 * mu2 * c + 0.24e2 * delta2 * z * z * mu2 * mu2 * mu1 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 - 0.48e2 * c * c * delta2 * z * mu2 - 0.24e2 * delta1 * delta2 * z * z * mu2 * mu2 + 0.12e2 * delta1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 - 0.12e2 * mu1 * mu1 * delta1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * c * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c - pow(c, 0.4e1) - 0.24e2 * delta1 * c * mu1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * delta2 * c * pow(z, 0.3e1) * mu2 + 0.24e2 * delta1 * delta2 * c * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.12e2 * delta2 * mu2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * mu2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.48e2 * delta2 * mu2 * mu2 * c + 0.36e2 * c * c * delta2 * mu2 + 0.2e1 * z * pow(c, 0.4e1) + 0.16e2 * c * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 + 0.24e2 * c * delta2 * mu1 * mu2 - 0.24e2 * delta1 * delta2 * c * mu2 - 0.5e1 * pow(mu2, 0.4e1) - 0.16e2 * z * c * pow(mu2, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.4e1 * z * pow(mu2, 0.4e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 - 0.12e2 * log(z) * c * c * mu1 * mu1 - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z * z + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.4e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.48e2 * c * mu2 * mu2 * z * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z - 0.48e2 * log(z) * c * c * mu1 * delta1 * z + 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z - 0.16e2 * pow(mu2, 0.3e1) * z * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 + 0.24e2 * log(z) * c * c * mu1 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z - 0.2e1 * pow(delta1, 0.4e1) * log(z) - 0.48e2 * log(z) * c * mu1 * delta1 * delta1 * z + 0.24e2 * log(z) * c * mu1 * delta1 * delta1 * z * z + 0.4e1 * pow(delta1, 0.4e1) * log(z) * z - 0.2e1 * pow(delta1, 0.4e1) * log(z) * z * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * c + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 - 0.12e2 * log(z) * c * c * delta1 * delta1 + 0.24e2 * log(z) * c * mu1 * delta1 * delta1 + 0.16e2 * pow(delta1, 0.3e1) * log(z) * c * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z - 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z + 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z + 0.24e2 * log(z) * c * c * delta1 * delta1 * z - 0.12e2 * log(z) * c * c * delta1 * delta1 * z * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

		case 3:
			return (-0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * c + 0.12e2 * delta1 * delta2 * delta2 * c * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z * z - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z + 0.16e2 * c * pow(delta2, 0.3e1) * z + 0.12e2 * mu2 * delta2 * delta2 * mu1 + 0.12e2 * mu2 * c * delta2 * delta2 * pow(z, 0.3e1) - 0.24e2 * mu2 * mu1 * delta2 * delta2 * z * z - 0.24e2 * mu2 * c * delta2 * delta2 * z * z - 0.18e2 * c * c * delta2 * delta2 + 0.4e1 * pow(delta2, 0.3e1) * delta1 - 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.30e2 * mu2 * mu2 * delta2 * delta2 + 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.16e2 * pow(delta2, 0.3e1) * c + 0.48e2 * mu2 * c * delta2 * delta2 - 0.12e2 * mu2 * delta2 * delta2 * delta1 - 0.12e2 * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.48e2 * mu2 * c * delta2 * delta2 * z + 0.24e2 * c * c * delta2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.24e2 * mu2 * mu2 * z * delta2 * delta2 + 0.12e2 * delta1 * delta2 * delta2 * c - 0.12e2 * c * delta2 * delta2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z - 0.12e2 * delta1 * delta1 * mu2 * mu1 * z - 0.12e2 * delta1 * delta1 * c * mu1 * z + 0.4e1 * pow(delta1, 0.3e1) * mu2 * z + 0.12e2 * delta1 * delta1 * mu1 * mu1 * z - 0.24e2 * delta1 * delta1 * mu1 * mu1 * z * z + 0.12e2 * delta1 * delta1 * pow(z, 0.3e1) * mu1 * mu1 - 0.8e1 * pow(delta1, 0.3e1) * z * z * c + 0.4e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * mu2 + 0.16e2 * pow(delta1, 0.3e1) * z * z * mu1 - 0.8e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * mu1 - 0.8e1 * mu1 * pow(delta1, 0.3e1) * z + 0.4e1 * pow(delta1, 0.3e1) * c * z - 0.4e1 * pow(delta1, 0.3e1) * delta2 * z + 0.8e1 * pow(delta1, 0.3e1) * delta2 * z * z - 0.8e1 * pow(delta1, 0.3e1) * mu2 * z * z - 0.4e1 * pow(delta1, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * c - 0.4e1 * pow(delta1, 0.4e1) * z * z + 0.2e1 * pow(delta1, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(delta1, 0.4e1) * z - 0.12e2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.24e2 * delta1 * delta1 * c * mu1 * z * z + 0.12e2 * delta1 * delta1 * mu2 * c * z - 0.24e2 * delta1 * delta1 * mu2 * c * z * z + 0.24e2 * delta1 * delta1 * mu2 * mu1 * z * z - 0.12e2 * delta1 * delta1 * delta2 * c * z + 0.24e2 * delta1 * delta1 * delta2 * c * z * z + 0.12e2 * delta1 * delta1 * delta2 * mu1 * z - 0.24e2 * delta1 * delta1 * delta2 * mu1 * z * z - 0.12e2 * delta1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * mu1 * delta1 * delta1 * delta2 * pow(z, 0.3e1) - 0.12e2 * delta1 * delta1 * c * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * delta1 * mu2 * c * pow(z, 0.3e1) - 0.12e2 * delta1 * delta1 * delta2 * c * pow(z, 0.3e1) + 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.12e2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) * mu1 - 0.24e2 * delta1 * c * mu1 * mu2 * z + 0.48e2 * delta1 * c * mu1 * z * z * mu2 - 0.48e2 * c * delta2 * mu1 * z * z * mu2 + 0.24e2 * delta1 * delta2 * c * z * mu1 + 0.48e2 * delta1 * delta2 * c * z * z * mu2 - 0.48e2 * delta1 * delta2 * c * z * z * mu1 - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * delta2 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.8e1 * delta1 * pow(z, 0.3e1) * pow(mu1, 0.3e1) + 0.4e1 * delta2 * pow(z, 0.3e1) * pow(mu1, 0.3e1) + 0.12e2 * c * c * delta1 * delta2 + 0.24e2 * c * c * mu2 * mu2 * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.8e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z - 0.8e1 * delta1 * pow(mu1, 0.3e1) * z - 0.4e1 * c * pow(mu1, 0.3e1) * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 + 0.16e2 * delta1 * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.4e1 * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * pow(mu1, 0.3e1) * delta2 * z * z - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.2e1 * pow(mu1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.12e2 * delta1 * mu1 * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * delta1 * c * mu1 * mu1 * z - 0.24e2 * delta1 * mu1 * mu1 * z * z * mu2 - 0.24e2 * c * mu1 * mu1 * z * z * mu2 - 0.12e2 * mu1 * mu1 * delta2 * z * c - 0.24e2 * delta1 * c * mu1 * mu1 * z * z + 0.24e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * c * c * delta2 * mu1 * z + 0.24e2 * c * delta2 * mu1 * mu1 * z * z - 0.24e2 * delta1 * mu2 * mu2 * c * z * z - 0.12e2 * delta1 * delta2 * c * c * z - 0.12e2 * delta1 * delta2 * mu1 * mu1 * z + 0.24e2 * delta1 * delta2 * mu1 * mu1 * z * z + 0.24e2 * delta2 * z * z * mu2 * mu2 * c + 0.24e2 * delta2 * z * z * mu2 * mu2 * mu1 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 - 0.48e2 * c * c * delta2 * z * mu2 - 0.24e2 * delta1 * delta2 * z * z * mu2 * mu2 + 0.12e2 * delta1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 - 0.12e2 * mu1 * mu1 * delta1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * c * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c - pow(c, 0.4e1) - 0.24e2 * delta1 * c * mu1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * delta2 * c * pow(z, 0.3e1) * mu2 + 0.24e2 * delta1 * delta2 * c * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.12e2 * delta2 * mu2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * mu2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.48e2 * delta2 * mu2 * mu2 * c + 0.36e2 * c * c * delta2 * mu2 + 0.2e1 * z * pow(c, 0.4e1) + 0.16e2 * c * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 + 0.24e2 * c * delta2 * mu1 * mu2 - 0.24e2 * delta1 * delta2 * c * mu2 - 0.5e1 * pow(mu2, 0.4e1) + 0.8e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * delta2 * delta2 * c * z * z + 0.4e1 * pow(delta2, 0.4e1) * z + 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 - 0.16e2 * z * c * pow(mu2, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.4e1 * z * pow(mu2, 0.4e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 - 0.12e2 * log(z) * c * c * mu1 * mu1 - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z * z - 0.5e1 * pow(delta2, 0.4e1) + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.4e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.48e2 * c * mu2 * mu2 * z * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z - 0.48e2 * log(z) * c * c * mu1 * delta1 * z + 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z - 0.16e2 * pow(mu2, 0.3e1) * z * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 + 0.24e2 * log(z) * c * c * mu1 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z - 0.2e1 * pow(delta1, 0.4e1) * log(z) + 0.24e2 * c * delta2 * delta2 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z - 0.8e1 * pow(delta2, 0.3e1) * z * z * delta1 + 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 + 0.8e1 * pow(delta2, 0.3e1) * z * z * mu1 + 0.8e1 * pow(delta2, 0.3e1) * z * z * c + 0.24e2 * mu2 * delta1 * delta2 * delta2 * z * z - 0.48e2 * log(z) * c * mu1 * delta1 * delta1 * z + 0.24e2 * log(z) * c * mu1 * delta1 * delta1 * z * z + 0.4e1 * pow(delta1, 0.4e1) * log(z) * z - 0.2e1 * pow(delta1, 0.4e1) * log(z) * z * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * c + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 - 0.12e2 * log(z) * c * c * delta1 * delta1 + 0.24e2 * log(z) * c * mu1 * delta1 * delta1 + 0.16e2 * pow(delta1, 0.3e1) * log(z) * c * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z - 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z + 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z + 0.24e2 * log(z) * c * c * delta1 * delta1 * z - 0.12e2 * log(z) * c * c * delta1 * delta1 * z * z) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
			
		case 4:
			return -(-0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * c + 0.12e2 * delta1 * delta2 * delta2 * c * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z * z - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z + 0.16e2 * c * pow(delta2, 0.3e1) * z + 0.12e2 * mu2 * delta2 * delta2 * mu1 + 0.12e2 * mu2 * c * delta2 * delta2 * pow(z, 0.3e1) - 0.24e2 * mu2 * mu1 * delta2 * delta2 * z * z - 0.24e2 * mu2 * c * delta2 * delta2 * z * z - 0.18e2 * c * c * delta2 * delta2 + 0.4e1 * pow(delta2, 0.3e1) * delta1 - 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.30e2 * mu2 * mu2 * delta2 * delta2 + 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.16e2 * pow(delta2, 0.3e1) * c + 0.48e2 * mu2 * c * delta2 * delta2 - 0.12e2 * mu2 * delta2 * delta2 * delta1 - 0.12e2 * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.48e2 * mu2 * c * delta2 * delta2 * z + 0.24e2 * c * c * delta2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.24e2 * mu2 * mu2 * z * delta2 * delta2 + 0.12e2 * delta1 * delta2 * delta2 * c - 0.12e2 * c * delta2 * delta2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z - 0.12e2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.12e2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) * mu1 - 0.24e2 * delta1 * c * mu1 * mu2 * z + 0.48e2 * delta1 * c * mu1 * z * z * mu2 - 0.48e2 * c * delta2 * mu1 * z * z * mu2 + 0.24e2 * delta1 * delta2 * c * z * mu1 + 0.48e2 * delta1 * delta2 * c * z * z * mu2 - 0.48e2 * delta1 * delta2 * c * z * z * mu1 - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * delta2 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * delta1 * mu2 * c * c - 0.8e1 * delta1 * pow(z, 0.3e1) * pow(mu1, 0.3e1) + 0.4e1 * delta2 * pow(z, 0.3e1) * pow(mu1, 0.3e1) + 0.12e2 * c * c * delta1 * delta2 + 0.24e2 * c * c * mu2 * mu2 * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.8e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z - 0.8e1 * delta1 * pow(mu1, 0.3e1) * z - 0.4e1 * c * pow(mu1, 0.3e1) * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 + 0.16e2 * delta1 * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.4e1 * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * pow(mu1, 0.3e1) * delta2 * z * z - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.2e1 * pow(mu1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.12e2 * delta1 * mu1 * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z + 0.12e2 * delta1 * c * c * mu2 * z + 0.12e2 * delta1 * c * mu1 * mu1 * z - 0.24e2 * delta1 * mu1 * mu1 * z * z * mu2 - 0.24e2 * c * mu1 * mu1 * z * z * mu2 - 0.12e2 * mu1 * mu1 * delta2 * z * c - 0.24e2 * delta1 * c * mu1 * mu1 * z * z + 0.24e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * c * c * delta2 * mu1 * z + 0.24e2 * c * delta2 * mu1 * mu1 * z * z - 0.24e2 * delta1 * mu2 * mu2 * c * z * z - 0.12e2 * delta1 * delta2 * c * c * z - 0.12e2 * delta1 * delta2 * mu1 * mu1 * z + 0.24e2 * delta1 * delta2 * mu1 * mu1 * z * z + 0.24e2 * delta2 * z * z * mu2 * mu2 * c + 0.24e2 * delta2 * z * z * mu2 * mu2 * mu1 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 - 0.48e2 * c * c * delta2 * z * mu2 - 0.24e2 * delta1 * delta2 * z * z * mu2 * mu2 + 0.12e2 * delta1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 - 0.12e2 * mu1 * mu1 * delta1 * delta2 * pow(z, 0.3e1) + 0.12e2 * c * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * c * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c - pow(c, 0.4e1) - 0.24e2 * delta1 * c * mu1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * delta2 * c * pow(z, 0.3e1) * mu2 + 0.24e2 * delta1 * delta2 * c * pow(z, 0.3e1) * mu1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.12e2 * delta2 * mu2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * mu2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.48e2 * delta2 * mu2 * mu2 * c + 0.36e2 * c * c * delta2 * mu2 + 0.2e1 * z * pow(c, 0.4e1) + 0.16e2 * c * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 + 0.24e2 * c * delta2 * mu1 * mu2 - 0.24e2 * delta1 * delta2 * c * mu2 - 0.5e1 * pow(mu2, 0.4e1) + 0.8e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * delta2 * delta2 * c * z * z + 0.4e1 * pow(delta2, 0.4e1) * z + 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 - 0.16e2 * z * c * pow(mu2, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.4e1 * z * pow(mu2, 0.4e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 - 0.12e2 * log(z) * c * c * mu1 * mu1 - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z * z - 0.5e1 * pow(delta2, 0.4e1) + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.4e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.48e2 * c * mu2 * mu2 * z * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z - 0.48e2 * log(z) * c * c * mu1 * delta1 * z + 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(z) * mu1 * mu1 * c * delta1 * z - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z - 0.16e2 * pow(mu2, 0.3e1) * z * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 + 0.24e2 * log(z) * c * c * mu1 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(z) * mu1 * mu1 * c * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z + 0.24e2 * c * delta2 * delta2 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z - 0.8e1 * pow(delta2, 0.3e1) * z * z * delta1 + 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 + 0.8e1 * pow(delta2, 0.3e1) * z * z * mu1 + 0.8e1 * pow(delta2, 0.3e1) * z * z * c + 0.24e2 * mu2 * delta1 * delta2 * delta2 * z * z) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 5:
			return (-0.6e1 * c * mu2 * z + 0.6e1 * c * delta2 * z + 0.6e1 * mu1 * mu2 * z - 0.6e1 * mu1 * delta2 * z + 0.6e1 * mu1 * c * z - 0.2e1 * delta1 * mu2 * z + 0.2e1 * delta1 * delta2 * z - 0.2e1 * delta1 * c * z - 0.6e1 * mu1 * mu1 * z + 0.4e1 * mu1 * z * delta1 - delta1 * delta1 * z + 0.6e1 * log(z) * c * c - 0.12e2 * log(z) * c * mu1 + 0.6e1 * log(z) * mu1 * mu1 + 0.4e1 * delta1 * log(z) * c - 0.4e1 * delta1 * log(z) * mu1 + delta1 * delta1 * log(z)) * pow(delta2, -0.2e1) / 0.12e2;

		case 6:
			return (0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * c * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * z + 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z * z + 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.48e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z - 0.24e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.32e2 * delta2 * log(fabs(-0.1e1 + z)) * c * z + 0.6e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c + 0.18e2 * c * c + 0.12e2 * c * mu1 - 0.24e2 * c * c * z - 0.12e2 * delta1 * c + 0.48e2 * c * mu2 * z - 0.16e2 * c * delta2 * z + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) + 0.24e2 * mu1 * z * z * mu2 - 0.24e2 * delta1 * z * z * mu2 + 0.16e2 * delta2 * z * z * mu2 - 0.8e1 * delta2 * z * z * mu1 - 0.12e2 * mu2 * pow(z, 0.3e1) * mu1 + 0.5e1 * delta2 * delta2 - 0.8e1 * c * delta2 * z * z - 0.24e2 * mu1 * c * z * z + 0.8e1 * delta1 * delta2 * z * z + 0.24e2 * delta1 * c * z * z + 0.30e2 * mu2 * mu2 - 0.24e2 * mu2 * mu2 * z * z - 0.8e1 * delta2 * pow(z, 0.3e1) * mu2 + 0.4e1 * delta2 * pow(z, 0.3e1) * mu1 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 + 0.16e2 * delta2 * mu2 * z + 0.24e2 * mu2 * z * z * c + 0.12e2 * mu1 * pow(z, 0.3e1) * c + 0.4e1 * delta2 * pow(z, 0.3e1) * c - 0.12e2 * c * pow(z, 0.3e1) * mu2 - 0.12e2 * delta1 * pow(z, 0.3e1) * c - 0.24e2 * mu2 * mu2 * z - 0.20e2 * delta2 * mu2 + 0.2e1 * delta2 * delta2 * pow(z, 0.3e1) - 0.4e1 * delta2 * delta2 * z * z - 0.4e1 * delta2 * delta2 * z - 0.4e1 * delta1 * delta2 * pow(z, 0.3e1) - 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z + 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.24e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * c + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * z * z - 0.12e2 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 + 0.6e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * z - 0.48e2 * c * mu2 + 0.16e2 * c * delta2 - 0.12e2 * mu1 * mu2 + 0.4e1 * mu1 * delta2 + 0.12e2 * delta1 * mu2 - 0.4e1 * delta1 * delta2) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;
			
		case 7:
			return (0.4e1 * delta1 * pow(c, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.4e1) * z * z + 0.2e1 * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.24e2 * c * mu1 * z * z * mu2 * mu2 - 0.24e2 * c * delta1 * z * z * mu2 * mu2 + 0.24e2 * c * c * mu2 * mu2 * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * c * pow(mu2, 0.3e1) * z - 0.8e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.8e1 * pow(mu2, 0.3e1) * z * z * delta1 + 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.48e2 * c * mu1 * delta2 * z * z * mu2 + 0.48e2 * c * delta1 * delta2 * z * z * mu2 - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.4e1) * z * z - 0.48e2 * mu2 * c * c * delta2 * z + 0.48e2 * c * delta2 * mu2 * mu2 * z + 0.24e2 * c * delta2 * z * z * mu2 * mu2 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z + 0.24e2 * mu2 * mu2 * z * z * mu1 * delta2 - 0.24e2 * mu2 * mu2 * z * z * delta1 * delta2 + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.16e2 * pow(mu2, 0.3e1) * z * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * delta1 * mu2 * c * c + 0.12e2 * c * c * delta1 * delta2 - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.8e1 * pow(c, 0.3e1) * mu2 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 - 0.24e2 * c * c * mu1 * mu2 * z * z + 0.24e2 * delta1 * c * c * mu2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * c * c * delta2 * mu1 * z * z + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) - 0.24e2 * delta1 * delta2 * c * c * z * z - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) - 0.12e2 * delta1 * c * c * mu2 * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * delta2 * c * c * pow(z, 0.3e1) - pow(c, 0.4e1) + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * delta2 * c * pow(z, 0.3e1) * mu2 + 0.16e2 * pow(c, 0.3e1) * delta2 * z - 0.16e2 * pow(c, 0.3e1) * mu2 * z + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z - 0.8e1 * delta1 * pow(c, 0.3e1) * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - 0.12e2 * delta2 * mu2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * mu2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.48e2 * delta2 * mu2 * mu2 * c + 0.36e2 * c * c * delta2 * mu2 + 0.4e1 * z * pow(c, 0.4e1) + 0.16e2 * c * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 + 0.24e2 * c * delta2 * mu1 * mu2 - 0.24e2 * delta1 * delta2 * c * mu2 - 0.5e1 * pow(mu2, 0.4e1) + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z + 0.4e1 * z * pow(mu2, 0.4e1)) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

		case 8:
			return (0.4e1 * delta1 * pow(c, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.4e1) * z * z + 0.2e1 * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.24e2 * c * mu1 * z * z * mu2 * mu2 - 0.24e2 * c * delta1 * z * z * mu2 * mu2 + 0.24e2 * c * c * mu2 * mu2 * z + 0.24e2 * c * c * delta2 * delta2 * z + 0.16e2 * c * pow(delta2, 0.3e1) * z + 0.8e1 * c * pow(delta2, 0.3e1) * z * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * c * pow(mu2, 0.3e1) * z - 0.8e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.8e1 * pow(mu2, 0.3e1) * z * z * delta1 + 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * delta2 + 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 - 0.16e2 * mu2 * z * z * pow(delta2, 0.3e1) + 0.8e1 * mu2 * pow(z, 0.3e1) * pow(delta2, 0.3e1) - 0.48e2 * c * mu1 * delta2 * z * z * mu2 - 0.24e2 * c * delta1 * z * z * delta2 * delta2 + 0.24e2 * c * mu1 * z * z * delta2 * delta2 + 0.48e2 * c * delta1 * delta2 * z * z * mu2 - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * c - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * delta1 * delta2 * delta2 * c * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z + 0.24e2 * mu2 * mu2 * z * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 + 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.4e1 * pow(delta2, 0.4e1) * z * z - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) + 0.12e2 * mu2 * delta2 * delta2 * mu1 + 0.12e2 * mu2 * c * delta2 * delta2 * pow(z, 0.3e1) - 0.18e2 * c * c * delta2 * delta2 + 0.4e1 * pow(delta2, 0.3e1) * delta1 - 0.4e1 * pow(delta2, 0.3e1) * mu1 - 0.48e2 * mu2 * c * c * delta2 * z - 0.30e2 * mu2 * mu2 * delta2 * delta2 + 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.16e2 * pow(delta2, 0.3e1) * c - 0.48e2 * c * mu2 * delta2 * delta2 * z + 0.48e2 * mu2 * c * delta2 * delta2 - 0.12e2 * mu2 * delta2 * delta2 * delta1 - 0.24e2 * c * mu2 * delta2 * delta2 * z * z + 0.48e2 * c * delta2 * mu2 * mu2 * z + 0.24e2 * c * delta2 * z * z * mu2 * mu2 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z + 0.24e2 * mu2 * mu2 * z * z * mu1 * delta2 - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.24e2 * mu2 * mu2 * z * z * delta1 * delta2 + 0.24e2 * mu2 * z * z * delta1 * delta2 * delta2 - 0.24e2 * mu2 * z * z * mu1 * delta2 * delta2 + 0.12e2 * delta1 * delta2 * delta2 * c - 0.12e2 * c * delta2 * delta2 * mu1 + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 * z * z - 0.12e2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.4e1) * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.12e2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) * mu1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.16e2 * pow(mu2, 0.3e1) * z * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * delta1 * mu2 * c * c + 0.12e2 * c * c * delta1 * delta2 - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.8e1 * pow(c, 0.3e1) * mu2 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 - 0.24e2 * c * c * mu1 * mu2 * z * z + 0.24e2 * delta1 * c * c * mu2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * c * c * delta2 * mu1 * z * z + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) - 0.24e2 * delta1 * delta2 * c * c * z * z - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) - 0.12e2 * delta1 * c * c * mu2 * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * delta2 * c * c * pow(z, 0.3e1) - pow(c, 0.4e1) + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * delta2 * c * pow(z, 0.3e1) * mu2 + 0.16e2 * pow(c, 0.3e1) * delta2 * z - 0.16e2 * pow(c, 0.3e1) * mu2 * z + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z - 0.8e1 * delta1 * pow(c, 0.3e1) * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - 0.12e2 * delta2 * mu2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * mu2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.48e2 * delta2 * mu2 * mu2 * c + 0.36e2 * c * c * delta2 * mu2 + 0.4e1 * z * pow(c, 0.4e1) + 0.16e2 * c * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 + 0.24e2 * c * delta2 * mu1 * mu2 - 0.24e2 * delta1 * delta2 * c * mu2 - 0.5e1 * pow(mu2, 0.4e1) - 0.5e1 * pow(delta2, 0.4e1) - 0.8e1 * pow(delta2, 0.3e1) * z * z * delta1 + 0.8e1 * mu1 * pow(delta2, 0.3e1) * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z + 0.4e1 * z * pow(mu2, 0.4e1)) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 9:
			return (0.6e1 * delta1 * delta1 * mu2 * mu1 * z + 0.6e1 * delta1 * delta1 * c * mu1 * z - 0.2e1 * pow(delta1, 0.3e1) * mu2 * z - 0.6e1 * delta1 * delta1 * mu1 * mu1 * z + 0.4e1 * mu1 * pow(delta1, 0.3e1) * z - 0.2e1 * pow(delta1, 0.3e1) * c * z + 0.2e1 * pow(delta1, 0.3e1) * delta2 * z - pow(delta1, 0.4e1) * z - 0.6e1 * delta1 * delta1 * mu2 * c * z + 0.6e1 * delta1 * delta1 * delta2 * c * z - 0.6e1 * delta1 * delta1 * delta2 * mu1 * z + 0.12e2 * delta1 * c * mu1 * mu2 * z - 0.12e2 * delta1 * delta2 * c * z * mu1 + 0.2e1 * pow(mu1, 0.3e1) * mu2 * z + 0.4e1 * delta1 * pow(mu1, 0.3e1) * z + 0.2e1 * c * pow(mu1, 0.3e1) * z - 0.2e1 * pow(mu1, 0.3e1) * delta2 * z - pow(mu1, 0.4e1) * z - 0.6e1 * delta1 * mu1 * mu1 * mu2 * z + 0.6e1 * c * c * mu1 * mu2 * z - 0.6e1 * c * mu1 * mu1 * mu2 * z - 0.6e1 * delta1 * c * c * mu2 * z - 0.6e1 * delta1 * c * mu1 * mu1 * z + 0.6e1 * mu1 * mu1 * delta2 * z * c - 0.6e1 * c * c * delta2 * mu1 * z + 0.6e1 * delta1 * delta2 * c * c * z + 0.6e1 * delta1 * delta2 * mu1 * mu1 * z - 0.2e1 * pow(c, 0.3e1) * mu1 * z + 0.2e1 * delta1 * pow(c, 0.3e1) * z + 0.2e1 * pow(c, 0.3e1) * delta2 * z - 0.2e1 * pow(c, 0.3e1) * mu2 * z + z * pow(c, 0.4e1) - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.4e1 * pow(delta1, 0.3e1) * log(z) * c - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu1 - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 + 0.6e1 * log(z) * c * c * mu1 * mu1 + 0.6e1 * log(z) * mu1 * mu1 * delta1 * delta1 + 0.6e1 * log(z) * c * c * delta1 * delta1 + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 - 0.12e2 * log(z) * c * c * mu1 * delta1 - 0.12e2 * log(z) * c * mu1 * delta1 * delta1 + pow(delta1, 0.4e1) * log(z) + log(z) * pow(mu1, 0.4e1) + log(z) * pow(c, 0.4e1)) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.12e2;
			
		case 10:
			return (0.12e2 * delta1 * c * mu1 * mu2 * z - 0.12e2 * delta1 * delta2 * c * z * mu1 + 0.2e1 * pow(mu1, 0.3e1) * mu2 * z + 0.4e1 * delta1 * pow(mu1, 0.3e1) * z + 0.2e1 * c * pow(mu1, 0.3e1) * z - 0.2e1 * pow(mu1, 0.3e1) * delta2 * z - pow(mu1, 0.4e1) * z - 0.6e1 * delta1 * mu1 * mu1 * mu2 * z + 0.6e1 * c * c * mu1 * mu2 * z - 0.6e1 * c * mu1 * mu1 * mu2 * z - 0.6e1 * delta1 * c * c * mu2 * z - 0.6e1 * delta1 * c * mu1 * mu1 * z + 0.6e1 * mu1 * mu1 * delta2 * z * c - 0.6e1 * c * c * delta2 * mu1 * z + 0.6e1 * delta1 * delta2 * c * c * z + 0.6e1 * delta1 * delta2 * mu1 * mu1 * z - 0.2e1 * pow(c, 0.3e1) * mu1 * z + 0.2e1 * delta1 * pow(c, 0.3e1) * z + 0.2e1 * pow(c, 0.3e1) * delta2 * z - 0.2e1 * pow(c, 0.3e1) * mu2 * z + z * pow(c, 0.4e1) - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 + 0.6e1 * log(z) * c * c * mu1 * mu1 + 0.12e2 * log(z) * mu1 * mu1 * c * delta1 - 0.12e2 * log(z) * c * c * mu1 * delta1 + log(z) * pow(mu1, 0.4e1) + log(z) * pow(c, 0.4e1)) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.12e2;
	
		case 11:
			return (0.4e1 * delta1 * pow(c, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.4e1) * z * z + 0.2e1 * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.24e2 * c * mu1 * z * z * mu2 * mu2 - 0.24e2 * c * delta1 * z * z * mu2 * mu2 + 0.24e2 * c * c * mu2 * mu2 * z + 0.24e2 * c * c * delta2 * delta2 * z + 0.16e2 * c * pow(delta2, 0.3e1) * z + 0.8e1 * c * pow(delta2, 0.3e1) * z * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * c * pow(mu2, 0.3e1) * z - 0.8e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.8e1 * pow(mu2, 0.3e1) * z * z * delta1 + 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) * delta2 * delta2 + 0.24e2 * mu2 * mu2 * z * z * delta2 * delta2 - 0.16e2 * mu2 * z * z * pow(delta2, 0.3e1) + 0.8e1 * mu2 * pow(z, 0.3e1) * pow(delta2, 0.3e1) - 0.48e2 * c * mu1 * delta2 * z * z * mu2 - 0.24e2 * c * delta1 * z * z * delta2 * delta2 + 0.24e2 * c * mu1 * z * z * delta2 * delta2 + 0.48e2 * c * delta1 * delta2 * z * z * mu2 - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * c - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.12e2 * delta1 * delta2 * delta2 * c * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z + 0.24e2 * mu2 * mu2 * z * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 + 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.4e1 * pow(delta2, 0.4e1) * z * z - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) + 0.12e2 * mu2 * delta2 * delta2 * mu1 + 0.12e2 * mu2 * c * delta2 * delta2 * pow(z, 0.3e1) - 0.18e2 * c * c * delta2 * delta2 + 0.4e1 * pow(delta2, 0.3e1) * delta1 - 0.4e1 * pow(delta2, 0.3e1) * mu1 - 0.48e2 * mu2 * c * c * delta2 * z - 0.30e2 * mu2 * mu2 * delta2 * delta2 + 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.16e2 * pow(delta2, 0.3e1) * c - 0.48e2 * c * mu2 * delta2 * delta2 * z + 0.48e2 * mu2 * c * delta2 * delta2 - 0.12e2 * mu2 * delta2 * delta2 * delta1 - 0.24e2 * c * mu2 * delta2 * delta2 * z * z + 0.48e2 * c * delta2 * mu2 * mu2 * z + 0.24e2 * c * delta2 * z * z * mu2 * mu2 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z + 0.24e2 * mu2 * mu2 * z * z * mu1 * delta2 - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.24e2 * mu2 * mu2 * z * z * delta1 * delta2 + 0.24e2 * mu2 * z * z * delta1 * delta2 * delta2 - 0.24e2 * mu2 * z * z * mu1 * delta2 * delta2 + 0.12e2 * delta1 * delta2 * delta2 * c - 0.12e2 * c * delta2 * delta2 * mu1 + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 * z * z - 0.12e2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.4e1 * pow(delta2, 0.4e1) * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.12e2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) * mu1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.16e2 * pow(mu2, 0.3e1) * z * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * delta1 * mu2 * c * c + 0.12e2 * c * c * delta1 * delta2 - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.8e1 * pow(c, 0.3e1) * mu2 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 - 0.24e2 * c * c * mu1 * mu2 * z * z + 0.24e2 * delta1 * c * c * mu2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * c * c * delta2 * mu1 * z * z + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) - 0.24e2 * delta1 * delta2 * c * c * z * z - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) - 0.12e2 * delta1 * c * c * mu2 * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * delta2 * c * c * pow(z, 0.3e1) - pow(c, 0.4e1) + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * delta2 * c * pow(z, 0.3e1) * mu2 + 0.16e2 * pow(c, 0.3e1) * delta2 * z - 0.16e2 * pow(c, 0.3e1) * mu2 * z + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z - 0.8e1 * delta1 * pow(c, 0.3e1) * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - 0.12e2 * delta2 * mu2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * mu2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.48e2 * delta2 * mu2 * mu2 * c + 0.36e2 * c * c * delta2 * mu2 + 0.4e1 * z * pow(c, 0.4e1) + 0.16e2 * c * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 + 0.24e2 * c * delta2 * mu1 * mu2 - 0.24e2 * delta1 * delta2 * c * mu2 - 0.5e1 * pow(mu2, 0.4e1) - 0.5e1 * pow(delta2, 0.4e1) - 0.8e1 * pow(delta2, 0.3e1) * z * z * delta1 + 0.8e1 * mu1 * pow(delta2, 0.3e1) * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z + 0.4e1 * z * pow(mu2, 0.4e1)) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

		case 12:
			return (0.4e1 * delta1 * pow(c, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.4e1) * z * z + 0.2e1 * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.24e2 * c * mu1 * z * z * mu2 * mu2 - 0.24e2 * c * delta1 * z * z * mu2 * mu2 + 0.24e2 * c * c * mu2 * mu2 * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * c * pow(mu2, 0.3e1) * z - 0.8e1 * pow(mu2, 0.3e1) * z * z * mu1 + 0.8e1 * pow(mu2, 0.3e1) * z * z * delta1 + 0.8e1 * pow(mu2, 0.3e1) * pow(z, 0.3e1) * delta2 - 0.16e2 * pow(mu2, 0.3e1) * z * z * delta2 - 0.48e2 * c * mu1 * delta2 * z * z * mu2 + 0.48e2 * c * delta1 * delta2 * z * z * mu2 - 0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.4e1) * z * z - 0.48e2 * mu2 * c * c * delta2 * z + 0.48e2 * c * delta2 * mu2 * mu2 * z + 0.24e2 * c * delta2 * z * z * mu2 * mu2 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z + 0.24e2 * mu2 * mu2 * z * z * mu1 * delta2 - 0.24e2 * mu2 * mu2 * z * z * delta1 * delta2 + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.16e2 * pow(mu2, 0.3e1) * z * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * delta1 * mu2 * c * c + 0.12e2 * c * c * delta1 * delta2 - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * delta1 * pow(c, 0.3e1) - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.8e1 * pow(c, 0.3e1) * mu2 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 - 0.24e2 * c * c * mu1 * mu2 * z * z + 0.24e2 * delta1 * c * c * mu2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * c * c * delta2 * mu1 * z * z + 0.12e2 * delta1 * mu2 * mu2 * c * pow(z, 0.3e1) - 0.24e2 * delta1 * delta2 * c * c * z * z - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) - 0.12e2 * delta1 * c * c * mu2 * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 * pow(z, 0.3e1) + 0.12e2 * delta1 * delta2 * c * c * pow(z, 0.3e1) - pow(c, 0.4e1) + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * delta2 * c * pow(z, 0.3e1) * mu2 + 0.16e2 * pow(c, 0.3e1) * delta2 * z - 0.16e2 * pow(c, 0.3e1) * mu2 * z + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z - 0.8e1 * delta1 * pow(c, 0.3e1) * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - 0.12e2 * delta2 * mu2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * mu2 * mu2 - 0.12e2 * c * mu2 * mu2 * mu1 + 0.12e2 * delta1 * mu2 * mu2 * c - 0.48e2 * delta2 * mu2 * mu2 * c + 0.36e2 * c * c * delta2 * mu2 + 0.4e1 * z * pow(c, 0.4e1) + 0.16e2 * c * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) - 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.4e1 * mu1 * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 + 0.24e2 * c * delta2 * mu1 * mu2 - 0.24e2 * delta1 * delta2 * c * mu2 - 0.5e1 * pow(mu2, 0.4e1) + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * c * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z + 0.4e1 * z * pow(mu2, 0.4e1)) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

/*----------------------------------------------------------------------------------------------------------------------------------------*/


double triangular_kernel_polynomial :: DECS_integrate_piece_value(double z, int piecenum)
{
	if(fabs(z) < DBL_EPSILON)	
	{
		z = 1.0e-5;
	}
	if(fabs(1-z) < DBL_EPSILON)	
	{
		z = 1 - 1.0e-5;
	}

	
	switch (piecenum)
	{
		// Expressions for pdf(z)
		case 1:
			return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) - pow(delta1, 0.3e1) + 0.3e1 * c * c * mu1 * z + 0.3e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.6e1 * c * delta1 * delta1 * z - 0.3e1 * c * c * mu2 * z + 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.4e1 * mu1 * mu1 * delta2 * z - 0.3e1 * delta1 * delta1 * mu2 * z + 0.4e1 * delta1 * delta1 * delta2 * z + 0.9e1 * mu1 * mu1 * delta1 * z + 0.9e1 * mu1 * delta1 * delta1 * z + 0.6e1 * c * mu1 * delta1 - 0.12e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.6e1 * c * mu2 * delta1 * z - 0.8e1 * c * delta2 * mu1 * z - 0.8e1 * c * delta2 * delta1 * z - 0.6e1 * mu1 * mu2 * delta1 * z + 0.8e1 * mu1 * delta2 * delta1 * z + 0.3e1 * pow(mu1, 0.3e1) * z + 0.3e1 * pow(delta1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c + 0.6e1 * delta1 * delta1 * z * z * mu2 - 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * mu2 + 0.3e1 * delta1 * delta1 * z * z * c - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * delta1 * z * z * mu2 + 0.12e2 * mu1 * delta1 * z * z * mu2 - 0.6e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * delta1 * z * z * c - 0.8e1 * c * delta2 * z * z * mu2 + 0.8e1 * mu1 * delta2 * z * z * mu2 - 0.8e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * delta2 * z * z * c + 0.8e1 * delta1 * delta2 * z * z * mu2 - 0.8e1 * delta1 * delta2 * pow(z, 0.3e1) * mu2 + 0.8e1 * delta1 * delta2 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.3e1 * pow(delta1, 0.3e1) * z * z + pow(delta1, 0.3e1) * pow(z, 0.3e1) - 0.16e2 * mu1 * delta2 * z * z * delta1 + 0.8e1 * mu1 * pow(z, 0.3e1) * delta2 * delta1 - 0.9e1 * mu1 * mu1 * z * z * delta1 - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 - 0.8e1 * delta2 * z * z * mu1 * mu1 - 0.8e1 * delta2 * z * z * delta1 * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.4e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 - 0.3e1 * c * c * mu1 - 0.3e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * mu1 * delta1 - 0.3e1 * delta1 * delta1 * mu1) * (c - mu1 - delta1 - mu2 * z + mu1 * z + delta1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;
			
		case 2:
			return (pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.3e1 * c * c * mu1 * z + 0.4e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * c * c * mu2 * z + 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.4e1 * mu1 * mu1 * delta2 * z + 0.12e2 * mu1 * mu1 * delta1 * z + 0.8e1 * c * mu1 * delta1 - 0.16e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.8e1 * c * mu2 * delta1 * z - 0.8e1 * c * delta2 * mu1 * z - 0.12e2 * c * delta2 * delta1 * z - 0.8e1 * mu1 * mu2 * delta1 * z + 0.12e2 * mu1 * delta2 * delta1 * z + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * delta1 * z * z * mu2 + 0.16e2 * mu1 * delta1 * z * z * mu2 - 0.8e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * delta1 * z * z * c - 0.8e1 * c * delta2 * z * z * mu2 + 0.8e1 * mu1 * delta2 * z * z * mu2 - 0.8e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * delta2 * z * z * c + 0.12e2 * delta1 * delta2 * z * z * mu2 - 0.12e2 * delta1 * delta2 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * delta2 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.24e2 * mu1 * delta2 * z * z * delta1 + 0.12e2 * mu1 * pow(z, 0.3e1) * delta2 * delta1 - 0.12e2 * mu1 * mu1 * z * z * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.8e1 * delta2 * z * z * mu1 * mu1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 - 0.3e1 * c * c * mu1 - 0.4e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.4e1 * mu1 * mu1 * delta1) * (c - mu2 * z - mu1 + mu1 * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;
			
		case 3:
			return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.3e1 * c * c * mu1 * z + 0.4e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * c * c * mu2 * z + 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.3e1 * mu1 * mu1 * delta2 * z + 0.12e2 * mu1 * mu1 * delta1 * z + 0.8e1 * c * mu1 * delta1 - 0.16e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.8e1 * c * mu2 * delta1 * z - 0.6e1 * c * delta2 * mu1 * z - 0.8e1 * c * delta2 * delta1 * z - 0.8e1 * mu1 * mu2 * delta1 * z + 0.8e1 * mu1 * delta2 * delta1 * z + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c + pow(z, 0.3e1) * pow(delta2, 0.3e1) - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * delta1 * z * z * mu2 + 0.16e2 * mu1 * delta1 * z * z * mu2 - 0.8e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * delta1 * z * z * c - 0.6e1 * c * delta2 * z * z * mu2 + 0.6e1 * mu1 * delta2 * z * z * mu2 - 0.6e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * delta2 * z * z * c + 0.8e1 * delta1 * delta2 * z * z * mu2 - 0.8e1 * delta1 * delta2 * pow(z, 0.3e1) * mu2 + 0.8e1 * delta1 * delta2 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.16e2 * mu1 * delta2 * z * z * delta1 + 0.8e1 * mu1 * pow(z, 0.3e1) * delta2 * delta1 - 0.12e2 * mu1 * mu1 * z * z * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.6e1 * delta2 * z * z * mu1 * mu1 + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 - 0.4e1 * delta1 * z * z * delta2 * delta2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 + 0.4e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 - 0.3e1 * c * c * mu1 - 0.4e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.4e1 * mu1 * mu1 * delta1) * (c - mu1 - mu2 * z + mu1 * z + delta2 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;
			
		case 4:
			return (pow(c, 0.3e1) - pow(mu1, 0.3e1) - pow(delta1, 0.3e1) + 0.3e1 * pow(delta1, 0.3e1) * z + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * delta1 * delta1 + 0.9e1 * mu1 * delta1 * delta1 * z + 0.3e1 * c * c * mu1 * z + 0.3e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * c * c * mu2 * z + 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.3e1 * mu1 * mu1 * delta2 * z + 0.9e1 * mu1 * mu1 * delta1 * z + 0.6e1 * c * mu1 * delta1 - 0.12e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.6e1 * c * mu2 * delta1 * z - 0.6e1 * c * delta2 * mu1 * z - 0.6e1 * c * delta2 * delta1 * z - 0.6e1 * mu1 * mu2 * delta1 * z + 0.6e1 * mu1 * delta2 * delta1 * z + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c + pow(z, 0.3e1) * pow(delta2, 0.3e1) - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * delta1 * z * z * mu2 + 0.12e2 * mu1 * delta1 * z * z * mu2 - 0.6e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * delta1 * z * z * c - 0.6e1 * c * delta2 * z * z * mu2 + 0.6e1 * mu1 * delta2 * z * z * mu2 - 0.6e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * delta2 * z * z * c + 0.6e1 * delta1 * delta2 * z * z * mu2 - 0.6e1 * delta1 * delta2 * pow(z, 0.3e1) * mu2 + 0.6e1 * delta1 * delta2 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.12e2 * mu1 * delta2 * z * z * delta1 + 0.6e1 * mu1 * pow(z, 0.3e1) * delta2 * delta1 - 0.9e1 * mu1 * mu1 * z * z * delta1 + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.6e1 * delta2 * z * z * mu1 * mu1 + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 - 0.3e1 * delta1 * z * z * delta2 * delta2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 + 0.3e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 - 0.3e1 * pow(delta1, 0.3e1) * z * z + pow(delta1, 0.3e1) * pow(z, 0.3e1) + 0.6e1 * mu2 * z * z * delta1 * delta1 - 0.3e1 * mu2 * pow(z, 0.3e1) * delta1 * delta1 - 0.6e1 * delta2 * z * z * delta1 * delta1 + 0.3e1 * delta2 * pow(z, 0.3e1) * delta1 * delta1 + 0.3e1 * c * delta1 * delta1 * z * z - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 - 0.6e1 * c * delta1 * delta1 * z - 0.3e1 * delta1 * delta1 * mu2 * z + 0.3e1 * delta1 * delta1 * delta2 * z - 0.3e1 * c * c * mu1 - 0.3e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.3e1 * mu1 * mu1 * delta1) * (-mu2 * z + delta2 * z + c - mu1 + mu1 * z - delta1 + delta1 * z) * pow(z, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 5:
			return -(0.6e1 * c * c - 0.12e2 * c * mu1 - 0.4e1 * c * delta1 + 0.6e1 * mu1 * mu1 + 0.4e1 * mu1 * delta1 + delta1 * delta1 - 0.12e2 * c * mu2 * z + 0.12e2 * c * delta2 * z + 0.12e2 * mu1 * mu2 * z - 0.12e2 * mu1 * delta2 * z + 0.12e2 * mu1 * c * z + 0.4e1 * delta1 * mu2 * z - 0.4e1 * delta1 * delta2 * z + 0.4e1 * delta1 * c * z - 0.12e2 * mu1 * mu1 * z - 0.2e1 * delta1 * delta1 * z - 0.8e1 * mu1 * z * delta1 - 0.12e2 * mu1 * z * z * mu2 + 0.4e1 * mu1 * z * z * delta1 - 0.4e1 * delta1 * z * z * mu2 + 0.12e2 * delta2 * z * z * mu1 - 0.12e2 * delta2 * z * z * mu2 + 0.4e1 * delta2 * z * z * delta1 + 0.6e1 * mu1 * mu1 * z * z + delta1 * delta1 * z * z + 0.6e1 * mu2 * mu2 * z * z) * pow(z, -0.2e1) * pow(delta2, -0.2e1) / 0.24e2;

			 
		case 6:
			return (0.6e1 * c * c - 0.12e2 * c * mu1 - 0.12e2 * c * delta1 + 0.6e1 * mu1 * mu1 + 0.12e2 * mu1 * delta1 + 0.6e1 * delta1 * delta1 - 0.12e2 * c * mu2 * z + 0.4e1 * c * delta2 * z + 0.12e2 * mu1 * mu2 * z - 0.4e1 * mu1 * delta2 * z + 0.12e2 * mu1 * c * z + 0.12e2 * delta1 * mu2 * z - 0.4e1 * delta1 * delta2 * z + 0.12e2 * delta1 * c * z - 0.12e2 * mu1 * mu1 * z - 0.12e2 * delta1 * delta1 * z - 0.24e2 * mu1 * z * delta1 - 0.12e2 * mu1 * z * z * mu2 + 0.12e2 * mu1 * z * z * delta1 - 0.12e2 * delta1 * z * z * mu2 + 0.4e1 * delta2 * z * z * mu1 - 0.4e1 * delta2 * z * z * mu2 + 0.4e1 * delta2 * z * z * delta1 + 0.6e1 * mu1 * mu1 * z * z + 0.6e1 * delta1 * delta1 * z * z + 0.6e1 * mu2 * mu2 * z * z + delta2 * delta2 * z * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

		case 7:
			return (0.4e1 * delta1 * mu2 * z - mu2 * mu2 * z + 0.4e1 * delta2 * mu2 * z - 0.12e2 * delta1 * delta2 * z + 0.4e1 * mu1 * mu2 * z + 0.3e1 * c * c * z - 0.4e1 * mu1 * c * z - 0.4e1 * delta1 * c * z - 0.12e2 * mu1 * delta2 * z - 0.2e1 * c * mu2 * z + 0.8e1 * c * delta2 * z - 0.4e1 * c * c + 0.4e1 * c * mu1 + 0.4e1 * c * delta1 + 0.12e2 * mu1 * delta2 + 0.4e1 * c * mu2 - 0.12e2 * c * delta2 - 0.4e1 * mu1 * mu2 - 0.4e1 * delta1 * mu2 + 0.12e2 * delta1 * delta2) * pow(-mu2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
 
			
		case 8:
			return (-mu2 * mu2 * z + 0.2e1 * delta2 * mu2 * z - 0.2e1 * c * mu2 * z - 0.4e1 * mu1 * mu2 + 0.4e1 * mu1 * mu2 * z - 0.4e1 * delta1 * mu2 + 0.4e1 * delta1 * mu2 * z + 0.4e1 * c * mu2 - delta2 * delta2 * z + 0.2e1 * c * delta2 * z + 0.4e1 * mu1 * delta2 - 0.4e1 * mu1 * delta2 * z + 0.4e1 * delta1 * delta2 - 0.4e1 * delta1 * delta2 * z - 0.4e1 * c * delta2 + 0.3e1 * c * c * z + 0.4e1 * c * mu1 - 0.4e1 * mu1 * c * z + 0.4e1 * c * delta1 - 0.4e1 * delta1 * c * z - 0.4e1 * c * c) * pow(-mu2 + delta2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 9:
			return (c - mu1) * (pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.8e1 * c * mu1 * delta1 - 0.8e1 * c * delta2 * z * mu1 - 0.12e2 * c * delta2 * z * delta1 - 0.12e2 * mu1 * delta1 * mu2 * z + 0.12e2 * mu1 * delta1 * delta2 * z - 0.4e1 * mu1 * delta1 * c * z + 0.4e1 * c * c * delta2 * z + 0.8e1 * c * mu2 * z * mu1 + 0.12e2 * c * mu2 * z * delta1 - z * z * c * c * mu1 - z * z * c * mu1 * mu1 - 0.4e1 * z * z * c * c * delta1 + 0.8e1 * z * z * c * c * delta2 - 0.4e1 * z * z * mu1 * mu1 * delta1 - 0.4e1 * z * z * mu1 * mu1 * delta2 + 0.6e1 * z * z * mu2 * mu2 * c - 0.6e1 * z * z * mu2 * mu2 * mu1 - 0.12e2 * z * z * mu2 * mu2 * delta1 - 0.8e1 * z * z * c * c * mu2 + 0.4e1 * z * z * mu1 * mu1 * mu2 + 0.8e1 * mu1 * mu1 * z * delta1 + 0.2e1 * pow(c, 0.3e1) * z - 0.4e1 * mu1 * mu1 * mu2 * z + 0.4e1 * mu1 * mu1 * delta2 * z - 0.2e1 * mu1 * mu1 * c * z - 0.2e1 * c * c * z * mu1 - 0.4e1 * c * c * z * delta1 - 0.4e1 * c * c * mu2 * z + 0.3e1 * z * z * pow(c, 0.3e1) - z * z * pow(mu1, 0.3e1) + 0.2e1 * pow(mu1, 0.3e1) * z - 0.4e1 * z * z * c * mu1 * delta1 - 0.4e1 * z * z * c * delta2 * mu1 - 0.12e2 * z * z * c * delta2 * delta1 - 0.12e2 * z * z * mu1 * delta2 * delta1 - 0.12e2 * z * z * delta2 * mu2 * c + 0.12e2 * z * z * delta2 * mu2 * mu1 + 0.24e2 * z * z * delta2 * mu2 * delta1 + 0.12e2 * z * z * mu1 * delta1 * mu2 + 0.4e1 * z * z * c * mu2 * mu1 + 0.12e2 * z * z * c * mu2 * delta1 - 0.3e1 * c * c * mu1 - 0.4e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.4e1 * mu1 * mu1 * delta1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

		case 10:
			return pow(c - mu1 - delta1, 0.2e1) * (c * c - 0.2e1 * c * mu1 - 0.2e1 * c * delta1 + 0.2e1 * c * c * z + mu1 * mu1 + 0.2e1 * mu1 * delta1 + delta1 * delta1 - 0.4e1 * c * mu2 * z + 0.4e1 * c * delta2 * z + 0.4e1 * mu1 * mu2 * z - 0.4e1 * mu1 * delta2 * z + 0.4e1 * delta1 * mu2 * z - 0.4e1 * delta1 * delta2 * z - 0.2e1 * mu1 * mu1 * z - 0.2e1 * delta1 * delta1 * z - 0.4e1 * mu1 * z * delta1 - 0.4e1 * mu1 * z * z * mu2 + 0.2e1 * mu1 * z * z * delta1 - 0.4e1 * delta1 * z * z * mu2 + 0.4e1 * delta2 * z * z * mu1 - 0.12e2 * delta2 * z * z * mu2 + 0.4e1 * delta2 * z * z * delta1 + mu1 * mu1 * z * z + delta1 * delta1 * z * z + 0.3e1 * c * c * z * z + 0.8e1 * c * delta2 * z * z + 0.2e1 * mu1 * c * z * z + 0.2e1 * delta1 * c * z * z + 0.6e1 * mu2 * mu2 * z * z - 0.8e1 * mu2 * z * z * c + 0.6e1 * delta2 * delta2 * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;
	
		case 11:
			return (-0.24e2 * c * delta2 * mu2 * mu1 * z + 0.24e2 * c * delta2 * mu2 * mu1 * z * z - 0.24e2 * c * delta2 * mu2 * delta1 * z + 0.24e2 * c * delta2 * mu2 * delta1 * z * z - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z - 0.12e2 * mu1 * delta2 * z * z * mu2 * mu2 + 0.12e2 * mu1 * delta2 * delta2 * z * z * mu2 - 0.12e2 * mu1 * mu2 * z * delta2 * delta2 + 0.12e2 * mu1 * mu2 * mu2 * z * delta2 - 0.12e2 * mu2 * mu2 * z * z * delta2 * delta1 - 0.12e2 * mu2 * z * delta2 * delta2 * delta1 + 0.12e2 * mu2 * mu2 * z * delta2 * delta1 + 0.12e2 * c * mu2 * z * delta2 * delta2 - 0.12e2 * c * mu2 * mu2 * z * delta2 + 0.4e1 * pow(delta2, 0.3e1) * z * delta1 - 0.4e1 * pow(delta2, 0.3e1) * z * z * delta1 + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * c * c * delta1 * delta2 * z - 0.12e2 * c * c * delta1 * delta2 * z * z + 0.24e2 * delta2 * mu2 * c * c * z - 0.12e2 * delta2 * mu2 * c * c * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * c * mu2 * mu2 * delta1 * z - 0.12e2 * c * mu2 * mu2 * delta1 * z * z - 0.12e2 * c * c * mu2 * mu1 * z + 0.12e2 * c * c * mu2 * mu1 * z * z - 0.12e2 * c * c * mu2 * delta1 * z + 0.12e2 * c * c * mu2 * delta1 * z * z - 0.12e2 * c * delta2 * delta2 * z * mu1 - 0.12e2 * c * delta2 * delta2 * z * delta1 + 0.24e2 * mu1 * delta1 * delta2 * delta2 * z - 0.12e2 * z * z * mu1 * delta2 * delta2 * delta1 + 0.12e2 * mu2 * z * z * delta2 * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * mu2 * mu2 * c * c * z + 0.6e1 * mu2 * mu2 * c * c * z * z + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.12e2 * c * delta2 * delta2 * mu1 + 0.12e2 * c * delta2 * delta2 * delta1 - 0.12e2 * mu1 * delta2 * delta2 * delta1 - 0.6e1 * z * z * mu1 * mu1 * delta2 * delta2 + 0.12e2 * mu1 * mu1 * delta2 * delta2 * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * c * pow(delta2, 0.3e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z + 0.4e1 * mu2 * z * z * pow(delta2, 0.3e1) + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 - 0.6e1 * mu2 * mu2 * z * z * delta2 * delta2 + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta2 - 0.6e1 * c * c * delta2 * delta2 - 0.6e1 * mu1 * mu1 * delta2 * delta2 - pow(mu2, 0.4e1) * z * z - pow(delta2, 0.4e1) * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 12:
			return (-0.12e2 * z * delta2 * delta2 * delta1 * delta1 - 0.24e2 * c * delta2 * mu2 * mu1 * z + 0.24e2 * c * delta2 * mu2 * mu1 * z * z - 0.24e2 * c * delta2 * mu2 * delta1 * z + 0.24e2 * c * delta2 * mu2 * delta1 * z * z + 0.6e1 * delta2 * delta2 * delta1 * delta1 - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z - 0.12e2 * mu1 * delta2 * z * z * mu2 * mu2 + 0.12e2 * mu1 * mu2 * mu2 * z * delta2 - 0.12e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.12e2 * mu2 * mu2 * z * delta2 * delta1 - 0.12e2 * c * mu2 * mu2 * z * delta2 + 0.6e1 * delta1 * delta1 * delta2 * delta2 * z * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * c * c * delta1 * delta2 * z - 0.12e2 * c * c * delta1 * delta2 * z * z + 0.24e2 * delta2 * mu2 * c * c * z - 0.12e2 * delta2 * mu2 * c * c * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * c * mu2 * mu2 * delta1 * z - 0.12e2 * c * mu2 * mu2 * delta1 * z * z - 0.12e2 * c * c * mu2 * mu1 * z + 0.12e2 * c * c * mu2 * mu1 * z * z - 0.12e2 * c * c * mu2 * delta1 * z + 0.12e2 * c * c * mu2 * delta1 * z * z + 0.24e2 * c * delta2 * delta2 * z * mu1 + 0.24e2 * c * delta2 * delta2 * z * delta1 - 0.24e2 * mu1 * delta1 * delta2 * delta2 * z - 0.12e2 * z * z * c * delta2 * delta2 * mu1 - 0.12e2 * z * z * c * delta2 * delta2 * delta1 + 0.12e2 * z * z * mu1 * delta2 * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * mu2 * mu2 * c * c * z + 0.6e1 * mu2 * mu2 * c * c * z * z + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 + 0.12e2 * mu1 * delta2 * delta2 * delta1 - 0.12e2 * c * c * delta2 * delta2 * z + 0.6e1 * z * z * c * c * delta2 * delta2 + 0.6e1 * z * z * mu1 * mu1 * delta2 * delta2 - 0.12e2 * mu1 * mu1 * delta2 * delta2 * z + 0.4e1 * c * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta2 + 0.6e1 * c * c * delta2 * delta2 + 0.6e1 * mu1 * mu1 * delta2 * delta2 - pow(mu2, 0.4e1) * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: DECS_expected_piece_value(double z, int piecenum)
{
	
	if(fabs(z) < DBL_EPSILON)	
	{
		z = 1.0e-5;
	}
	if(fabs(1-z) < DBL_EPSILON)	
	{
		z = 1 - 1.0e-5;
	}

	
	switch (piecenum)
	{
		// Expressions for z.pdf(z) and not pdf(z)
		case 1:
			return -(0.8e1 * mu1 * pow(delta1, 0.3e1) * z * z - 0.16e2 * mu1 * pow(delta1, 0.3e1) * z - 0.24e2 * c * mu1 * delta1 * delta1 - 0.24e2 * c * mu1 * mu1 * delta1 + 0.24e2 * c * c * mu1 * delta1 - 0.24e2 * mu1 * mu1 * z * delta1 * delta1 - 0.16e2 * pow(mu1, 0.3e1) * z * delta1 + 0.12e2 * z * z * mu1 * mu1 * delta1 * delta1 + 0.8e1 * z * z * pow(mu1, 0.3e1) * delta1 - 0.8e1 * pow(mu1, 0.3e1) * c * z * z + 0.16e2 * pow(mu1, 0.3e1) * c * z - 0.24e2 * mu1 * mu1 * c * c * z - 0.8e1 * pow(delta1, 0.3e1) * c * z * z + 0.16e2 * pow(delta1, 0.3e1) * c * z - 0.24e2 * delta1 * delta1 * c * c * z - 0.24e2 * mu1 * mu1 * c * z * z * delta1 - 0.6e1 * c * c * mu2 * mu2 * z + 0.12e2 * z * z * mu2 * mu2 * mu1 * c + 0.24e2 * c * delta2 * z * mu2 * mu1 + 0.12e2 * c * c * mu2 * mu2 * z * z + 0.12e2 * delta1 * delta1 * c * c * z * z + 0.12e2 * mu1 * mu1 * c * c * z * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.12e2 * c * pow(mu2, 0.3e1) * z * z + 0.12e2 * pow(c, 0.3e1) * delta1 * z + 0.12e2 * pow(c, 0.3e1) * mu1 * z - 0.24e2 * c * delta2 * z * z * mu2 * mu1 + 0.24e2 * c * delta2 * z * mu2 * delta1 - 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z - 0.24e2 * c * delta2 * z * z * mu2 * delta1 + 0.12e2 * z * z * mu2 * mu2 * delta1 * c + 0.48e2 * c * mu1 * delta1 * delta1 * z + 0.4e1 * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(z) * c * pow(mu1, 0.3e1) * z * z - 0.4e1 * log(z) * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * pow(z, 0.3e1) + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(z) * c * pow(mu1, 0.3e1) * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z + 0.12e2 * c * c * delta1 * delta1 + 0.2e1 * z * z * pow(mu1, 0.4e1) + 0.2e1 * pow(delta1, 0.4e1) * z * z - 0.4e1 * pow(delta1, 0.4e1) * z + 0.8e1 * mu1 * pow(delta1, 0.3e1) + 0.12e2 * mu1 * mu1 * delta1 * delta1 - 0.8e1 * c * pow(delta1, 0.3e1) - 0.4e1 * pow(mu1, 0.4e1) * z - 0.24e2 * delta1 * delta1 * c * z * z * mu1 + 0.12e2 * c * c * mu1 * mu1 - 0.8e1 * pow(c, 0.3e1) * mu1 - 0.8e1 * pow(c, 0.3e1) * delta1 + 0.8e1 * pow(mu1, 0.3e1) * delta1 - 0.8e1 * c * pow(mu1, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * mu2 * mu2 * mu1 * delta2 * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.48e2 * c * c * mu1 * delta1 * z + 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * delta2 * z * mu2 + 0.12e2 * delta2 * z * z * mu2 * mu2 * delta1 + 0.12e2 * delta2 * z * z * mu2 * mu2 * mu1 + 0.36e2 * delta2 * z * z * mu2 * mu2 * c - 0.12e2 * c * c * delta2 * mu1 * z - 0.12e2 * c * c * delta2 * delta1 * z + 0.12e2 * c * c * delta2 * mu1 * z * z + 0.12e2 * c * c * delta2 * delta1 * z * z + 0.2e1 * pow(mu1, 0.4e1) + 0.2e1 * pow(delta1, 0.4e1) - 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.24e2 * c * c * delta2 * z * z * mu2 + 0.24e2 * log(z) * mu1 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.24e2 * log(z) * c * mu1 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * pow(z, 0.3e1) + 0.48e2 * log(z) * c * mu1 * delta1 * delta2 * z * z - 0.24e2 * log(z) * c * mu1 * delta1 * delta2 * pow(z, 0.3e1) - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * z - 0.12e2 * c * c * mu1 * mu2 * z * z + 0.8e1 * c * pow(mu2, 0.3e1) * z - 0.24e2 * mu2 * mu2 * c * delta2 * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 * z - 0.12e2 * c * c * delta1 * mu2 * z * z + 0.24e2 * c * c * mu1 * delta1 * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.2e1 * pow(c, 0.4e1) * z * z + 0.12e2 * pow(mu2, 0.3e1) * delta2 * z - 0.3e1 * pow(mu2, 0.4e1) * z - 0.48e2 * log(z) * mu1 * mu2 * c * delta1 * z * z + 0.24e2 * log(z) * mu1 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.12e2 * mu2 * mu2 * delta1 * delta2 * z + 0.24e2 * log(z) * c * delta1 * delta1 * delta2 * z * z - 0.12e2 * log(z) * c * delta1 * delta1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * delta1 * delta1 * delta2 * z * z + 0.12e2 * log(z) * mu1 * delta1 * delta1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 * z * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * mu1 * mu2 * delta1 * z * z - 0.12e2 * log(z) * mu1 * mu1 * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * delta1 * z * z - 0.12e2 * log(z) * c * c * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * delta1 * delta1 * z * z - 0.12e2 * log(z) * c * mu1 * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z * z - 0.12e2 * log(z) * c * delta1 * delta1 * delta2 * z + 0.12e2 * log(z) * mu1 * delta1 * delta1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * z - 0.12e2 * log(z) * mu1 * mu1 * mu2 * delta1 * z - 0.12e2 * log(z) * c * c * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * z - 0.12e2 * log(z) * c * mu1 * delta1 * delta1 * z - 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z + 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z + 0.12e2 * log(z) * mu1 * mu1 * mu2 * c * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * c * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * mu2 * c * z * z + 0.12e2 * log(z) * mu1 * mu1 * mu2 * c * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta1 * delta2 * z * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * pow(z, 0.3e1) + 0.2e1 * pow(c, 0.4e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.3e1 * pow(c, 0.4e1) * z + 0.2e1 * pow(delta1, 0.4e1) * log(z) * z - 0.4e1 * pow(delta1, 0.4e1) * log(z) * z * z + 0.2e1 * pow(delta1, 0.4e1) * log(z) * pow(z, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.48e2 * mu1 * mu1 * c * z * delta1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;
			
		case 2:
			return (-0.24e2 * c * mu1 * mu1 * delta1 + 0.24e2 * c * c * mu1 * delta1 - 0.16e2 * pow(mu1, 0.3e1) * z * delta1 + 0.8e1 * z * z * pow(mu1, 0.3e1) * delta1 - 0.8e1 * pow(mu1, 0.3e1) * c * z * z + 0.16e2 * pow(mu1, 0.3e1) * c * z - 0.24e2 * mu1 * mu1 * c * c * z - 0.24e2 * mu1 * mu1 * c * z * z * delta1 - 0.6e1 * c * c * mu2 * mu2 * z + 0.12e2 * z * z * mu2 * mu2 * mu1 * c + 0.24e2 * c * delta2 * z * mu2 * mu1 + 0.12e2 * c * c * mu2 * mu2 * z * z + 0.12e2 * mu1 * mu1 * c * c * z * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.12e2 * c * pow(mu2, 0.3e1) * z * z + 0.12e2 * pow(c, 0.3e1) * delta1 * z + 0.12e2 * pow(c, 0.3e1) * mu1 * z - 0.24e2 * c * delta2 * z * z * mu2 * mu1 + 0.24e2 * c * delta2 * z * mu2 * delta1 - 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z - 0.24e2 * c * delta2 * z * z * mu2 * delta1 + 0.12e2 * z * z * mu2 * mu2 * delta1 * c + 0.4e1 * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(z) * c * pow(mu1, 0.3e1) * z * z - 0.4e1 * log(z) * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(z) * c * pow(mu1, 0.3e1) * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z + 0.2e1 * z * z * pow(mu1, 0.4e1) - 0.4e1 * pow(mu1, 0.4e1) * z + 0.12e2 * c * c * mu1 * mu1 - 0.8e1 * pow(c, 0.3e1) * mu1 - 0.8e1 * pow(c, 0.3e1) * delta1 + 0.8e1 * pow(mu1, 0.3e1) * delta1 - 0.8e1 * c * pow(mu1, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * mu2 * mu2 * mu1 * delta2 * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.48e2 * c * c * mu1 * delta1 * z + 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * delta2 * z * mu2 + 0.12e2 * delta2 * z * z * mu2 * mu2 * delta1 + 0.12e2 * delta2 * z * z * mu2 * mu2 * mu1 + 0.36e2 * delta2 * z * z * mu2 * mu2 * c - 0.12e2 * c * c * delta2 * mu1 * z - 0.12e2 * c * c * delta2 * delta1 * z + 0.12e2 * c * c * delta2 * mu1 * z * z + 0.12e2 * c * c * delta2 * delta1 * z * z + 0.2e1 * pow(mu1, 0.4e1) - 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.24e2 * c * c * delta2 * z * z * mu2 + 0.24e2 * log(z) * mu1 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.24e2 * log(z) * c * mu1 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * pow(z, 0.3e1) + 0.48e2 * log(z) * c * mu1 * delta1 * delta2 * z * z - 0.24e2 * log(z) * c * mu1 * delta1 * delta2 * pow(z, 0.3e1) - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * z - 0.12e2 * c * c * mu1 * mu2 * z * z + 0.8e1 * c * pow(mu2, 0.3e1) * z - 0.24e2 * mu2 * mu2 * c * delta2 * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 * z - 0.12e2 * c * c * delta1 * mu2 * z * z + 0.24e2 * c * c * mu1 * delta1 * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.2e1 * pow(c, 0.4e1) * z * z + 0.12e2 * pow(mu2, 0.3e1) * delta2 * z - 0.3e1 * pow(mu2, 0.4e1) * z - 0.48e2 * log(z) * mu1 * mu2 * c * delta1 * z * z + 0.24e2 * log(z) * mu1 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.12e2 * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 * z * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * mu1 * mu2 * delta1 * z * z - 0.12e2 * log(z) * mu1 * mu1 * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * delta1 * z * z - 0.12e2 * log(z) * c * c * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * z - 0.12e2 * log(z) * mu1 * mu1 * mu2 * delta1 * z - 0.12e2 * log(z) * c * c * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z + 0.12e2 * log(z) * mu1 * mu1 * mu2 * c * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * mu2 * c * z * z + 0.12e2 * log(z) * mu1 * mu1 * mu2 * c * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta1 * delta2 * z * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * pow(z, 0.3e1) + 0.2e1 * pow(c, 0.4e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.3e1 * pow(c, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.48e2 * mu1 * mu1 * c * z * delta1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;


		case 3:
			return -(-0.24e2 * c * mu1 * mu1 * delta1 + 0.24e2 * c * c * mu1 * delta1 - 0.16e2 * pow(mu1, 0.3e1) * z * delta1 + 0.8e1 * z * z * pow(mu1, 0.3e1) * delta1 - 0.8e1 * pow(mu1, 0.3e1) * c * z * z + 0.16e2 * pow(mu1, 0.3e1) * c * z - 0.24e2 * mu1 * mu1 * c * c * z - 0.24e2 * mu1 * mu1 * c * z * z * delta1 - 0.6e1 * c * c * mu2 * mu2 * z + 0.12e2 * z * z * mu2 * mu2 * mu1 * c + 0.24e2 * c * delta2 * z * mu2 * mu1 + 0.12e2 * c * c * mu2 * mu2 * z * z + 0.12e2 * mu1 * mu1 * c * c * z * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.12e2 * c * pow(mu2, 0.3e1) * z * z + 0.12e2 * pow(c, 0.3e1) * delta1 * z + 0.12e2 * pow(c, 0.3e1) * mu1 * z - 0.24e2 * c * delta2 * z * z * mu2 * mu1 + 0.24e2 * c * delta2 * z * mu2 * delta1 - 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z - 0.24e2 * c * delta2 * z * z * mu2 * delta1 + 0.12e2 * z * z * mu2 * mu2 * delta1 * c + 0.4e1 * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(z) * c * pow(mu1, 0.3e1) * z * z - 0.4e1 * log(z) * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(z) * c * pow(mu1, 0.3e1) * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z + 0.2e1 * z * z * pow(mu1, 0.4e1) - 0.4e1 * pow(mu1, 0.4e1) * z + 0.12e2 * c * c * mu1 * mu1 - 0.8e1 * pow(c, 0.3e1) * mu1 - 0.8e1 * pow(c, 0.3e1) * delta1 + 0.8e1 * pow(mu1, 0.3e1) * delta1 - 0.8e1 * c * pow(mu1, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * mu2 * mu2 * mu1 * delta2 * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.48e2 * c * c * mu1 * delta1 * z + 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * delta2 * z * mu2 + 0.12e2 * delta2 * z * z * mu2 * mu2 * delta1 + 0.12e2 * delta2 * z * z * mu2 * mu2 * mu1 + 0.36e2 * delta2 * z * z * mu2 * mu2 * c - 0.12e2 * c * c * delta2 * mu1 * z - 0.12e2 * c * c * delta2 * delta1 * z + 0.12e2 * c * c * delta2 * mu1 * z * z + 0.12e2 * c * c * delta2 * delta1 * z * z + 0.2e1 * pow(mu1, 0.4e1) - 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.24e2 * c * c * delta2 * z * z * mu2 + 0.24e2 * log(z) * mu1 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.24e2 * log(z) * c * mu1 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * pow(z, 0.3e1) + 0.48e2 * log(z) * c * mu1 * delta1 * delta2 * z * z - 0.24e2 * log(z) * c * mu1 * delta1 * delta2 * pow(z, 0.3e1) - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * z - 0.12e2 * c * c * mu1 * mu2 * z * z + 0.8e1 * c * pow(mu2, 0.3e1) * z - 0.24e2 * mu2 * mu2 * c * delta2 * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 * z - 0.12e2 * c * c * delta1 * mu2 * z * z + 0.24e2 * c * c * mu1 * delta1 * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.2e1 * pow(c, 0.4e1) * z * z + 0.4e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.6e1 * c * c * delta2 * delta2 * z + 0.12e2 * c * pow(delta2, 0.3e1) * z * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z * z + 0.12e2 * c * c * delta2 * delta2 * z * z - 0.12e2 * delta1 * delta2 * delta2 * z * c - 0.12e2 * delta1 * delta2 * delta2 * z * z * mu2 - 0.36e2 * delta2 * delta2 * z * z * mu2 * c - 0.12e2 * delta2 * delta2 * z * z * mu2 * mu1 - 0.12e2 * c * delta2 * delta2 * z * mu1 + 0.12e2 * c * delta2 * delta2 * z * z * mu1 + 0.12e2 * delta1 * z * z * delta2 * delta2 * c + 0.12e2 * pow(mu2, 0.3e1) * delta2 * z - 0.3e1 * pow(mu2, 0.4e1) * z - 0.48e2 * log(z) * mu1 * mu2 * c * delta1 * z * z + 0.24e2 * log(z) * mu1 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.12e2 * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 * z * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * mu1 * mu2 * delta1 * z * z - 0.12e2 * log(z) * mu1 * mu1 * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * delta1 * z * z - 0.12e2 * log(z) * c * c * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * z - 0.12e2 * log(z) * mu1 * mu1 * mu2 * delta1 * z - 0.12e2 * log(z) * c * c * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z + 0.12e2 * log(z) * mu1 * mu1 * mu2 * c * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * mu2 * c * z * z + 0.12e2 * log(z) * mu1 * mu1 * mu2 * c * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta1 * delta2 * z * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * pow(z, 0.3e1) + 0.2e1 * pow(c, 0.4e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.3e1 * pow(c, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.12e2 * mu1 * mu2 * delta2 * delta2 * z + 0.12e2 * mu2 * delta1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z - 0.4e1 * pow(delta2, 0.3e1) * delta1 * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(z, 0.3e1) - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * pow(z, 0.3e1) + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * pow(z, 0.3e1) + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * pow(z, 0.3e1) + 0.24e2 * c * mu2 * delta2 * delta2 * z + 0.12e2 * pow(delta2, 0.3e1) * mu2 * z - 0.8e1 * c * pow(delta2, 0.3e1) * z + 0.4e1 * pow(delta2, 0.4e1) * z * z - 0.18e2 * mu2 * mu2 * delta2 * delta2 * z - 0.3e1 * pow(delta2, 0.4e1) * z + 0.48e2 * mu1 * mu1 * c * z * delta1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;

			
		case 4:
			return (0.8e1 * mu1 * pow(delta1, 0.3e1) * z * z - 0.16e2 * mu1 * pow(delta1, 0.3e1) * z - 0.24e2 * c * mu1 * delta1 * delta1 - 0.24e2 * c * mu1 * mu1 * delta1 + 0.24e2 * c * c * mu1 * delta1 - 0.24e2 * mu1 * mu1 * z * delta1 * delta1 - 0.16e2 * pow(mu1, 0.3e1) * z * delta1 + 0.12e2 * z * z * mu1 * mu1 * delta1 * delta1 + 0.8e1 * z * z * pow(mu1, 0.3e1) * delta1 - 0.8e1 * pow(mu1, 0.3e1) * c * z * z + 0.16e2 * pow(mu1, 0.3e1) * c * z - 0.24e2 * mu1 * mu1 * c * c * z - 0.8e1 * pow(delta1, 0.3e1) * c * z * z + 0.16e2 * pow(delta1, 0.3e1) * c * z - 0.24e2 * delta1 * delta1 * c * c * z - 0.24e2 * mu1 * mu1 * c * z * z * delta1 - 0.6e1 * c * c * mu2 * mu2 * z + 0.12e2 * z * z * mu2 * mu2 * mu1 * c + 0.24e2 * c * delta2 * z * mu2 * mu1 + 0.12e2 * c * c * mu2 * mu2 * z * z + 0.12e2 * delta1 * delta1 * c * c * z * z + 0.12e2 * mu1 * mu1 * c * c * z * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.12e2 * c * pow(mu2, 0.3e1) * z * z + 0.12e2 * pow(c, 0.3e1) * delta1 * z + 0.12e2 * pow(c, 0.3e1) * mu1 * z - 0.24e2 * c * delta2 * z * z * mu2 * mu1 + 0.24e2 * c * delta2 * z * mu2 * delta1 - 0.16e2 * pow(mu2, 0.3e1) * delta2 * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z - 0.24e2 * c * delta2 * z * z * mu2 * delta1 + 0.12e2 * z * z * mu2 * mu2 * delta1 * c + 0.48e2 * c * mu1 * delta1 * delta1 * z + 0.4e1 * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(z) * c * pow(mu1, 0.3e1) * z * z - 0.4e1 * log(z) * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(c, 0.3e1) * delta2 * z * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(z) * c * pow(mu1, 0.3e1) * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z + 0.12e2 * c * c * delta1 * delta1 + 0.2e1 * z * z * pow(mu1, 0.4e1) + 0.2e1 * pow(delta1, 0.4e1) * z * z - 0.4e1 * pow(delta1, 0.4e1) * z + 0.8e1 * mu1 * pow(delta1, 0.3e1) + 0.12e2 * mu1 * mu1 * delta1 * delta1 - 0.8e1 * c * pow(delta1, 0.3e1) + 0.2e1 * pow(delta1, 0.4e1) * log(z) * z - 0.4e1 * pow(mu1, 0.4e1) * z - 0.24e2 * delta1 * delta1 * c * z * z * mu1 + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z - 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * pow(z, 0.3e1) + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * c * pow(z, 0.3e1) + 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.8e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z * z + 0.4e1 * pow(delta1, 0.3e1) * log(z) * delta2 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * mu1 - 0.8e1 * pow(c, 0.3e1) * mu1 - 0.8e1 * pow(c, 0.3e1) * delta1 + 0.8e1 * pow(mu1, 0.3e1) * delta1 - 0.8e1 * c * pow(mu1, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * mu2 * mu2 * mu1 * delta2 * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.48e2 * c * c * mu1 * delta1 * z + 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * delta2 * z * mu2 + 0.12e2 * delta2 * z * z * mu2 * mu2 * delta1 + 0.12e2 * delta2 * z * z * mu2 * mu2 * mu1 + 0.36e2 * delta2 * z * z * mu2 * mu2 * c - 0.12e2 * c * c * delta2 * mu1 * z - 0.12e2 * c * c * delta2 * delta1 * z + 0.12e2 * c * c * delta2 * mu1 * z * z + 0.12e2 * c * c * delta2 * delta1 * z * z + 0.2e1 * pow(mu1, 0.4e1) + 0.2e1 * pow(delta1, 0.4e1) - 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.24e2 * c * c * delta2 * z * z * mu2 + 0.24e2 * log(z) * mu1 * mu2 * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z - 0.24e2 * log(z) * c * mu1 * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * pow(z, 0.3e1) + 0.48e2 * log(z) * c * mu1 * delta1 * delta2 * z * z - 0.24e2 * log(z) * c * mu1 * delta1 * delta2 * pow(z, 0.3e1) - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * z - 0.12e2 * c * c * mu1 * mu2 * z * z + 0.8e1 * c * pow(mu2, 0.3e1) * z - 0.24e2 * mu2 * mu2 * c * delta2 * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 * z - 0.12e2 * c * c * delta1 * mu2 * z * z + 0.24e2 * c * c * mu1 * delta1 * z * z - 0.4e1 * pow(delta1, 0.4e1) * log(z) * z * z + 0.2e1 * pow(delta1, 0.4e1) * log(z) * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * delta1 * delta1 * z * z - 0.12e2 * log(z) * c * mu1 * delta1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z * z - 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu2 * c * delta1 * delta1 * z * z + 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.4e1) * z * z + 0.2e1 * pow(c, 0.4e1) * z * z + 0.12e2 * log(z) * mu1 * delta1 * delta1 * delta2 * z - 0.12e2 * log(z) * c * delta1 * delta1 * delta2 * z - 0.12e2 * log(z) * c * mu1 * delta1 * delta1 * z - 0.12e2 * log(z) * mu2 * mu1 * delta1 * delta1 * z + 0.12e2 * log(z) * mu2 * c * delta1 * delta1 * z - 0.24e2 * log(z) * mu1 * delta1 * delta1 * delta2 * z * z + 0.12e2 * log(z) * mu1 * delta1 * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * delta1 * delta1 * delta2 * z * z - 0.12e2 * log(z) * c * delta1 * delta1 * delta2 * pow(z, 0.3e1) + 0.4e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.6e1 * c * c * delta2 * delta2 * z + 0.12e2 * c * pow(delta2, 0.3e1) * z * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z * z + 0.12e2 * c * c * delta2 * delta2 * z * z - 0.12e2 * delta1 * delta2 * delta2 * z * c - 0.12e2 * delta1 * delta2 * delta2 * z * z * mu2 - 0.36e2 * delta2 * delta2 * z * z * mu2 * c - 0.12e2 * delta2 * delta2 * z * z * mu2 * mu1 - 0.12e2 * c * delta2 * delta2 * z * mu1 + 0.12e2 * c * delta2 * delta2 * z * z * mu1 + 0.12e2 * delta1 * z * z * delta2 * delta2 * c + 0.12e2 * pow(mu2, 0.3e1) * delta2 * z - 0.3e1 * pow(mu2, 0.4e1) * z - 0.48e2 * log(z) * mu1 * mu2 * c * delta1 * z * z + 0.24e2 * log(z) * mu1 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.12e2 * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta1 * z * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * mu1 * mu1 * mu2 * delta1 * z * z - 0.12e2 * log(z) * mu1 * mu1 * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * delta1 * z * z - 0.12e2 * log(z) * c * c * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * mu1 * delta2 * z * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(z) * c * mu1 * mu1 * delta2 * z * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta1 * z - 0.12e2 * log(z) * mu1 * mu1 * mu2 * delta1 * z - 0.12e2 * log(z) * c * c * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z + 0.12e2 * log(z) * c * c * mu1 * delta2 * z - 0.12e2 * log(z) * c * mu1 * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z + 0.12e2 * log(z) * mu1 * mu1 * mu2 * c * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * mu2 * c * z * z + 0.12e2 * log(z) * mu1 * mu1 * mu2 * c * pow(z, 0.3e1) + 0.24e2 * log(z) * c * c * mu2 * mu1 * z * z - 0.12e2 * log(z) * c * c * mu2 * mu1 * pow(z, 0.3e1) - 0.24e2 * log(z) * c * c * delta1 * delta2 * z * z + 0.12e2 * log(z) * c * c * delta1 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta2 * z * z + 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * pow(z, 0.3e1) + 0.2e1 * pow(c, 0.4e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.8e1 * log(z) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.3e1 * pow(c, 0.4e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.4e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.2e1 * log(z) * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z * z - 0.2e1 * log(z) * pow(c, 0.4e1) * pow(z, 0.3e1) + 0.12e2 * mu1 * mu2 * delta2 * delta2 * z + 0.12e2 * mu2 * delta1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * pow(z, 0.3e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z - 0.4e1 * pow(delta2, 0.3e1) * delta1 * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(z, 0.3e1) - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * pow(z, 0.3e1) + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * pow(z, 0.3e1) + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * pow(z, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * pow(z, 0.3e1) - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * pow(z, 0.3e1) + 0.24e2 * c * mu2 * delta2 * delta2 * z + 0.12e2 * pow(delta2, 0.3e1) * mu2 * z - 0.8e1 * c * pow(delta2, 0.3e1) * z + 0.4e1 * pow(delta2, 0.4e1) * z * z - 0.18e2 * mu2 * mu2 * delta2 * delta2 * z - 0.3e1 * pow(delta2, 0.4e1) * z + 0.48e2 * mu1 * mu1 * c * z * delta1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / z / 0.24e2;

			
		case 5:
			return (-0.6e1 * log(z) * mu2 * c * z + 0.6e1 * log(z) * c * delta2 * z + 0.6e1 * log(z) * mu2 * mu1 * z - 0.6e1 * log(z) * mu1 * delta2 * z + 0.6e1 * log(z) * c * mu1 * z + 0.2e1 * delta1 * log(z) * mu2 * z - 0.2e1 * delta1 * log(z) * delta2 * z + 0.2e1 * delta1 * log(z) * c * z - 0.4e1 * delta1 * log(z) * mu1 * z - 0.6e1 * log(z) * mu1 * mu1 * z - delta1 * delta1 * log(z) * z - delta1 * delta1 - 0.6e1 * c * c - 0.6e1 * mu1 * mu1 + 0.12e2 * c * mu1 + 0.4e1 * c * delta1 - 0.4e1 * mu1 * delta1) * pow(delta2, -0.2e1) / z / 0.12e2;
			
		case 6:
			return -(0.6e1 * c * c + 0.18e2 * mu2 * mu2 + 0.3e1 * delta2 * delta2 + 0.12e2 * c * mu1 + 0.12e2 * c * delta1 - 0.12e2 * c * c * z - 0.24e2 * c * mu2 + 0.8e1 * c * delta2 - 0.12e2 * mu1 * mu2 + 0.4e1 * mu1 * delta2 - 0.12e2 * delta1 * mu2 + 0.4e1 * delta1 * delta2 + 0.36e2 * c * mu2 * z - 0.12e2 * c * delta2 * z + 0.12e2 * mu1 * mu2 * z - 0.4e1 * mu1 * delta2 * z - 0.12e2 * mu1 * c * z + 0.12e2 * delta1 * mu2 * z - 0.4e1 * delta1 * delta2 * z - 0.12e2 * delta1 * c * z - 0.4e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z + 0.2e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 + 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 + 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * c + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z * z - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z + 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z * z - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z + 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * c * z + 0.4e1 * delta2 * log(fabs(-0.1e1 + z)) * c * z * z + 0.16e2 * delta2 * mu2 * z - 0.24e2 * mu2 * mu2 * z - 0.12e2 * delta2 * mu2 + 0.2e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.4e1 * delta2 * delta2 * z) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
			
		case 7:
			return -(-0.12e2 * delta2 * mu2 * mu2 * delta1 - 0.12e2 * delta2 * mu2 * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * c * c * delta2 * delta1 - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * mu2 + 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.12e2 * mu2 * mu2 * delta1 * c - 0.12e2 * mu2 * mu2 * mu1 * c + 0.12e2 * c * mu1 * mu2 * mu2 * z + 0.12e2 * c * delta1 * mu2 * mu2 * z + 0.36e2 * c * mu2 * mu2 * z * delta2 - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * delta2 * mu1 * z + 0.12e2 * c * c * delta2 * delta1 * z - 0.3e1 * pow(mu2, 0.4e1) - 0.6e1 * c * c * mu2 * mu2 - 0.16e2 * delta2 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.12e2 * delta1 * mu2 * mu2 * z * delta2 + 0.12e2 * delta2 * pow(mu2, 0.3e1) + 0.12e2 * c * c * mu2 * mu2 * z - 0.12e2 * c * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.24e2 * c * mu1 * delta2 * mu2 * z - 0.24e2 * c * delta1 * delta2 * mu2 * z + 0.24e2 * c * delta2 * mu2 * mu1 + 0.24e2 * c * delta2 * mu2 * delta1 + 0.8e1 * c * pow(mu2, 0.3e1) + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.12e2 * mu1 * mu2 * mu2 * z * delta2 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + pow(c, 0.4e1) - 0.24e2 * c * c * delta2 * mu2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.24e2 * delta2 * mu2 * mu2 * c) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 8:
			return -(-0.12e2 * delta2 * mu2 * mu2 * delta1 - 0.12e2 * delta2 * mu2 * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * c * c * delta2 * delta1 - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * mu2 + 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.12e2 * mu2 * mu2 * delta1 * c - 0.12e2 * mu2 * mu2 * mu1 * c + 0.12e2 * c * mu1 * mu2 * mu2 * z + 0.12e2 * c * mu1 * delta2 * delta2 * z + 0.12e2 * c * delta1 * mu2 * mu2 * z + 0.12e2 * c * delta1 * delta2 * delta2 * z - 0.36e2 * c * mu2 * z * delta2 * delta2 + 0.36e2 * c * mu2 * mu2 * z * delta2 - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z + 0.4e1 * delta1 * pow(delta2, 0.3e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * delta2 * mu1 * z + 0.12e2 * c * c * delta2 * delta1 * z - 0.3e1 * pow(mu2, 0.4e1) - 0.6e1 * c * c * mu2 * mu2 - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z + 0.24e2 * delta2 * delta2 * mu2 * mu2 * z + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 + 0.4e1 * pow(delta2, 0.4e1) * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.16e2 * delta2 * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.12e2 * delta1 * mu2 * mu2 * z * delta2 + 0.12e2 * delta2 * pow(mu2, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z + 0.12e2 * c * c * mu2 * mu2 * z + 0.12e2 * c * c * delta2 * delta2 * z - 0.12e2 * c * pow(mu2, 0.3e1) * z + 0.12e2 * c * pow(delta2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z - 0.24e2 * c * mu1 * delta2 * mu2 * z - 0.24e2 * c * delta1 * delta2 * mu2 * z + 0.24e2 * c * delta2 * mu2 * mu1 + 0.24e2 * c * delta2 * mu2 * delta1 + 0.8e1 * c * pow(mu2, 0.3e1) + 0.4e1 * pow(mu2, 0.3e1) * mu1 - 0.4e1 * pow(delta2, 0.3e1) * mu1 - 0.4e1 * delta1 * pow(delta2, 0.3e1) - 0.18e2 * delta2 * delta2 * mu2 * mu2 + 0.12e2 * pow(delta2, 0.3e1) * mu2 - 0.8e1 * c * pow(delta2, 0.3e1) - 0.6e1 * c * c * delta2 * delta2 - 0.12e2 * mu1 * mu2 * z * delta2 * delta2 + 0.12e2 * mu1 * mu2 * mu2 * z * delta2 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + pow(c, 0.4e1) - 0.24e2 * c * c * delta2 * mu2 * z + 0.12e2 * delta2 * delta2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.24e2 * delta2 * delta2 * mu2 * c - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * delta1 * delta2 * delta2 * c - 0.3e1 * pow(delta2, 0.4e1) + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z + 0.4e1 * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.12e2 * delta1 * mu2 * z * delta2 * delta2 - 0.24e2 * delta2 * mu2 * mu2 * c) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 9:
			return -(0.12e2 * c * mu1 * mu1 * delta1 - 0.12e2 * c * c * mu1 * delta1 - 0.2e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.2e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.2e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu2 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.2e1 * log(z) * c * pow(mu1, 0.3e1) * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z - 0.6e1 * c * c * mu1 * mu1 + 0.4e1 * pow(c, 0.3e1) * mu1 + 0.4e1 * pow(c, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.3e1) * delta1 + 0.4e1 * c * pow(mu1, 0.3e1) - pow(mu1, 0.4e1) + 0.12e2 * log(z) * c * mu1 * delta1 * delta2 * z - 0.12e2 * log(z) * mu1 * mu2 * c * delta1 * z - pow(c, 0.4e1) - 0.6e1 * log(z) * c * c * delta1 * delta2 * z - 0.6e1 * log(z) * mu1 * mu1 * delta1 * delta2 * z + 0.6e1 * log(z) * c * mu1 * mu1 * delta1 * z + 0.6e1 * log(z) * mu1 * mu1 * mu2 * delta1 * z + 0.6e1 * log(z) * c * c * mu2 * delta1 * z - 0.6e1 * log(z) * c * c * mu1 * delta2 * z + 0.6e1 * log(z) * c * mu1 * mu1 * delta2 * z - 0.6e1 * log(z) * mu1 * mu1 * mu2 * c * z + 0.6e1 * log(z) * c * c * mu2 * mu1 * z - log(z) * pow(mu1, 0.4e1) * z + log(z) * pow(c, 0.4e1) * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z / 0.12e2;
			
		case 10:
			return -(0.12e2 * c * mu1 * delta1 * delta1 + 0.12e2 * c * mu1 * mu1 * delta1 - 0.12e2 * c * c * mu1 * delta1 - 0.2e1 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z + 0.2e1 * log(z) * pow(c, 0.3e1) * delta2 * z - 0.2e1 * log(z) * pow(mu1, 0.3e1) * delta2 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu2 * z - 0.2e1 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.2e1 * log(z) * c * pow(mu1, 0.3e1) * z + 0.2e1 * log(z) * pow(mu1, 0.3e1) * mu2 * z - 0.6e1 * c * c * delta1 * delta1 - 0.4e1 * mu1 * pow(delta1, 0.3e1) - 0.6e1 * mu1 * mu1 * delta1 * delta1 + 0.4e1 * c * pow(delta1, 0.3e1) - 0.6e1 * c * c * mu1 * mu1 + 0.4e1 * pow(c, 0.3e1) * mu1 - pow(delta1, 0.4e1) * log(z) * z + 0.4e1 * pow(c, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.3e1) * delta1 + 0.4e1 * c * pow(mu1, 0.3e1) - pow(mu1, 0.4e1) - pow(delta1, 0.4e1) + 0.12e2 * log(z) * c * mu1 * delta1 * delta2 * z - 0.12e2 * log(z) * mu1 * mu2 * c * delta1 * z - 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z + 0.2e1 * pow(delta1, 0.3e1) * log(z) * c * z + 0.2e1 * pow(delta1, 0.3e1) * log(z) * mu2 * z - 0.6e1 * log(z) * mu1 * mu1 * delta1 * delta1 * z - 0.2e1 * pow(delta1, 0.3e1) * log(z) * delta2 * z + 0.6e1 * log(z) * c * mu1 * delta1 * delta1 * z + 0.6e1 * log(z) * mu2 * mu1 * delta1 * delta1 * z - 0.6e1 * log(z) * mu2 * c * delta1 * delta1 * z - 0.6e1 * log(z) * mu1 * delta1 * delta1 * delta2 * z + 0.6e1 * log(z) * c * delta1 * delta1 * delta2 * z - pow(c, 0.4e1) - 0.6e1 * log(z) * c * c * delta1 * delta2 * z - 0.6e1 * log(z) * mu1 * mu1 * delta1 * delta2 * z + 0.6e1 * log(z) * c * mu1 * mu1 * delta1 * z + 0.6e1 * log(z) * mu1 * mu1 * mu2 * delta1 * z + 0.6e1 * log(z) * c * c * mu2 * delta1 * z - 0.6e1 * log(z) * c * c * mu1 * delta2 * z + 0.6e1 * log(z) * c * mu1 * mu1 * delta2 * z - 0.6e1 * log(z) * mu1 * mu1 * mu2 * c * z + 0.6e1 * log(z) * c * c * mu2 * mu1 * z - log(z) * pow(mu1, 0.4e1) * z + log(z) * pow(c, 0.4e1) * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z / 0.12e2;
	
		case 11:
			return -(-0.12e2 * delta2 * mu2 * mu2 * delta1 - 0.12e2 * delta2 * mu2 * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * c * c * delta2 * delta1 - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * mu2 + 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.12e2 * c * delta2 * delta2 * z * mu1 + 0.12e2 * c * delta2 * delta2 * z * delta1 - 0.12e2 * mu2 * mu2 * delta1 * c - 0.12e2 * mu2 * mu2 * mu1 * c + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.12e2 * mu2 * mu2 * mu1 * c * z - 0.24e2 * c * c * delta2 * mu2 * z + 0.12e2 * mu2 * mu2 * delta1 * c * z - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * delta2 * mu1 * z + 0.12e2 * c * c * delta2 * delta1 * z + 0.12e2 * mu2 * mu2 * z * delta1 * delta2 - 0.12e2 * mu2 * z * delta1 * delta2 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z - 0.3e1 * pow(mu2, 0.4e1) - 0.6e1 * c * c * mu2 * mu2 + 0.12e2 * c * c * delta2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z * z + 0.12e2 * c * c * mu2 * mu2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 + 0.4e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.12e2 * delta2 * pow(mu2, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.24e2 * mu2 * mu2 * delta2 * delta2 * z - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z + 0.4e1 * pow(mu2, 0.4e1) * z + 0.4e1 * pow(delta2, 0.4e1) * z - 0.12e2 * mu1 * mu2 * z * delta2 * delta2 - 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * c * delta2 * mu2 * mu1 + 0.24e2 * c * delta2 * mu2 * delta1 + 0.12e2 * mu1 * mu2 * mu2 * z * delta2 + 0.4e1 * pow(delta2, 0.3e1) * z * delta1 + 0.8e1 * c * pow(mu2, 0.3e1) - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.36e2 * c * mu2 * mu2 * z * delta2 - 0.36e2 * c * mu2 * z * delta2 * delta2 - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.2e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.4e1 * pow(delta2, 0.3e1) * mu1 - 0.4e1 * delta1 * pow(delta2, 0.3e1) - 0.18e2 * delta2 * delta2 * mu2 * mu2 + 0.12e2 * pow(delta2, 0.3e1) * mu2 - 0.8e1 * c * pow(delta2, 0.3e1) - 0.6e1 * c * c * delta2 * delta2 + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 + pow(c, 0.4e1) + 0.12e2 * delta2 * delta2 * mu2 * mu1 + 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.24e2 * delta2 * delta2 * mu2 * c - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * delta1 * delta2 * delta2 * c - 0.3e1 * pow(delta2, 0.4e1) - 0.24e2 * c * delta2 * mu2 * mu1 * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.24e2 * c * delta2 * mu2 * delta1 * z + 0.12e2 * c * pow(delta2, 0.3e1) * z - 0.12e2 * c * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * delta2 * delta2 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * delta2 * delta2 * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c + 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.4e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z - 0.24e2 * delta2 * mu2 * mu2 * c) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 12:
			return -(-0.12e2 * delta2 * mu2 * mu2 * delta1 - 0.12e2 * delta2 * mu2 * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.12e2 * c * c * mu2 * mu1 - 0.12e2 * c * c * delta2 * delta1 - 0.12e2 * c * c * delta2 * mu1 + 0.12e2 * c * c * delta2 * mu2 + 0.4e1 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.12e2 * mu2 * mu2 * delta1 * c - 0.12e2 * mu2 * mu2 * mu1 * c + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu1 + 0.12e2 * mu2 * mu2 * mu1 * c * z - 0.24e2 * c * c * delta2 * mu2 * z + 0.12e2 * mu2 * mu2 * delta1 * c * z - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * delta2 * mu1 * z + 0.12e2 * c * c * delta2 * delta1 * z + 0.12e2 * mu2 * mu2 * z * delta1 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 * z * z - 0.3e1 * pow(mu2, 0.4e1) - 0.6e1 * c * c * mu2 * mu2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 * z * z + 0.12e2 * c * c * mu2 * mu2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.12e2 * delta2 * pow(mu2, 0.3e1) + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.4e1 * pow(mu2, 0.4e1) * z - 0.16e2 * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * c * delta2 * mu2 * mu1 + 0.24e2 * c * delta2 * mu2 * delta1 + 0.12e2 * mu1 * mu2 * mu2 * z * delta2 + 0.8e1 * c * pow(mu2, 0.3e1) - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.4e1 * pow(mu2, 0.3e1) * mu1 + 0.36e2 * c * mu2 * mu2 * z * delta2 - 0.2e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 * pow(mu2, 0.3e1) * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta1 + pow(c, 0.4e1) - 0.24e2 * c * delta2 * mu2 * mu1 * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z - 0.24e2 * c * delta2 * mu2 * delta1 * z - 0.12e2 * c * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z + 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta2 * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * c + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.12e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z - 0.24e2 * delta2 * mu2 * mu2 * c) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: DECS_second_moment_piece_value(double z, int piecenum)
{
	
	if(fabs(z) < DBL_EPSILON)	
	{
		z = 1.0e-5;
	}
	if(fabs(1-z) < DBL_EPSILON)	
	{
		z = 1 - 1.0e-5;
	}
	
	switch (piecenum)
	{
		// Expressions for z^2.pdf(z) and not pdf(z)
		case 1:
			return -(-0.48e2 * c * c * delta2 * mu2 * z + 0.24e2 * c * mu2 * mu2 * delta1 * z * z + 0.24e2 * delta2 * mu2 * mu2 * c * z * z - 0.8e1 * z * z * mu1 * pow(mu2, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 * z * pow(mu2, 0.4e1) - 0.12e2 * log(z) * c * c * delta1 * delta1 - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 + 0.4e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.4e1 * pow(delta1, 0.4e1) * log(z) * z - 0.2e1 * pow(delta1, 0.4e1) * log(z) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 + 0.48e2 * delta2 * mu2 * mu2 * c * z + 0.24e2 * c * c * mu2 * mu2 * z - 0.16e2 * z * z * pow(mu2, 0.3e1) * delta2 + 0.8e1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.12e2 * log(z) * c * c * mu1 * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.2e1 * pow(z, 0.3e1) * pow(mu2, 0.4e1) + 0.24e2 * delta2 * mu2 * mu2 * mu1 * z * z + 0.24e2 * z * z * c * mu2 * mu2 * mu1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 + 0.24e2 * delta2 * mu2 * mu2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.48e2 * log(z) * c * c * mu1 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(z) * mu1 * mu1 * c * delta1 * z + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.24e2 * log(z) * mu1 * c * delta1 * delta1 * z * z - 0.48e2 * log(z) * mu1 * c * delta1 * delta1 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.16e2 * z * pow(mu2, 0.3e1) * delta2 - 0.48e2 * c * delta2 * delta1 * mu2 * z * z - 0.48e2 * c * mu2 * mu1 * z * z * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 + 0.24e2 * log(z) * mu1 * c * delta1 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 + 0.24e2 * log(z) * c * c * delta1 * delta1 * z - 0.12e2 * log(z) * c * c * delta1 * delta1 * z * z + 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z + 0.24e2 * c * mu1 * delta1 * mu2 * z - 0.48e2 * c * mu1 * delta1 * z * z * mu2 - 0.24e2 * c * delta2 * mu1 * z * delta1 + 0.48e2 * c * delta2 * mu1 * z * z * delta1 + 0.24e2 * c * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * delta1 + 0.24e2 * c * delta2 * delta1 * pow(z, 0.3e1) * mu2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * pow(delta1, 0.3e1) * log(z) * c * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.12e2 * mu1 * mu1 * delta1 * mu2 * z - 0.12e2 * delta1 * delta1 * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z - 0.12e2 * c * mu1 * mu1 * delta1 * z + 0.12e2 * c * delta1 * delta1 * mu2 * z - 0.12e2 * c * delta1 * delta1 * mu1 * z + 0.24e2 * mu1 * mu1 * delta1 * z * z * mu2 + 0.24e2 * mu1 * delta1 * delta1 * z * z * mu2 - 0.24e2 * c * mu1 * mu1 * z * z * mu2 + 0.24e2 * c * mu1 * mu1 * z * z * delta1 - 0.24e2 * c * delta1 * delta1 * z * z * mu2 + 0.24e2 * c * delta1 * delta1 * z * z * mu1 - 0.12e2 * mu1 * mu1 * delta2 * z * c + 0.12e2 * mu1 * mu1 * delta2 * z * delta1 - 0.24e2 * mu1 * mu1 * delta2 * z * z * delta1 - 0.12e2 * delta1 * delta1 * delta2 * z * c + 0.12e2 * delta1 * delta1 * delta2 * z * mu1 - 0.24e2 * delta1 * delta1 * delta2 * z * z * mu1 + 0.12e2 * c * c * delta2 * mu1 * z + 0.24e2 * c * delta2 * mu1 * mu1 * z * z + 0.12e2 * c * c * delta2 * delta1 * z + 0.24e2 * c * delta2 * delta1 * delta1 * z * z - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * delta1 - 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * mu2 * delta1 - 0.12e2 * delta1 * delta1 * pow(z, 0.3e1) * mu2 * mu1 + 0.12e2 * delta2 * pow(z, 0.3e1) * mu1 * mu1 * delta1 + 0.12e2 * delta2 * pow(z, 0.3e1) * delta1 * delta1 * mu1 + 0.12e2 * c * mu1 * mu1 * pow(z, 0.3e1) * mu2 - 0.12e2 * c * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.12e2 * c * delta1 * delta1 * pow(z, 0.3e1) * mu2 - 0.12e2 * c * delta1 * delta1 * pow(z, 0.3e1) * mu1 - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z + 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z - 0.24e2 * log(z) * c * c * mu1 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta1 * delta1 * pow(z, 0.3e1) - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z + 0.8e1 * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * pow(delta1, 0.3e1) * mu2 * z + 0.8e1 * pow(delta1, 0.3e1) * mu1 * z + 0.12e2 * mu1 * mu1 * delta1 * delta1 * z - 0.4e1 * c * pow(mu1, 0.3e1) * z - 0.4e1 * c * pow(delta1, 0.3e1) * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 - 0.16e2 * pow(mu1, 0.3e1) * z * z * delta1 + 0.8e1 * pow(delta1, 0.3e1) * z * z * mu2 - 0.16e2 * pow(delta1, 0.3e1) * z * z * mu1 - 0.24e2 * mu1 * mu1 * delta1 * delta1 * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(delta1, 0.3e1) * z * z + 0.4e1 * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * pow(mu1, 0.3e1) * delta2 * z * z + 0.4e1 * pow(delta1, 0.3e1) * delta2 * z - 0.8e1 * pow(delta1, 0.3e1) * delta2 * z * z + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * c * c * delta2 * delta1 + 0.8e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.8e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 + 0.4e1 * delta2 * pow(z, 0.3e1) * pow(mu1, 0.3e1) + 0.4e1 * delta2 * pow(z, 0.3e1) * pow(delta1, 0.3e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * c * pow(delta1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.12e2 * pow(c, 0.3e1) * mu2 * z + 0.2e1 * pow(mu1, 0.4e1) * z + 0.2e1 * pow(delta1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.4e1 * pow(delta1, 0.4e1) * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(delta1, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.2e1 * z * pow(c, 0.4e1) - pow(c, 0.4e1) + 0.36e2 * c * c * delta2 * mu2 - 0.12e2 * delta2 * mu2 * mu2 * mu1 - 0.12e2 * delta2 * mu2 * mu2 * delta1 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.48e2 * delta2 * mu2 * mu2 * c + 0.24e2 * c * delta2 * mu1 * mu2 + 0.24e2 * c * delta2 * delta1 * mu2 + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 - 0.5e1 * pow(mu2, 0.4e1) - 0.16e2 * z * c * pow(mu2, 0.3e1) - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z * z - 0.2e1 * pow(delta1, 0.4e1) * log(z) - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.8e1 * z * z * c * pow(mu2, 0.3e1)) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
			
		case 2:
			return (-0.48e2 * c * c * delta2 * mu2 * z + 0.24e2 * c * mu2 * mu2 * delta1 * z * z + 0.24e2 * delta2 * mu2 * mu2 * c * z * z - 0.8e1 * z * z * mu1 * pow(mu2, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 * z * pow(mu2, 0.4e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 + 0.48e2 * delta2 * mu2 * mu2 * c * z + 0.24e2 * c * c * mu2 * mu2 * z - 0.16e2 * z * z * pow(mu2, 0.3e1) * delta2 + 0.8e1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.12e2 * log(z) * c * c * mu1 * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.2e1 * pow(z, 0.3e1) * pow(mu2, 0.4e1) + 0.24e2 * delta2 * mu2 * mu2 * mu1 * z * z + 0.24e2 * z * z * c * mu2 * mu2 * mu1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 + 0.24e2 * delta2 * mu2 * mu2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.48e2 * log(z) * c * c * mu1 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(z) * mu1 * mu1 * c * delta1 * z + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.16e2 * z * pow(mu2, 0.3e1) * delta2 - 0.48e2 * c * delta2 * delta1 * mu2 * z * z - 0.48e2 * c * mu2 * mu1 * z * z * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 + 0.24e2 * c * mu1 * delta1 * mu2 * z - 0.48e2 * c * mu1 * delta1 * z * z * mu2 - 0.24e2 * c * delta2 * mu1 * z * delta1 + 0.48e2 * c * delta2 * mu1 * z * z * delta1 + 0.24e2 * c * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * delta1 + 0.24e2 * c * delta2 * delta1 * pow(z, 0.3e1) * mu2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.12e2 * mu1 * mu1 * delta1 * mu2 * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z - 0.12e2 * c * mu1 * mu1 * delta1 * z + 0.24e2 * mu1 * mu1 * delta1 * z * z * mu2 - 0.24e2 * c * mu1 * mu1 * z * z * mu2 + 0.24e2 * c * mu1 * mu1 * z * z * delta1 - 0.12e2 * mu1 * mu1 * delta2 * z * c + 0.12e2 * mu1 * mu1 * delta2 * z * delta1 - 0.24e2 * mu1 * mu1 * delta2 * z * z * delta1 + 0.12e2 * c * c * delta2 * mu1 * z + 0.24e2 * c * delta2 * mu1 * mu1 * z * z + 0.12e2 * c * c * delta2 * delta1 * z - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * delta1 - 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * mu2 * delta1 + 0.12e2 * delta2 * pow(z, 0.3e1) * mu1 * mu1 * delta1 + 0.12e2 * c * mu1 * mu1 * pow(z, 0.3e1) * mu2 - 0.12e2 * c * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z - 0.24e2 * log(z) * c * c * mu1 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z + 0.8e1 * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * c * pow(mu1, 0.3e1) * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 - 0.16e2 * pow(mu1, 0.3e1) * z * z * delta1 + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.4e1 * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * pow(mu1, 0.3e1) * delta2 * z * z + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * c * c * delta2 * delta1 + 0.8e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.4e1 * delta2 * pow(z, 0.3e1) * pow(mu1, 0.3e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.12e2 * pow(c, 0.3e1) * mu2 * z + 0.2e1 * pow(mu1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.2e1 * z * pow(c, 0.4e1) - pow(c, 0.4e1) + 0.36e2 * c * c * delta2 * mu2 - 0.12e2 * delta2 * mu2 * mu2 * mu1 - 0.12e2 * delta2 * mu2 * mu2 * delta1 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.48e2 * delta2 * mu2 * mu2 * c + 0.24e2 * c * delta2 * mu1 * mu2 + 0.24e2 * c * delta2 * delta1 * mu2 + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 - 0.5e1 * pow(mu2, 0.4e1) - 0.16e2 * z * c * pow(mu2, 0.3e1) - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.8e1 * z * z * c * pow(mu2, 0.3e1)) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 3:
			return -(-0.48e2 * c * c * delta2 * mu2 * z + 0.24e2 * c * mu2 * mu2 * delta1 * z * z + 0.24e2 * delta2 * mu2 * mu2 * c * z * z - 0.8e1 * z * z * mu1 * pow(mu2, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 * z * pow(mu2, 0.4e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 - 0.18e2 * c * c * delta2 * delta2 - 0.5e1 * pow(delta2, 0.4e1) + 0.48e2 * delta2 * mu2 * mu2 * c * z + 0.24e2 * c * c * mu2 * mu2 * z - 0.16e2 * z * z * pow(mu2, 0.3e1) * delta2 + 0.8e1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * pow(delta2, 0.4e1) * z + 0.4e1 * pow(delta2, 0.4e1) * z * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) - 0.48e2 * c * mu2 * z * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.24e2 * delta2 * delta2 * mu2 * mu2 * z + 0.24e2 * delta2 * delta2 * mu2 * mu2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * c * z - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.12e2 * log(z) * c * c * mu1 * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.2e1 * pow(z, 0.3e1) * pow(mu2, 0.4e1) + 0.24e2 * delta2 * mu2 * mu2 * mu1 * z * z + 0.24e2 * z * z * c * mu2 * mu2 * mu1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.24e2 * delta2 * delta2 * z * z * mu2 * c - 0.24e2 * delta2 * delta2 * z * z * mu2 * mu1 + 0.12e2 * delta2 * delta2 * pow(z, 0.3e1) * mu2 * mu1 + 0.24e2 * c * delta2 * delta2 * mu1 * z * z + 0.24e2 * c * delta2 * delta2 * delta1 * z * z + 0.12e2 * delta1 * delta2 * delta2 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * delta2 * delta2 * z * z * mu2 + 0.12e2 * delta2 * delta2 * pow(z, 0.3e1) * mu2 * c - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 + 0.24e2 * delta2 * mu2 * mu2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.48e2 * log(z) * c * c * mu1 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(z) * mu1 * mu1 * c * delta1 * z + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.16e2 * z * pow(mu2, 0.3e1) * delta2 + 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.48e2 * delta2 * delta2 * mu2 * c - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 - 0.16e2 * pow(delta2, 0.3e1) * c + 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.30e2 * delta2 * delta2 * mu2 * mu2 - 0.4e1 * delta1 * pow(delta2, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.12e2 * delta2 * delta2 * mu2 * mu1 - 0.48e2 * c * delta2 * delta1 * mu2 * z * z - 0.48e2 * c * mu2 * mu1 * z * z * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 + 0.24e2 * c * mu1 * delta1 * mu2 * z - 0.48e2 * c * mu1 * delta1 * z * z * mu2 - 0.24e2 * c * delta2 * mu1 * z * delta1 + 0.48e2 * c * delta2 * mu1 * z * z * delta1 + 0.24e2 * c * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * delta1 + 0.24e2 * c * delta2 * delta1 * pow(z, 0.3e1) * mu2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.12e2 * mu1 * mu1 * delta1 * mu2 * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z - 0.12e2 * c * mu1 * mu1 * delta1 * z + 0.24e2 * mu1 * mu1 * delta1 * z * z * mu2 - 0.24e2 * c * mu1 * mu1 * z * z * mu2 + 0.24e2 * c * mu1 * mu1 * z * z * delta1 - 0.12e2 * mu1 * mu1 * delta2 * z * c + 0.12e2 * mu1 * mu1 * delta2 * z * delta1 - 0.24e2 * mu1 * mu1 * delta2 * z * z * delta1 + 0.12e2 * c * c * delta2 * mu1 * z + 0.24e2 * c * delta2 * mu1 * mu1 * z * z + 0.12e2 * c * c * delta2 * delta1 * z - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * delta1 - 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * mu2 * delta1 + 0.12e2 * delta2 * pow(z, 0.3e1) * mu1 * mu1 * delta1 + 0.12e2 * c * mu1 * mu1 * pow(z, 0.3e1) * mu2 - 0.12e2 * c * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z - 0.24e2 * log(z) * c * c * mu1 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z + 0.8e1 * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * c * pow(mu1, 0.3e1) * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 - 0.16e2 * pow(mu1, 0.3e1) * z * z * delta1 + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.4e1 * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * pow(mu1, 0.3e1) * delta2 * z * z + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * c * c * delta2 * delta1 + 0.8e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.4e1 * delta2 * pow(z, 0.3e1) * pow(mu1, 0.3e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.12e2 * pow(c, 0.3e1) * mu2 * z + 0.2e1 * pow(mu1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.2e1 * z * pow(c, 0.4e1) - pow(c, 0.4e1) + 0.36e2 * c * c * delta2 * mu2 - 0.12e2 * delta2 * mu2 * mu2 * mu1 - 0.12e2 * delta2 * mu2 * mu2 * delta1 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.48e2 * delta2 * mu2 * mu2 * c + 0.24e2 * c * delta2 * mu1 * mu2 + 0.24e2 * c * delta2 * delta1 * mu2 + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 - 0.5e1 * pow(mu2, 0.4e1) - 0.16e2 * z * c * pow(mu2, 0.3e1) - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * c - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.8e1 * pow(delta2, 0.3e1) * z * z * c + 0.8e1 * pow(delta2, 0.3e1) * z * z * mu1 + 0.8e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu1 - 0.12e2 * delta2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.24e2 * c * c * delta2 * delta2 * z + 0.8e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * z * z * c * pow(mu2, 0.3e1)) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 4:
			return (-0.48e2 * c * c * delta2 * mu2 * z + 0.24e2 * c * mu2 * mu2 * delta1 * z * z + 0.24e2 * delta2 * mu2 * mu2 * c * z * z - 0.8e1 * z * z * mu1 * pow(mu2, 0.3e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 * z * pow(mu2, 0.4e1) + 0.4e1 * log(z) * pow(c, 0.4e1) * z - 0.2e1 * log(z) * pow(c, 0.4e1) * z * z + 0.4e1 * log(z) * pow(mu1, 0.4e1) * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 - 0.48e2 * log(z) * mu1 * c * delta1 * delta1 * z + 0.24e2 * log(z) * mu1 * c * delta1 * delta1 * z * z - 0.18e2 * c * c * delta2 * delta2 - 0.5e1 * pow(delta2, 0.4e1) + 0.48e2 * delta2 * mu2 * mu2 * c * z + 0.24e2 * c * c * mu2 * mu2 * z - 0.16e2 * z * z * pow(mu2, 0.3e1) * delta2 + 0.8e1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * pow(delta2, 0.4e1) * z + 0.4e1 * pow(delta2, 0.4e1) * z * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) - 0.48e2 * c * mu2 * z * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.24e2 * delta2 * delta2 * mu2 * mu2 * z + 0.24e2 * delta2 * delta2 * mu2 * mu2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * c * z - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.12e2 * log(z) * c * c * mu1 * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 + 0.4e1 * z * z * pow(mu2, 0.4e1) - 0.2e1 * pow(z, 0.3e1) * pow(mu2, 0.4e1) + 0.24e2 * delta2 * mu2 * mu2 * mu1 * z * z + 0.24e2 * z * z * c * mu2 * mu2 * mu1 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 - 0.24e2 * delta2 * delta2 * z * z * mu2 * c - 0.24e2 * delta2 * delta2 * z * z * mu2 * mu1 + 0.12e2 * delta2 * delta2 * pow(z, 0.3e1) * mu2 * mu1 + 0.24e2 * c * delta2 * delta2 * mu1 * z * z + 0.24e2 * c * delta2 * delta2 * delta1 * z * z + 0.12e2 * delta1 * delta2 * delta2 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * delta2 * delta2 * z * z * mu2 + 0.12e2 * delta2 * delta2 * pow(z, 0.3e1) * mu2 * c - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z - 0.24e2 * log(z) * c * c * mu1 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 + 0.24e2 * delta2 * mu2 * mu2 * delta1 * z * z + 0.4e1 * pow(delta1, 0.4e1) * log(z) * z - 0.2e1 * pow(delta1, 0.4e1) * log(z) * z * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 - 0.12e2 * log(z) * c * c * delta1 * delta1 + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.48e2 * log(z) * c * c * mu1 * delta1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(z) * mu1 * mu1 * c * delta1 * z + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.16e2 * z * pow(mu2, 0.3e1) * delta2 + 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.48e2 * delta2 * delta2 * mu2 * c - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 - 0.16e2 * pow(delta2, 0.3e1) * c + 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.30e2 * delta2 * delta2 * mu2 * mu2 - 0.4e1 * delta1 * pow(delta2, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.12e2 * delta2 * delta2 * mu2 * mu1 - 0.48e2 * c * delta2 * delta1 * mu2 * z * z - 0.48e2 * c * mu2 * mu1 * z * z * delta2 - 0.2e1 * pow(delta1, 0.4e1) * log(z) + 0.24e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z - 0.12e2 * log(z) * mu1 * mu1 * delta1 * delta1 * z * z + 0.24e2 * log(z) * c * c * delta1 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(z) * c * c * mu1 * mu1 * z + 0.8e1 * log(z) * pow(mu1, 0.3e1) * c * z * z - 0.16e2 * log(z) * pow(c, 0.3e1) * mu1 * z + 0.8e1 * log(z) * pow(c, 0.3e1) * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.12e2 * log(z) * c * c * mu1 * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.24e2 * log(z) * mu1 * c * delta1 * delta1 + 0.8e1 * log(z) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * log(z) * pow(mu1, 0.3e1) * delta1 * z - 0.8e1 * log(z) * pow(mu1, 0.3e1) * delta1 * z * z + 0.24e2 * log(z) * mu1 * mu1 * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 + 0.24e2 * c * mu1 * delta1 * mu2 * z - 0.48e2 * c * mu1 * delta1 * z * z * mu2 - 0.24e2 * c * delta2 * mu1 * z * delta1 + 0.48e2 * c * delta2 * mu1 * z * z * delta1 + 0.24e2 * c * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * delta1 + 0.24e2 * c * delta2 * delta1 * pow(z, 0.3e1) * mu2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.16e2 * log(z) * pow(c, 0.3e1) * delta1 * z - 0.12e2 * log(z) * c * c * delta1 * delta1 * z * z - 0.16e2 * pow(delta1, 0.3e1) * log(z) * c * z + 0.8e1 * pow(delta1, 0.3e1) * log(z) * c * z * z + 0.16e2 * pow(delta1, 0.3e1) * log(z) * mu1 * z - 0.8e1 * pow(delta1, 0.3e1) * log(z) * mu1 * z * z - 0.12e2 * mu1 * mu1 * delta1 * mu2 * z - 0.12e2 * delta1 * delta1 * mu1 * mu2 * z - 0.12e2 * c * c * mu1 * mu2 * z - 0.12e2 * c * c * delta1 * mu2 * z + 0.12e2 * c * mu1 * mu1 * mu2 * z - 0.12e2 * c * mu1 * mu1 * delta1 * z + 0.12e2 * c * delta1 * delta1 * mu2 * z - 0.12e2 * c * delta1 * delta1 * mu1 * z + 0.24e2 * mu1 * mu1 * delta1 * z * z * mu2 + 0.24e2 * mu1 * delta1 * delta1 * z * z * mu2 - 0.24e2 * c * mu1 * mu1 * z * z * mu2 + 0.24e2 * c * mu1 * mu1 * z * z * delta1 - 0.24e2 * c * delta1 * delta1 * z * z * mu2 + 0.24e2 * c * delta1 * delta1 * z * z * mu1 - 0.12e2 * mu1 * mu1 * delta2 * z * c + 0.12e2 * mu1 * mu1 * delta2 * z * delta1 - 0.24e2 * mu1 * mu1 * delta2 * z * z * delta1 - 0.12e2 * delta1 * delta1 * delta2 * z * c + 0.12e2 * delta1 * delta1 * delta2 * z * mu1 - 0.24e2 * delta1 * delta1 * delta2 * z * z * mu1 + 0.12e2 * c * c * delta2 * mu1 * z + 0.24e2 * c * delta2 * mu1 * mu1 * z * z + 0.12e2 * c * c * delta2 * delta1 * z + 0.24e2 * c * delta2 * delta1 * delta1 * z * z - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * delta1 - 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * mu2 * delta1 - 0.12e2 * delta1 * delta1 * pow(z, 0.3e1) * mu2 * mu1 + 0.12e2 * delta2 * pow(z, 0.3e1) * mu1 * mu1 * delta1 + 0.12e2 * delta2 * pow(z, 0.3e1) * delta1 * delta1 * mu1 + 0.12e2 * c * mu1 * mu1 * pow(z, 0.3e1) * mu2 - 0.12e2 * c * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.12e2 * c * delta1 * delta1 * pow(z, 0.3e1) * mu2 - 0.12e2 * c * delta1 * delta1 * pow(z, 0.3e1) * mu1 - 0.16e2 * log(z) * pow(mu1, 0.3e1) * c * z - 0.24e2 * log(z) * c * c * mu1 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * mu1 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta1 * delta1 * pow(z, 0.3e1) - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c - 0.4e1 * pow(mu1, 0.3e1) * mu2 * z + 0.8e1 * pow(mu1, 0.3e1) * delta1 * z - 0.4e1 * pow(delta1, 0.3e1) * mu2 * z + 0.8e1 * pow(delta1, 0.3e1) * mu1 * z + 0.12e2 * mu1 * mu1 * delta1 * delta1 * z - 0.4e1 * c * pow(mu1, 0.3e1) * z - 0.4e1 * c * pow(delta1, 0.3e1) * z + 0.8e1 * pow(mu1, 0.3e1) * z * z * mu2 - 0.16e2 * pow(mu1, 0.3e1) * z * z * delta1 + 0.8e1 * pow(delta1, 0.3e1) * z * z * mu2 - 0.16e2 * pow(delta1, 0.3e1) * z * z * mu1 - 0.24e2 * mu1 * mu1 * delta1 * delta1 * z * z + 0.8e1 * c * pow(mu1, 0.3e1) * z * z + 0.8e1 * c * pow(delta1, 0.3e1) * z * z + 0.4e1 * pow(mu1, 0.3e1) * delta2 * z - 0.8e1 * pow(mu1, 0.3e1) * delta2 * z * z + 0.4e1 * pow(delta1, 0.3e1) * delta2 * z - 0.8e1 * pow(delta1, 0.3e1) * delta2 * z * z + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * c * c * delta2 * delta1 + 0.8e1 * pow(mu1, 0.3e1) * pow(z, 0.3e1) * delta1 + 0.8e1 * pow(delta1, 0.3e1) * pow(z, 0.3e1) * mu1 + 0.12e2 * mu1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 + 0.4e1 * delta2 * pow(z, 0.3e1) * pow(mu1, 0.3e1) + 0.4e1 * delta2 * pow(z, 0.3e1) * pow(delta1, 0.3e1) + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 - 0.4e1 * c * pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * c * pow(delta1, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * mu1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.12e2 * pow(c, 0.3e1) * mu2 * z + 0.2e1 * pow(mu1, 0.4e1) * z + 0.2e1 * pow(delta1, 0.4e1) * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.4e1 * pow(mu1, 0.4e1) * z * z - 0.4e1 * pow(delta1, 0.4e1) * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.2e1 * pow(mu1, 0.4e1) * pow(z, 0.3e1) + 0.2e1 * pow(delta1, 0.4e1) * pow(z, 0.3e1) + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.2e1 * z * pow(c, 0.4e1) - pow(c, 0.4e1) + 0.36e2 * c * c * delta2 * mu2 - 0.12e2 * delta2 * mu2 * mu2 * mu1 - 0.12e2 * delta2 * mu2 * mu2 * delta1 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.48e2 * delta2 * mu2 * mu2 * c + 0.24e2 * c * delta2 * mu1 * mu2 + 0.24e2 * c * delta2 * delta1 * mu2 + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 - 0.5e1 * pow(mu2, 0.4e1) - 0.16e2 * z * c * pow(mu2, 0.3e1) - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z * z - 0.2e1 * log(z) * pow(mu1, 0.4e1) - 0.2e1 * log(z) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * c - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.8e1 * pow(delta2, 0.3e1) * z * z * c + 0.8e1 * pow(delta2, 0.3e1) * z * z * mu1 + 0.8e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu2 - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu1 - 0.12e2 * delta2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.24e2 * c * c * delta2 * delta2 * z + 0.8e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.8e1 * z * z * c * pow(mu2, 0.3e1)) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
			
		case 5:
			return (-0.6e1 * c * mu2 * z + 0.6e1 * c * delta2 * z + 0.6e1 * mu1 * mu2 * z - 0.6e1 * mu1 * delta2 * z + 0.6e1 * mu1 * c * z + 0.2e1 * delta1 * mu2 * z - 0.2e1 * delta1 * delta2 * z + 0.2e1 * delta1 * c * z - 0.6e1 * mu1 * mu1 * z - delta1 * delta1 * z - 0.4e1 * mu1 * z * delta1 + 0.6e1 * log(z) * c * c - 0.12e2 * log(z) * mu1 * c - 0.4e1 * delta1 * log(z) * c + 0.6e1 * log(z) * mu1 * mu1 + 0.4e1 * delta1 * log(z) * mu1 + delta1 * delta1 * log(z)) * pow(delta2, -0.2e1) / 0.12e2;
			
		case 6:
			return -(0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z * z + 0.18e2 * c * c + 0.12e2 * c * mu1 + 0.12e2 * c * delta1 - 0.24e2 * c * c * z + 0.48e2 * c * mu2 * z - 0.16e2 * c * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * z + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * z * z - 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * z - 0.48e2 * c * mu2 + 0.16e2 * c * delta2 - 0.12e2 * mu1 * mu2 + 0.4e1 * mu1 * delta2 - 0.12e2 * delta1 * mu2 + 0.4e1 * delta1 * delta2 + 0.12e2 * mu2 * mu2 * pow(z, 0.3e1) + 0.24e2 * mu1 * z * z * mu2 + 0.24e2 * delta1 * z * z * mu2 - 0.8e1 * delta2 * z * z * mu1 + 0.16e2 * delta2 * z * z * mu2 - 0.8e1 * delta2 * z * z * delta1 - 0.12e2 * mu1 * pow(z, 0.3e1) * mu2 - 0.12e2 * mu2 * pow(z, 0.3e1) * delta1 + 0.12e2 * log(fabs(-0.1e1 + z)) * c * c + 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.6e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.12e2 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z + 0.5e1 * delta2 * delta2 - 0.8e1 * c * delta2 * z * z - 0.24e2 * mu1 * c * z * z - 0.24e2 * delta1 * c * z * z + 0.30e2 * mu2 * mu2 - 0.4e1 * delta2 * delta2 * z * z - 0.24e2 * mu2 * mu2 * z * z + 0.16e2 * delta2 * mu2 * z + 0.4e1 * delta2 * pow(z, 0.3e1) * mu1 - 0.8e1 * delta2 * pow(z, 0.3e1) * mu2 + 0.4e1 * delta2 * pow(z, 0.3e1) * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 + 0.24e2 * mu2 * z * z * c + 0.12e2 * mu1 * pow(z, 0.3e1) * c + 0.12e2 * delta1 * pow(z, 0.3e1) * c - 0.4e1 * delta2 * delta2 * z - 0.24e2 * mu2 * mu2 * z - 0.20e2 * delta2 * mu2 - 0.12e2 * c * mu2 * pow(z, 0.3e1) - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * z - 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * z * z + 0.48e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z - 0.24e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 * z * z - 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * c * z * z - 0.32e2 * delta2 * log(fabs(-0.1e1 + z)) * c * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * z + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 * z * z + 0.4e1 * delta2 * pow(z, 0.3e1) * c + 0.8e1 * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c + 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 + 0.16e2 * delta2 * log(fabs(-0.1e1 + z)) * c - 0.24e2 * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.6e1 * delta2 * delta2 * log(fabs(-0.1e1 + z)) * z * z + 0.2e1 * delta2 * delta2 * pow(z, 0.3e1)) * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
			
		case 7:
			return -(-0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.4e1) * z * z - 0.4e1 * pow(c, 0.3e1) * pow(z, 0.3e1) * mu2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.16e2 * delta2 * z * z * pow(mu2, 0.3e1) + 0.8e1 * delta2 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.48e2 * c * c * delta2 * mu2 * z + 0.24e2 * c * mu1 * z * z * mu2 * mu2 + 0.24e2 * mu1 * mu2 * mu2 * z * z * delta2 + 0.24e2 * c * delta1 * z * z * mu2 * mu2 + 0.24e2 * c * c * mu2 * mu2 * z + 0.48e2 * c * mu2 * mu2 * z * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.48e2 * c * delta1 * delta2 * z * z * mu2 - 0.48e2 * c * mu1 * delta2 * z * z * mu2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.4e1 * z * pow(mu2, 0.4e1) - 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * pow(c, 0.4e1) * z * z + 0.2e1 * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.16e2 * delta2 * pow(mu2, 0.3e1) * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.8e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z - 0.16e2 * c * pow(mu2, 0.3e1) * z + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * delta2 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * delta1 * mu2 * mu2 * z * z * delta2 + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) + 0.12e2 * c * c * delta1 * mu2 * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * delta1 - 0.24e2 * c * c * mu1 * mu2 * z * z - 0.24e2 * c * c * delta1 * mu2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * c * c * delta2 * mu1 * z * z + 0.24e2 * c * c * delta2 * delta1 * z * z - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * c * c * delta2 * delta1 + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.16e2 * pow(c, 0.3e1) * delta2 * z - 0.16e2 * pow(c, 0.3e1) * mu2 * z + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * pow(c, 0.3e1) * delta1 * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.4e1 * z * pow(c, 0.4e1) - pow(c, 0.4e1) + 0.36e2 * c * c * delta2 * mu2 - 0.12e2 * delta2 * mu2 * mu2 * mu1 - 0.12e2 * delta2 * mu2 * mu2 * delta1 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.48e2 * delta2 * mu2 * mu2 * c + 0.24e2 * c * delta2 * mu1 * mu2 + 0.24e2 * c * delta2 * delta1 * mu2 + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 - 0.5e1 * pow(mu2, 0.4e1) - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1)) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
			
		case 8:
			return  -(-0.2e1 * pow(mu2, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.4e1 * pow(delta2, 0.4e1) * z * z - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) + 0.4e1 * pow(mu2, 0.4e1) * z * z - 0.18e2 * c * c * delta2 * delta2 - 0.5e1 * pow(delta2, 0.4e1) - 0.4e1 * pow(c, 0.3e1) * pow(z, 0.3e1) * mu2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.16e2 * pow(delta2, 0.3e1) * z * z * mu2 - 0.16e2 * delta2 * z * z * pow(mu2, 0.3e1) - 0.12e2 * delta2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.8e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu2 + 0.8e1 * delta2 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.24e2 * delta2 * delta2 * z * z * mu2 * mu2 - 0.48e2 * c * c * delta2 * mu2 * z + 0.24e2 * c * mu1 * z * z * mu2 * mu2 + 0.24e2 * mu1 * mu2 * mu2 * z * z * delta2 - 0.24e2 * mu1 * mu2 * z * z * delta2 * delta2 + 0.24e2 * c * delta1 * z * z * mu2 * mu2 + 0.4e1 * pow(delta2, 0.4e1) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.24e2 * c * delta1 * z * z * delta2 * delta2 + 0.12e2 * delta2 * delta2 * pow(z, 0.3e1) * mu2 * mu1 + 0.12e2 * delta1 * delta2 * delta2 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta2 * delta2 * pow(z, 0.3e1) * mu2 * c + 0.24e2 * c * mu1 * z * z * delta2 * delta2 - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * c * c * delta2 * delta2 * z + 0.24e2 * c * c * mu2 * mu2 * z - 0.24e2 * c * mu2 * z * z * delta2 * delta2 + 0.48e2 * c * mu2 * mu2 * z * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.48e2 * delta2 * delta2 * mu2 * c - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 - 0.16e2 * pow(delta2, 0.3e1) * c + 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.30e2 * delta2 * delta2 * mu2 * mu2 - 0.4e1 * delta1 * pow(delta2, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.12e2 * delta2 * delta2 * mu2 * mu1 - 0.48e2 * c * mu2 * z * delta2 * delta2 + 0.24e2 * c * mu2 * mu2 * z * z * delta2 - 0.48e2 * c * delta1 * delta2 * z * z * mu2 - 0.48e2 * c * mu1 * delta2 * z * z * mu2 + 0.8e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z + 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta1 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z + 0.24e2 * delta2 * delta2 * mu2 * mu2 * z + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 + 0.4e1 * z * pow(mu2, 0.4e1) - 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * c * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z - 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z + 0.8e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.4e1 * pow(c, 0.4e1) * z * z + 0.2e1 * pow(c, 0.4e1) * pow(z, 0.3e1) - 0.16e2 * delta2 * pow(mu2, 0.3e1) * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z - 0.8e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.8e1 * c * pow(mu2, 0.3e1) * z * z + 0.16e2 * c * pow(delta2, 0.3e1) * z + 0.8e1 * c * pow(delta2, 0.3e1) * z * z - 0.16e2 * c * pow(mu2, 0.3e1) * z + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * delta2 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * delta1 * mu2 * mu2 * z * z * delta2 - 0.24e2 * delta1 * mu2 * z * z * delta2 * delta2 + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) + 0.12e2 * c * c * delta1 * mu2 * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * delta1 - 0.24e2 * c * c * mu1 * mu2 * z * z - 0.24e2 * c * c * delta1 * mu2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * c * c * delta2 * mu1 * z * z + 0.24e2 * c * c * delta2 * delta1 * z * z - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * c * c * delta2 * delta1 + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.16e2 * pow(c, 0.3e1) * delta2 * z - 0.16e2 * pow(c, 0.3e1) * mu2 * z + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * pow(c, 0.3e1) * delta1 * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.4e1 * z * pow(c, 0.4e1) - pow(c, 0.4e1) + 0.36e2 * c * c * delta2 * mu2 - 0.12e2 * delta2 * mu2 * mu2 * mu1 - 0.12e2 * delta2 * mu2 * mu2 * delta1 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.48e2 * delta2 * mu2 * mu2 * c + 0.24e2 * c * delta2 * mu1 * mu2 + 0.24e2 * c * delta2 * delta1 * mu2 + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 - 0.5e1 * pow(mu2, 0.4e1) - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * c - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(delta2, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1)) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 9:
			return 	-(log(z) * pow(c, 0.4e1) + log(z) * pow(mu1, 0.4e1) + 0.6e1 * log(z) * c * c * mu1 * mu1 - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 - 0.12e2 * log(z) * mu1 * mu1 * c * delta1 + 0.12e2 * log(z) * c * c * mu1 * delta1 - 0.12e2 * c * mu1 * delta1 * mu2 * z + 0.12e2 * c * delta2 * mu1 * z * delta1 + 0.6e1 * mu1 * mu1 * delta1 * mu2 * z + 0.6e1 * c * c * mu1 * mu2 * z + 0.6e1 * c * c * delta1 * mu2 * z - 0.6e1 * c * mu1 * mu1 * mu2 * z + 0.6e1 * c * mu1 * mu1 * delta1 * z + 0.6e1 * mu1 * mu1 * delta2 * z * c - 0.6e1 * mu1 * mu1 * delta2 * z * delta1 - 0.6e1 * c * c * delta2 * mu1 * z - 0.6e1 * c * c * delta2 * delta1 * z + 0.2e1 * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * pow(mu1, 0.3e1) * delta1 * z + 0.2e1 * c * pow(mu1, 0.3e1) * z - 0.2e1 * pow(mu1, 0.3e1) * delta2 * z - 0.2e1 * pow(c, 0.3e1) * mu1 * z - 0.2e1 * pow(c, 0.3e1) * delta1 * z + 0.2e1 * pow(c, 0.3e1) * delta2 * z - 0.2e1 * pow(c, 0.3e1) * mu2 * z - pow(mu1, 0.4e1) * z + z * pow(c, 0.4e1)) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / 0.12e2;

		case 10:
			return -(-0.12e2 * log(z) * mu1 * c * delta1 * delta1 + log(z) * pow(c, 0.4e1) + log(z) * pow(mu1, 0.4e1) + 0.6e1 * log(z) * c * c * mu1 * mu1 - 0.4e1 * log(z) * pow(mu1, 0.3e1) * c - 0.4e1 * log(z) * pow(c, 0.3e1) * mu1 - 0.4e1 * log(z) * pow(c, 0.3e1) * delta1 + 0.4e1 * log(z) * pow(mu1, 0.3e1) * delta1 + pow(delta1, 0.4e1) * log(z) + 0.6e1 * log(z) * mu1 * mu1 * delta1 * delta1 + 0.6e1 * log(z) * c * c * delta1 * delta1 - 0.4e1 * pow(delta1, 0.3e1) * log(z) * c + 0.4e1 * pow(delta1, 0.3e1) * log(z) * mu1 - 0.12e2 * log(z) * mu1 * mu1 * c * delta1 + 0.12e2 * log(z) * c * c * mu1 * delta1 - 0.12e2 * c * mu1 * delta1 * mu2 * z + 0.12e2 * c * delta2 * mu1 * z * delta1 + 0.6e1 * mu1 * mu1 * delta1 * mu2 * z + 0.6e1 * delta1 * delta1 * mu1 * mu2 * z + 0.6e1 * c * c * mu1 * mu2 * z + 0.6e1 * c * c * delta1 * mu2 * z - 0.6e1 * c * mu1 * mu1 * mu2 * z + 0.6e1 * c * mu1 * mu1 * delta1 * z - 0.6e1 * c * delta1 * delta1 * mu2 * z + 0.6e1 * c * delta1 * delta1 * mu1 * z + 0.6e1 * mu1 * mu1 * delta2 * z * c - 0.6e1 * mu1 * mu1 * delta2 * z * delta1 + 0.6e1 * delta1 * delta1 * delta2 * z * c - 0.6e1 * delta1 * delta1 * delta2 * z * mu1 - 0.6e1 * c * c * delta2 * mu1 * z - 0.6e1 * c * c * delta2 * delta1 * z + 0.2e1 * pow(mu1, 0.3e1) * mu2 * z - 0.4e1 * pow(mu1, 0.3e1) * delta1 * z + 0.2e1 * pow(delta1, 0.3e1) * mu2 * z - 0.4e1 * pow(delta1, 0.3e1) * mu1 * z - 0.6e1 * mu1 * mu1 * delta1 * delta1 * z + 0.2e1 * c * pow(mu1, 0.3e1) * z + 0.2e1 * c * pow(delta1, 0.3e1) * z - 0.2e1 * pow(mu1, 0.3e1) * delta2 * z - 0.2e1 * pow(delta1, 0.3e1) * delta2 * z - 0.2e1 * pow(c, 0.3e1) * mu1 * z - 0.2e1 * pow(c, 0.3e1) * delta1 * z + 0.2e1 * pow(c, 0.3e1) * delta2 * z - 0.2e1 * pow(c, 0.3e1) * mu2 * z - pow(mu1, 0.4e1) * z - pow(delta1, 0.4e1) * z + z * pow(c, 0.4e1)) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / 0.12e2;
	
		case 11:
			return -(0.24e2 * c * mu1 * delta2 * delta2 * z * z - 0.24e2 * c * mu2 * z * z * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.4e1 * pow(delta2, 0.4e1) * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z - 0.18e2 * c * c * delta2 * delta2 - 0.5e1 * pow(delta2, 0.4e1) - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.16e2 * pow(delta2, 0.3e1) * z * z * mu2 - 0.16e2 * delta2 * z * z * pow(mu2, 0.3e1) + 0.24e2 * delta2 * delta2 * z * z * mu2 * mu2 - 0.48e2 * c * c * delta2 * mu2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.24e2 * c * mu1 * z * z * mu2 * mu2 - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z * z + 0.24e2 * mu1 * mu2 * mu2 * z * z * delta2 - 0.24e2 * mu1 * mu2 * z * z * delta2 * delta2 + 0.24e2 * c * delta1 * z * z * mu2 * mu2 + 0.4e1 * pow(delta2, 0.4e1) * z + 0.12e2 * delta2 * delta2 * pow(z, 0.3e1) * mu2 * mu1 + 0.12e2 * delta1 * delta2 * delta2 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta2 * delta2 * pow(z, 0.3e1) * mu2 * c - 0.12e2 * c * delta2 * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * delta2 * delta2 * delta1 * pow(z, 0.3e1) + 0.24e2 * c * c * mu2 * mu2 * z + 0.48e2 * c * mu2 * mu2 * z * delta2 + 0.12e2 * delta1 * delta2 * delta2 * mu2 + 0.48e2 * delta2 * delta2 * mu2 * c - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 - 0.16e2 * pow(delta2, 0.3e1) * c + 0.20e2 * pow(delta2, 0.3e1) * mu2 - 0.30e2 * delta2 * delta2 * mu2 * mu2 - 0.4e1 * delta1 * pow(delta2, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * mu1 + 0.12e2 * delta2 * delta2 * mu2 * mu1 - 0.48e2 * c * mu2 * z * delta2 * delta2 - 0.48e2 * c * delta1 * delta2 * z * z * mu2 - 0.48e2 * c * mu1 * delta2 * z * z * mu2 - 0.2e1 * pow(delta2, 0.4e1) * pow(z, 0.3e1) - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.8e1 * delta1 * pow(delta2, 0.3e1) * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu1 * delta2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta2 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu1 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.72e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 * z * z - 0.16e2 * pow(delta2, 0.3e1) * mu2 * z + 0.24e2 * delta2 * delta2 * mu2 * mu2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 * z * z - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 * z * z + 0.32e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c * z * z - 0.48e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * delta1 * delta2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * delta1 * delta2 * delta2 + 0.4e1 * z * pow(mu2, 0.4e1) - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * c * delta1 * delta2 * delta2 * z * z - 0.2e1 * pow(z, 0.3e1) * pow(mu2, 0.4e1) + 0.2e1 * pow(z, 0.3e1) * pow(c, 0.4e1) + 0.8e1 * c * pow(delta2, 0.3e1) * z * z + 0.8e1 * pow(delta2, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z + 0.8e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.4e1 * pow(c, 0.4e1) * z * z - 0.16e2 * delta2 * pow(mu2, 0.3e1) * z - 0.8e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.24e2 * c * mu2 * mu2 * z * z * delta2 + 0.8e1 * delta2 * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) + 0.16e2 * c * pow(delta2, 0.3e1) * z - 0.16e2 * c * pow(mu2, 0.3e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z - 0.6e1 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z * z + 0.12e2 * pow(delta2, 0.4e1) * log(fabs(-0.1e1 + z)) * z + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * delta2 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * delta1 * mu2 * mu2 * z * z * delta2 - 0.24e2 * delta1 * mu2 * z * z * delta2 * delta2 - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) + 0.12e2 * c * c * delta1 * mu2 * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * delta1 - 0.24e2 * c * c * mu1 * mu2 * z * z - 0.24e2 * c * c * delta1 * mu2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * c * c * delta2 * mu1 * z * z + 0.24e2 * c * c * delta2 * delta1 * z * z - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * c * c * delta2 * delta1 + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.16e2 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.16e2 * pow(c, 0.3e1) * mu2 * z + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * pow(c, 0.3e1) * delta1 * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.4e1 * z * pow(c, 0.4e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * delta2 * delta2 - 0.36e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta2 * delta2 - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * delta1 + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z - pow(c, 0.4e1) + 0.36e2 * c * c * delta2 * mu2 - 0.12e2 * delta2 * mu2 * mu2 * mu1 - 0.12e2 * delta2 * mu2 * mu2 * delta1 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.48e2 * delta2 * mu2 * mu2 * c - 0.8e1 * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * c * delta2 * mu1 * mu2 + 0.24e2 * c * delta2 * delta1 * mu2 + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 - 0.5e1 * pow(mu2, 0.4e1) + 0.24e2 * c * c * delta2 * delta2 * z - 0.12e2 * delta2 * delta2 * mu2 * mu2 * pow(z, 0.3e1) + 0.24e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.16e2 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * c + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * pow(delta2, 0.3e1) * log(fabs(-0.1e1 + z)) * mu1 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * c - 0.4e1 * delta1 * pow(z, 0.3e1) * pow(delta2, 0.3e1) - 0.4e1 * pow(delta2, 0.3e1) * pow(z, 0.3e1) * mu1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 12:
			return -(0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z + 0.96e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 * z * z - 0.48e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 * z * z - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 * z * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 + 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 * z * z + 0.4e1 * pow(mu2, 0.4e1) * z * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.16e2 * delta2 * z * z * pow(mu2, 0.3e1) - 0.48e2 * c * c * delta2 * mu2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z * z - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * delta2 * z + 0.24e2 * c * mu1 * z * z * mu2 * mu2 - 0.96e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z + 0.48e2 * log(fabs(-0.1e1 + z)) * c * mu2 * delta1 * delta2 * z * z + 0.24e2 * mu1 * mu2 * mu2 * z * z * delta2 + 0.24e2 * c * delta1 * z * z * mu2 * mu2 + 0.24e2 * c * c * mu2 * mu2 * z + 0.48e2 * c * mu2 * mu2 * z * delta2 - 0.48e2 * c * delta1 * delta2 * z * z * mu2 - 0.48e2 * c * mu1 * delta2 * z * z * mu2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta1 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta1 - 0.48e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * c * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu1 * delta2 + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * delta1 * delta2 - 0.24e2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * z * pow(mu2, 0.4e1) - 0.48e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 * z * z + 0.16e2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 * z * z + 0.24e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.16e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1 * z * z - 0.16e2 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) * z * z - 0.32e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) * z * z - 0.2e1 * pow(z, 0.3e1) * pow(mu2, 0.4e1) + 0.2e1 * pow(z, 0.3e1) * pow(c, 0.4e1) - 0.8e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * pow(c, 0.4e1) * z * z - 0.16e2 * delta2 * pow(mu2, 0.3e1) * z - 0.8e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.24e2 * c * mu2 * mu2 * z * z * delta2 + 0.8e1 * delta2 * pow(mu2, 0.3e1) * pow(z, 0.3e1) - 0.4e1 * pow(c, 0.3e1) * delta1 * pow(z, 0.3e1) + 0.4e1 * pow(c, 0.3e1) * delta2 * pow(z, 0.3e1) - 0.16e2 * c * pow(mu2, 0.3e1) * z - 0.6e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z * z + 0.12e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) * z + 0.24e2 * c * delta2 * mu1 * pow(z, 0.3e1) * mu2 + 0.24e2 * c * delta2 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * delta1 * mu2 * mu2 * z * z * delta2 - 0.4e1 * pow(c, 0.3e1) * mu1 * pow(z, 0.3e1) + 0.12e2 * c * c * mu1 * mu2 * pow(z, 0.3e1) + 0.12e2 * c * c * delta1 * mu2 * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * c * delta2 * delta1 * pow(z, 0.3e1) - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * mu1 - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * delta1 - 0.24e2 * c * c * mu1 * mu2 * z * z - 0.24e2 * c * c * delta1 * mu2 * z * z - 0.12e2 * c * mu2 * mu2 * mu1 * pow(z, 0.3e1) - 0.12e2 * c * mu2 * mu2 * delta1 * pow(z, 0.3e1) + 0.24e2 * c * c * delta2 * mu1 * z * z + 0.24e2 * c * c * delta2 * delta1 * z * z - 0.12e2 * delta2 * pow(z, 0.3e1) * mu2 * mu2 * c + 0.4e1 * mu1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.12e2 * c * c * delta2 * mu1 - 0.12e2 * c * c * delta2 * delta1 + 0.12e2 * c * c * mu2 * mu1 + 0.12e2 * c * c * mu2 * delta1 + 0.4e1 * c * pow(mu2, 0.3e1) * pow(z, 0.3e1) + 0.16e2 * pow(c, 0.3e1) * delta2 * z - 0.4e1 * pow(c, 0.3e1) * mu2 * pow(z, 0.3e1) - 0.16e2 * pow(c, 0.3e1) * mu2 * z + 0.8e1 * pow(c, 0.3e1) * mu1 * z * z + 0.8e1 * pow(c, 0.3e1) * delta1 * z * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - 0.4e1 * pow(c, 0.3e1) * mu1 - 0.4e1 * pow(c, 0.3e1) * delta1 - 0.8e1 * pow(c, 0.3e1) * delta2 + 0.8e1 * pow(c, 0.3e1) * mu2 + 0.4e1 * z * pow(c, 0.4e1) + 0.2e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z * z - 0.4e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) * z - pow(c, 0.4e1) + 0.36e2 * c * c * delta2 * mu2 - 0.12e2 * delta2 * mu2 * mu2 * mu1 - 0.12e2 * delta2 * mu2 * mu2 * delta1 - 0.12e2 * c * mu2 * mu2 * mu1 - 0.12e2 * c * mu2 * mu2 * delta1 - 0.48e2 * delta2 * mu2 * mu2 * c - 0.8e1 * c * pow(mu2, 0.3e1) * z * z + 0.24e2 * c * delta2 * mu1 * mu2 + 0.24e2 * c * delta2 * delta1 * mu2 + 0.4e1 * mu1 * pow(mu2, 0.3e1) + 0.4e1 * delta1 * pow(mu2, 0.3e1) + 0.20e2 * delta2 * pow(mu2, 0.3e1) + 0.16e2 * c * pow(mu2, 0.3e1) - 0.18e2 * c * c * mu2 * mu2 - 0.5e1 * pow(mu2, 0.4e1) - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.16e2 * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.8e1 * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.12e2 * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.24e2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta2 - 0.8e1 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * delta1 + 0.8e1 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * delta1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		default:
			cout<<"This basic piece doesn't exist"; 
	}
}


