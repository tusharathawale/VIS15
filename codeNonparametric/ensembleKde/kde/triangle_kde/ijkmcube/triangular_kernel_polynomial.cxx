#include "triangular_kernel_polynomial.h"
#include <cfloat>
#include "math.h"


// Issues faced : If z value is 0 or 1, the 3 quantities, i.e., pdf, expected and second moment evaluate to NAN because of division by 0.
// Therefore, when z is 0 or 1, z is fluctuated by small amount 1.0e-5. 

// Expressions for expected and second moment contain term log(fabs(-0.1e1 + z)) which gives NAN,  since -0.1e1 + z is a negative quantity (as z is in the range [0,1]) and log of negative numeber in C is
// NAN. however it can be derived log(-z) = log(z) + i*pi. These imaginary parts cancel out. Thus, every term log(fabs(-0.1e1 + z)) is replaced with log(fabs(-0.1e1 + z)).

// there are total 12 basic pieces so piece number will vary from  1 to 12 (These basic pieces vary depending upon the parallelogram)

// very sensitive. can make computations unstable so if some case fails try for 1e-2. For climate ensembel tweak is 1e-1. For tangle dataset tweak is e-2.
double tweak = 1.0e-2;
double epsilon = 1.0e-4;


// Check later for DBL_EPSILON working/not

double triangular_kernel_polynomial :: PAED_integrate_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:		
				return (pow(c, 0.3e1) - pow(mu1, 0.3e1) - pow(delta1, 0.3e1) - 0.12e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.6e1 * c * mu2 * delta1 * z + 0.6e1 * c * delta2 * mu1 * z + 0.6e1 * c * delta2 * delta1 * z - 0.6e1 * mu1 * mu2 * delta1 * z - 0.6e1 * mu1 * delta2 * delta1 * z - 0.3e1 * c * c * mu1 - 0.3e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * mu1 * delta1 - 0.3e1 * delta1 * delta1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.3e1 * pow(delta1, 0.3e1) * z + 0.6e1 * c * mu1 * delta1 + 0.9e1 * mu1 * mu1 * delta1 * z + 0.9e1 * mu1 * delta1 * delta1 * z + 0.3e1 * c * c * mu1 * z + 0.3e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.6e1 * c * delta1 * delta1 * z - 0.3e1 * c * c * mu2 * z - 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.3e1 * mu1 * mu1 * delta2 * z - 0.3e1 * delta1 * delta1 * mu2 * z - 0.3e1 * delta1 * delta1 * delta2 * z - pow(z, 0.3e1) * pow(delta2, 0.3e1) - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.3e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c - 0.3e1 * delta1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * z * z * delta2 * delta2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 + 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * mu1 * z * z * delta2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c + 0.6e1 * delta1 * delta1 * z * z * mu2 - 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * mu2 + 0.6e1 * delta1 * delta1 * z * z * delta2 - 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 + 0.3e1 * delta1 * delta1 * z * z * c + 0.6e1 * mu2 * z * z * delta2 * c - 0.6e1 * mu1 * z * z * mu2 * delta2 - 0.6e1 * delta1 * z * z * mu2 * delta2 + 0.6e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 + 0.6e1 * delta1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * mu1 * z * z * delta2 - 0.6e1 * c * delta1 * z * z * mu2 - 0.6e1 * c * delta1 * z * z * delta2 + 0.12e2 * mu1 * delta1 * z * z * mu2 - 0.6e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.12e2 * mu1 * delta1 * z * z * delta2 - 0.6e1 * mu1 * delta1 * pow(z, 0.3e1) * delta2 + 0.6e1 * mu1 * delta1 * z * z * c - 0.9e1 * mu1 * mu1 * z * z * delta1 - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 - 0.3e1 * pow(mu1, 0.3e1) * z * z - 0.3e1 * pow(delta1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + pow(delta1, 0.3e1) * pow(z, 0.3e1)) * (c - mu1 - delta1 - mu2 * z + mu1 * z - delta2 * z + delta1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
				
		case 2:
		
				return  -(pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.16e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.8e1 * c * mu2 * delta1 * z + 0.6e1 * c * delta2 * mu1 * z + 0.8e1 * c * delta2 * delta1 * z - 0.8e1 * mu1 * mu2 * delta1 * z - 0.8e1 * mu1 * delta2 * delta1 * z - 0.3e1 * c * c * mu1 - 0.4e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.4e1 * mu1 * mu1 * delta1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.8e1 * c * mu1 * delta1 + 0.12e2 * mu1 * mu1 * delta1 * z + 0.3e1 * c * c * mu1 * z + 0.4e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * c * c * mu2 * z - 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.3e1 * mu1 * mu1 * delta2 * z - pow(z, 0.3e1) * pow(delta2, 0.3e1) - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.3e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c - 0.4e1 * delta1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * z * z * delta2 * delta2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 + 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * mu1 * z * z * delta2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c + 0.6e1 * mu2 * z * z * delta2 * c - 0.6e1 * mu1 * z * z * mu2 * delta2 - 0.8e1 * delta1 * z * z * mu2 * delta2 + 0.6e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 + 0.8e1 * delta1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * mu1 * z * z * delta2 - 0.8e1 * c * delta1 * z * z * mu2 - 0.8e1 * c * delta1 * z * z * delta2 + 0.16e2 * mu1 * delta1 * z * z * mu2 - 0.8e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.16e2 * mu1 * delta1 * z * z * delta2 - 0.8e1 * mu1 * delta1 * pow(z, 0.3e1) * delta2 + 0.8e1 * mu1 * delta1 * z * z * c - 0.12e2 * mu1 * mu1 * z * z * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1)) * (c - mu2 * z - mu1 + mu1 * z - delta2 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 3:
			
				return (pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.16e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.8e1 * c * mu2 * delta1 * z + 0.8e1 * c * delta2 * mu1 * z + 0.12e2 * c * delta2 * delta1 * z - 0.8e1 * mu1 * mu2 * delta1 * z - 0.12e2 * mu1 * delta2 * delta1 * z - 0.3e1 * c * c * mu1 - 0.4e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.4e1 * mu1 * mu1 * delta1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.8e1 * c * mu1 * delta1 + 0.12e2 * mu1 * mu1 * delta1 * z + 0.3e1 * c * c * mu1 * z + 0.4e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * c * c * mu2 * z - 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.4e1 * mu1 * mu1 * delta2 * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * mu1 * z * z * delta2 - 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c + 0.8e1 * mu2 * z * z * delta2 * c - 0.8e1 * mu1 * z * z * mu2 * delta2 - 0.12e2 * delta1 * z * z * mu2 * delta2 + 0.8e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 + 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * mu1 * z * z * delta2 - 0.8e1 * c * delta1 * z * z * mu2 - 0.12e2 * c * delta1 * z * z * delta2 + 0.16e2 * mu1 * delta1 * z * z * mu2 - 0.8e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.24e2 * mu1 * delta1 * z * z * delta2 - 0.12e2 * mu1 * delta1 * pow(z, 0.3e1) * delta2 + 0.8e1 * mu1 * delta1 * z * z * c - 0.12e2 * mu1 * mu1 * z * z * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1)) * (c - mu1 - mu2 * z + mu1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

		case 4:
			
				return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) - pow(delta1, 0.3e1) - 0.3e1 * pow(delta1, 0.3e1) * z * z + pow(delta1, 0.3e1) * pow(z, 0.3e1) - 0.12e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.6e1 * c * mu2 * delta1 * z + 0.8e1 * c * delta2 * mu1 * z + 0.8e1 * c * delta2 * delta1 * z - 0.6e1 * mu1 * mu2 * delta1 * z - 0.8e1 * mu1 * delta2 * delta1 * z - 0.3e1 * c * c * mu1 - 0.3e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.3e1 * mu1 * mu1 * delta1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.6e1 * c * mu1 * delta1 + 0.9e1 * mu1 * mu1 * delta1 * z + 0.3e1 * c * c * mu1 * z + 0.3e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * c * c * mu2 * z - 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.4e1 * mu1 * mu1 * delta2 * z + 0.6e1 * mu2 * z * z * delta1 * delta1 - 0.3e1 * mu2 * pow(z, 0.3e1) * delta1 * delta1 + 0.3e1 * c * z * z * delta1 * delta1 - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 + 0.8e1 * delta1 * delta1 * z * z * delta2 - 0.4e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.4e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * mu1 * z * z * delta2 - 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c + 0.8e1 * mu2 * z * z * delta2 * c - 0.8e1 * mu1 * z * z * mu2 * delta2 - 0.8e1 * delta1 * z * z * mu2 * delta2 + 0.8e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 + 0.8e1 * delta1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * mu1 * z * z * delta2 - 0.6e1 * c * delta1 * z * z * mu2 - 0.8e1 * c * delta1 * z * z * delta2 + 0.12e2 * mu1 * delta1 * z * z * mu2 - 0.6e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.16e2 * mu1 * delta1 * z * z * delta2 - 0.8e1 * mu1 * delta1 * pow(z, 0.3e1) * delta2 + 0.6e1 * mu1 * delta1 * z * z * c - 0.9e1 * mu1 * mu1 * z * z * delta1 + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.9e1 * mu1 * delta1 * delta1 * z - 0.6e1 * c * delta1 * delta1 * z - 0.3e1 * delta1 * delta1 * mu2 * z - 0.4e1 * delta1 * delta1 * delta2 * z + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * delta1 * delta1 + 0.3e1 * pow(delta1, 0.3e1) * z) * (-mu2 * z + c - mu1 + mu1 * z - delta1 + delta1 * z) * pow(z, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 5:
			
				return (0.6e1 * c * c - 0.12e2 * c * mu1 - 0.4e1 * c * delta1 + 0.6e1 * mu1 * mu1 + 0.4e1 * mu1 * delta1 + delta1 * delta1 - 0.12e2 * c * mu2 * z - 0.12e2 * c * delta2 * z + 0.12e2 * mu1 * c * z + 0.12e2 * mu1 * mu2 * z + 0.12e2 * mu1 * delta2 * z + 0.4e1 * delta1 * c * z + 0.4e1 * delta1 * mu2 * z + 0.4e1 * delta1 * delta2 * z - 0.8e1 * mu1 * z * delta1 - 0.12e2 * mu1 * z * z * mu2 - 0.12e2 * mu1 * z * z * delta2 + 0.4e1 * mu1 * z * z * delta1 - 0.4e1 * delta1 * z * z * mu2 - 0.4e1 * delta1 * z * z * delta2 - 0.12e2 * mu1 * mu1 * z - 0.2e1 * delta1 * delta1 * z + 0.6e1 * mu1 * mu1 * z * z + delta1 * delta1 * z * z + 0.6e1 * mu2 * mu2 * z * z + 0.6e1 * delta2 * delta2 * z * z + 0.12e2 * mu2 * z * z * delta2) * pow(z, -0.2e1) * pow(delta2, -0.2e1) / 0.24e2;


		case 6:
		
				return (0.6e1 * c * c - 0.12e2 * c * mu1 - 0.12e2 * c * delta1 + 0.6e1 * mu1 * mu1 + 0.12e2 * mu1 * delta1 + 0.6e1 * delta1 * delta1 - 0.12e2 * c * mu2 * z - 0.4e1 * c * delta2 * z + 0.12e2 * mu1 * c * z + 0.12e2 * mu1 * mu2 * z + 0.4e1 * mu1 * delta2 * z + 0.12e2 * delta1 * c * z + 0.12e2 * delta1 * mu2 * z + 0.4e1 * delta1 * delta2 * z - 0.24e2 * mu1 * z * delta1 - 0.12e2 * mu1 * z * z * mu2 - 0.4e1 * mu1 * z * z * delta2 + 0.12e2 * mu1 * z * z * delta1 - 0.12e2 * delta1 * z * z * mu2 - 0.4e1 * delta1 * z * z * delta2 - 0.12e2 * mu1 * mu1 * z - 0.12e2 * delta1 * delta1 * z + 0.6e1 * mu1 * mu1 * z * z + 0.6e1 * delta1 * delta1 * z * z + 0.6e1 * mu2 * mu2 * z * z + delta2 * delta2 * z * z + 0.4e1 * mu2 * z * z * delta2) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 7:
			
				return -(-mu2 * mu2 * z - 0.2e1 * mu2 * delta2 * z - 0.2e1 * c * mu2 * z - 0.4e1 * delta1 * mu2 + 0.4e1 * c * mu2 + 0.4e1 * mu1 * mu2 * z + 0.4e1 * delta1 * mu2 * z - 0.4e1 * mu1 * mu2 - delta2 * delta2 * z - 0.2e1 * c * delta2 * z - 0.4e1 * delta1 * delta2 + 0.4e1 * c * delta2 + 0.4e1 * mu1 * delta2 * z + 0.4e1 * delta1 * delta2 * z - 0.4e1 * mu1 * delta2 + 0.3e1 * c * c * z + 0.4e1 * c * delta1 - 0.4e1 * c * c - 0.4e1 * mu1 * c * z - 0.4e1 * delta1 * c * z + 0.4e1 * c * mu1) * pow(-mu2 - delta2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 8:
			
				return -(0.4e1 * mu1 * mu2 * z + 0.12e2 * mu1 * delta2 * z + 0.4e1 * delta1 * mu2 * z + 0.12e2 * delta1 * delta2 * z - 0.4e1 * mu1 * c * z - 0.4e1 * delta1 * c * z + 0.3e1 * c * c * z - mu2 * mu2 * z - 0.4e1 * mu2 * delta2 * z - 0.2e1 * c * mu2 * z - 0.8e1 * c * delta2 * z + 0.4e1 * c * mu2 - 0.4e1 * c * c + 0.4e1 * c * mu1 + 0.4e1 * c * delta1 - 0.4e1 * delta1 * mu2 + 0.12e2 * c * delta2 - 0.4e1 * mu1 * mu2 - 0.12e2 * mu1 * delta2 - 0.12e2 * delta1 * delta2) * pow(-mu2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 9:
		
				return -(c - mu1) * (0.2e1 * pow(c, 0.3e1) * z + pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.3e1 * c * c * mu1 - 0.4e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.4e1 * mu1 * mu1 * delta1 + 0.8e1 * c * mu1 * delta1 + 0.12e2 * c * mu2 * z * delta1 + 0.8e1 * c * mu2 * z * mu1 + 0.8e1 * c * delta2 * z * mu1 + 0.12e2 * c * delta2 * z * delta1 - 0.4e1 * z * z * c * mu1 * delta1 + 0.12e2 * z * z * mu1 * delta1 * delta2 + 0.12e2 * z * z * c * delta1 * delta2 + 0.4e1 * z * z * c * mu1 * delta2 + 0.4e1 * z * z * c * mu2 * mu1 + 0.12e2 * z * z * c * mu2 * delta1 - 0.24e2 * z * z * mu2 * delta2 * delta1 - 0.12e2 * z * z * mu2 * delta2 * mu1 + 0.12e2 * z * z * mu2 * delta2 * c + 0.12e2 * z * z * mu1 * mu2 * delta1 - 0.12e2 * delta1 * delta2 * delta2 * z * z - z * z * c * c * mu1 - 0.4e1 * z * z * c * c * delta1 - z * z * c * mu1 * mu1 - 0.4e1 * z * z * mu1 * mu1 * delta1 - 0.8e1 * z * z * c * c * mu2 + 0.6e1 * z * z * delta2 * delta2 * c - 0.6e1 * z * z * delta2 * delta2 * mu1 + 0.4e1 * z * z * mu1 * mu1 * mu2 - 0.8e1 * z * z * c * c * delta2 + 0.4e1 * z * z * mu1 * mu1 * delta2 + 0.6e1 * z * z * mu2 * mu2 * c - 0.6e1 * z * z * mu2 * mu2 * mu1 - 0.12e2 * z * z * mu2 * mu2 * delta1 + 0.8e1 * mu1 * mu1 * z * delta1 - 0.12e2 * mu1 * delta1 * mu2 * z - 0.12e2 * mu1 * delta1 * delta2 * z - 0.4e1 * mu1 * delta1 * c * z - 0.4e1 * mu1 * mu1 * mu2 * z - 0.4e1 * mu1 * mu1 * delta2 * z - 0.2e1 * mu1 * mu1 * c * z + 0.3e1 * z * z * pow(c, 0.3e1) - z * z * pow(mu1, 0.3e1) + 0.2e1 * pow(mu1, 0.3e1) * z - 0.2e1 * c * c * z * mu1 - 0.4e1 * c * c * z * delta1 - 0.4e1 * c * c * delta2 * z - 0.4e1 * c * c * mu2 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;


		case 10:
		
				return -pow(c - mu1 - delta1, 0.2e1) * (0.2e1 * c * c * z + c * c - 0.2e1 * c * mu1 - 0.2e1 * c * delta1 + mu1 * mu1 + 0.2e1 * mu1 * delta1 + delta1 * delta1 - 0.4e1 * c * mu2 * z - 0.4e1 * c * delta2 * z + 0.4e1 * mu1 * mu2 * z + 0.4e1 * mu1 * delta2 * z + 0.4e1 * delta1 * mu2 * z + 0.4e1 * delta1 * delta2 * z - 0.4e1 * mu1 * z * delta1 - 0.4e1 * mu1 * z * z * mu2 - 0.4e1 * mu1 * z * z * delta2 + 0.2e1 * mu1 * z * z * delta1 - 0.4e1 * delta1 * z * z * mu2 - 0.4e1 * delta1 * z * z * delta2 - 0.2e1 * mu1 * mu1 * z - 0.2e1 * delta1 * delta1 * z + mu1 * mu1 * z * z + delta1 * delta1 * z * z + 0.2e1 * mu1 * c * z * z + 0.2e1 * delta1 * c * z * z + 0.3e1 * c * c * z * z + 0.6e1 * mu2 * mu2 * z * z + 0.12e2 * mu2 * z * z * delta2 - 0.8e1 * z * z * mu2 * c - 0.8e1 * z * z * delta2 * c) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

				 
		case 11:
			
				return -(-0.12e2 * mu1 * mu2 * mu2 * z * delta2 - 0.12e2 * mu2 * mu2 * z * delta2 * delta1 + 0.12e2 * mu1 * mu2 * mu2 * z * z * delta2 + 0.12e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.12e2 * c * mu2 * mu2 * z * delta2 - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z + 0.6e1 * delta2 * delta2 * c * c + 0.6e1 * delta2 * delta2 * mu1 * mu1 - pow(mu2, 0.4e1) * z * z - 0.24e2 * c * mu2 * delta2 * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 + 0.12e2 * mu1 * delta2 * delta2 * delta1 + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - 0.12e2 * delta2 * delta2 * c * c * z + 0.6e1 * delta2 * delta2 * c * c * z * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * mu2 * mu2 * c * c * z + 0.6e1 * mu2 * mu2 * c * c * z * z - 0.12e2 * delta2 * delta2 * mu1 * mu1 * z + 0.6e1 * delta2 * delta2 * mu1 * mu1 * z * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.24e2 * c * delta2 * delta2 * mu1 * z - 0.12e2 * c * delta2 * delta2 * mu1 * z * z + 0.24e2 * c * delta2 * delta2 * delta1 * z - 0.12e2 * c * delta2 * delta2 * delta1 * z * z - 0.12e2 * c * c * delta1 * delta2 * z + 0.12e2 * c * c * delta1 * delta2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * c * mu2 * mu2 * delta1 * z - 0.12e2 * c * mu2 * mu2 * delta1 * z * z - 0.12e2 * c * c * mu2 * mu1 * z + 0.12e2 * c * c * mu2 * mu1 * z * z - 0.12e2 * c * c * mu2 * delta1 * z + 0.12e2 * c * c * mu2 * delta1 * z * z - 0.24e2 * mu2 * delta2 * c * c * z + 0.12e2 * mu2 * delta2 * c * c * z * z - 0.24e2 * mu1 * delta2 * delta2 * delta1 * z + 0.12e2 * mu1 * delta2 * delta2 * delta1 * z * z + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta2 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 + 0.24e2 * c * mu2 * delta2 * delta1 * z - 0.24e2 * c * mu2 * delta2 * delta1 * z * z + 0.24e2 * c * mu2 * delta2 * mu1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 12:
		
				return -(0.12e2 * z * delta2 * delta2 * delta1 * delta1 - 0.12e2 * mu1 * mu2 * mu2 * z * delta2 - 0.12e2 * mu2 * mu2 * z * delta2 * delta1 - 0.6e1 * mu2 * mu2 * z * z * delta2 * delta2 - 0.4e1 * pow(delta2, 0.3e1) * z * z * mu2 + 0.12e2 * mu1 * mu2 * mu2 * z * z * delta2 + 0.12e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.12e2 * c * mu2 * mu2 * z * delta2 - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z - 0.6e1 * delta2 * delta2 * c * c - 0.6e1 * delta2 * delta2 * mu1 * mu1 - pow(mu2, 0.4e1) * z * z - 0.24e2 * c * mu2 * delta2 * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.4e1 * delta1 * pow(delta2, 0.3e1) * z + 0.4e1 * delta1 * pow(delta2, 0.3e1) * z * z + 0.12e2 * c * mu2 * z * delta2 * delta2 - 0.12e2 * mu1 * mu2 * z * delta2 * delta2 + 0.12e2 * mu1 * mu2 * z * z * delta2 * delta2 - 0.12e2 * delta1 * mu2 * z * delta2 * delta2 + 0.12e2 * delta1 * mu2 * z * z * delta2 * delta2 - pow(delta2, 0.4e1) * z * z + 0.12e2 * c * delta2 * delta2 * mu1 + 0.12e2 * c * delta2 * delta2 * delta1 - 0.12e2 * mu1 * delta2 * delta2 * delta1 + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * mu2 * mu2 * c * c * z + 0.6e1 * mu2 * mu2 * c * c * z * z + 0.12e2 * delta2 * delta2 * mu1 * mu1 * z - 0.6e1 * delta2 * delta2 * mu1 * mu1 * z * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.12e2 * c * delta2 * delta2 * mu1 * z - 0.12e2 * c * delta2 * delta2 * delta1 * z - 0.12e2 * c * c * delta1 * delta2 * z + 0.12e2 * c * c * delta1 * delta2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * c * mu2 * mu2 * delta1 * z - 0.12e2 * c * mu2 * mu2 * delta1 * z * z - 0.12e2 * c * c * mu2 * mu1 * z + 0.12e2 * c * c * mu2 * mu1 * z * z - 0.12e2 * c * c * mu2 * delta1 * z + 0.12e2 * c * c * mu2 * delta1 * z * z - 0.24e2 * mu2 * delta2 * c * c * z + 0.12e2 * mu2 * delta2 * c * c * z * z + 0.24e2 * mu1 * delta2 * delta2 * delta1 * z - 0.12e2 * mu1 * delta2 * delta2 * delta1 * z * z - 0.6e1 * delta2 * delta2 * delta1 * delta1 + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta2 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 - 0.6e1 * delta1 * delta1 * delta2 * delta2 * z * z + 0.4e1 * c * pow(delta2, 0.3e1) * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z * z + 0.24e2 * c * mu2 * delta2 * delta1 * z - 0.24e2 * c * mu2 * delta2 * delta1 * z * z + 0.24e2 * c * mu2 * delta2 * mu1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
		
		default:
			cout<<"This basic piece doesn't exist"; 
	}

}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: PAED_expected_piece_value(double z, int piecenum)
{

  if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}

	switch (piecenum)
	{
		// Expressions for z.pdf(z) and not pdf(z)
		case 1:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * c / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 - delta1 / delta2 * log(z) / 0.6e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + 0.1e1 / delta2 * log(z) * c / 0.2e1 - 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + pow(delta2, -0.2e1) / z * c * c / 0.2e1 + pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta2, -0.2e1) / z * c * mu1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 + delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * mu2 * c / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu2 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * c / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1;


		case 2:
			return -pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 + 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 - 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1;

			
		case 3:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * c / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * c / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1;

			
		case 4:
			return -pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + delta1 / delta2 * log(z) / 0.6e1 - 0.1e1 / delta2 * log(z) * c / 0.2e1 + 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) / z * c * c / 0.2e1 - pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 + pow(delta2, -0.2e1) / z * c * mu1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 - delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu2 * c / 0.2e1 + pow(delta2, -0.2e1) * log(z) * mu2 * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1;

			
		case 5:
			return -delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 + delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 + pow(delta2, -0.2e1) / z * c * c / 0.2e1 - pow(delta2, -0.2e1) / z * c * mu1 + pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 + delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * mu2 * c / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 + 0.1e1 / delta2 * log(z) * c / 0.2e1 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 - pow(delta2, -0.2e1) * log(z) * mu2 * mu1 / 0.2e1 - 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 - delta1 / delta2 * log(z) / 0.6e1 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2;
			
		case 6:
			return -pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2;
			
		case 7:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c / 0.6e1;
			
		case 8:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c / 0.6e1;


		case 9:
			return -0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * c / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * c / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1;

			
		case 10:
			return -0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * c / 0.2e1 - delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + delta1 / delta2 * log(z) / 0.6e1 - 0.1e1 / delta2 * log(z) * c / 0.2e1 + 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) / z * c * c / 0.2e1 - pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 + pow(delta2, -0.2e1) / z * c * mu1 + delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 - delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu2 * c / 0.2e1 + pow(delta2, -0.2e1) * log(z) * mu2 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * c / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1;

			
		case 11:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c / 0.6e1;

		case 12:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c / 0.6e1;
	

		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: PAED_second_moment_piece_value(double z, int piecenum)
{

	if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}

	
	switch (piecenum)
	{
		// Expressions for z^2.pdf(z) and not pdf(z)
		case 1:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) * delta1 * delta1 * z / 0.12e2 - 0.1e1 / delta2 * delta1 * z / 0.6e1 + delta2 / delta1 * z / 0.6e1 - delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 - pow(delta2, -0.2e1) * log(z) * c * c / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta2 * c * z / 0.2e1 - 0.1e1 / delta2 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta1 * c * z / 0.2e1 + 0.1e1 / delta1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 / delta1 * c * mu1 * z + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * pow(mu1, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * pow(mu2, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * c * z / 0.6e1 - 0.1e1 / delta2 / delta1 * c * mu2 * z - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * log(z) * c * c * mu1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * c * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 / 0.2e1 - pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * mu1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 + pow(delta1, -0.2e1) * mu1 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * delta1 * c * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 - 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * delta1 * mu1 * z / 0.3e1 + pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * delta1 * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(mu2, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * z / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.4e1) * z / 0.12e2 + delta2 * pow(delta1, -0.2e1) * mu1 * z / 0.6e1 + delta2 * pow(delta1, -0.2e1) * c * z / 0.6e1 - delta2 * pow(delta1, -0.2e1) * mu2 * z / 0.3e1 + 0.1e1 / delta2 / delta1 * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 + pow(delta2, -0.2e1) / delta1 * c * mu1 * mu2 * z + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1;

			
		case 2:
			return -pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 + 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 - 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - delta2 / delta1 * z / 0.6e1 + delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 * c * z / 0.2e1 - 0.1e1 / delta1 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 / delta1 * c * mu1 * z - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * pow(mu2, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * c * z / 0.6e1 + 0.1e1 / delta2 / delta1 * c * mu2 * z + pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu1 * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * log(z) * c * c * mu1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * c * mu1 * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 - pow(delta1, -0.2e1) * mu1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * pow(mu2, 0.3e1) * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * z / 0.3e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.4e1) * z / 0.12e2 - delta2 * pow(delta1, -0.2e1) * mu1 * z / 0.6e1 - delta2 * pow(delta1, -0.2e1) * c * z / 0.6e1 + delta2 * pow(delta1, -0.2e1) * mu2 * z / 0.3e1 - 0.1e1 / delta2 / delta1 * mu2 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - pow(delta2, -0.2e1) / delta1 * c * mu1 * mu2 * z - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1;

			
		case 3:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta2 / delta1 * c * mu1 * z + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * pow(mu1, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * pow(mu2, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * c * z / 0.6e1 - 0.1e1 / delta2 / delta1 * c * mu2 * z - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * log(z) * c * c * mu1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * c * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 - 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(mu2, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * z / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 + pow(delta2, -0.2e1) / delta1 * c * mu1 * mu2 * z + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1;


		case 4:
			return -pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta2, -0.2e1) * log(z) * c * mu1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) * delta1 * delta1 * z / 0.12e2 + 0.1e1 / delta2 * delta1 * z / 0.6e1 + pow(delta2, -0.2e1) * log(z) * c * c / 0.2e1 - 0.1e1 / delta2 * c * z / 0.2e1 + 0.1e1 / delta2 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta2 / delta1 * c * mu1 * z - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * pow(mu2, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * c * z / 0.6e1 + 0.1e1 / delta2 / delta1 * c * mu2 * z + pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu1 * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * log(z) * c * c * mu1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * c * mu1 * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * mu1 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * delta1 * c * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * delta1 * mu1 * z / 0.3e1 - pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * delta1 * mu2 * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * pow(mu2, 0.3e1) * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * z / 0.3e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.4e1) * z / 0.12e2 - 0.1e1 / delta2 / delta1 * mu2 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - pow(delta2, -0.2e1) / delta1 * c * mu1 * mu2 * z - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1;

			
		case 5:
			return pow(delta2, -0.2e1) * delta1 * mu1 * z / 0.3e1 + pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 + 0.1e1 / delta2 * c * z / 0.2e1 - pow(delta2, -0.2e1) * delta1 * c * z / 0.6e1 - pow(delta2, -0.2e1) * mu1 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * delta1 * mu2 * z / 0.6e1 - 0.1e1 / delta2 * delta1 * z / 0.6e1 + pow(delta2, -0.2e1) * delta1 * delta1 * z / 0.12e2 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 - pow(delta2, -0.2e1) * log(z) * c * c / 0.2e1 + pow(delta2, -0.2e1) * log(z) * c * mu1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1;
			
		case 6:
			return -pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + delta2 / delta1 * z / 0.6e1 - delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 * c * z / 0.2e1 + 0.1e1 / delta1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 + pow(delta1, -0.2e1) * mu1 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) * c * mu2 * z / 0.2e1 + delta2 * pow(delta1, -0.2e1) * mu1 * z / 0.6e1 + delta2 * pow(delta1, -0.2e1) * c * z / 0.6e1 - delta2 * pow(delta1, -0.2e1) * mu2 * z / 0.3e1;

			
		case 7:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c + delta2 / delta1 * z / 0.6e1 - delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 * c * z / 0.2e1 + 0.1e1 / delta1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * pow(mu2, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * c * z / 0.6e1 - 0.1e1 / delta2 / delta1 * c * mu2 * z - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 + pow(delta1, -0.2e1) * mu1 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) * c * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * pow(mu2, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * z / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.4e1) * z / 0.12e2 + delta2 * pow(delta1, -0.2e1) * mu1 * z / 0.6e1 + delta2 * pow(delta1, -0.2e1) * c * z / 0.6e1 - delta2 * pow(delta1, -0.2e1) * mu2 * z / 0.3e1 + 0.1e1 / delta2 / delta1 * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1;

			
		case 8:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * pow(mu2, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * c * z / 0.6e1 - 0.1e1 / delta2 / delta1 * c * mu2 * z - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) / delta1 * pow(mu2, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * z / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1;


		case 9:
			return pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta2 / delta1 * c * mu1 * z - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * log(z) * c * c * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * c * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * c * mu1 * mu2 * z - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1;

		case 10:
			return delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) * delta1 * delta1 * z / 0.12e2 + 0.1e1 / delta2 * delta1 * z / 0.6e1 + pow(delta2, -0.2e1) * log(z) * c * c / 0.2e1 - 0.1e1 / delta2 * c * z / 0.2e1 + 0.1e1 / delta2 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta2 / delta1 * c * mu1 * z - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * log(z) * c * c * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * c * mu1 * mu1 / 0.2e1 + pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * mu1 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * delta1 * c * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * delta1 * mu1 * z / 0.3e1 - pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * delta1 * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * c * mu1 * mu2 * z - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1;
	
		case 11:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * pow(mu2, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * c * z / 0.6e1 - 0.1e1 / delta2 / delta1 * c * mu2 * z - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) / delta1 * pow(mu2, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * z / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1;

			
		case 12:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) * c / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * c + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * c + delta2 / delta1 * z / 0.6e1 - delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 * c * z / 0.2e1 + 0.1e1 / delta1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * pow(mu2, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * c * z / 0.6e1 - 0.1e1 / delta2 / delta1 * c * mu2 * z - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 + pow(delta1, -0.2e1) * mu1 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) * c * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * pow(mu2, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu2, 0.3e1) * z / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu2, 0.4e1) * z / 0.12e2 + delta2 * pow(delta1, -0.2e1) * mu1 * z / 0.6e1 + delta2 * pow(delta1, -0.2e1) * c * z / 0.6e1 - delta2 * pow(delta1, -0.2e1) * mu2 * z / 0.3e1 + 0.1e1 / delta2 / delta1 * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1;



		default:
			cout<<"This basic piece doesn't exist"; 
	}
}


/*----------------------------------------------------------------------------------------------------------------------------------------*/


double triangular_kernel_polynomial :: AQBE_integrate_piece_value(double z, int piecenum)
{

	if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}

	
	switch (piecenum)
	{
		// Expressions for pdf(z) 
		case 1:
			return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.8e1 * delta1 * c * mu1 - 0.12e2 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.4e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z - 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.3e1 * mu1 * mu1 * delta2 * z - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.4e1 * delta1 * c * c + 0.4e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.16e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.6e1 * c * delta2 * mu1 * z - 0.8e1 * delta1 * mu2 * c * z + 0.8e1 * delta1 * mu2 * mu1 * z - 0.8e1 * delta1 * delta2 * c * z + 0.8e1 * delta1 * delta2 * mu1 * z - 0.3e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 + 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.4e1 * delta1 * z * z * delta2 * delta2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c - 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 - 0.4e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * mu1 * z * z * delta2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c - pow(z, 0.3e1) * pow(mu2, 0.3e1) - pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.8e1 * delta1 * z * z * mu2 * delta2 + 0.6e1 * mu2 * z * z * delta2 * c - 0.6e1 * mu1 * z * z * mu2 * delta2 - 0.8e1 * delta1 * pow(z, 0.3e1) * mu2 * delta2 + 0.6e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * mu1 * z * z * delta2 + 0.8e1 * delta1 * c * z * z * mu2 + 0.8e1 * delta1 * c * z * z * delta2 - 0.16e2 * delta1 * mu1 * z * z * mu2 + 0.8e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.16e2 * delta1 * mu1 * z * z * delta2 + 0.8e1 * delta1 * mu1 * pow(z, 0.3e1) * delta2 - 0.8e1 * delta1 * mu1 * z * z * c + 0.12e2 * delta1 * mu1 * mu1 * z * z - 0.4e1 * delta1 * mu1 * mu1 * pow(z, 0.3e1) - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1)) * (c - mu1 - mu2 * z + mu1 * z - delta2 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;
 

		case 2:
			return (pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.6e1 * delta1 * c * mu1 - 0.9e1 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z - 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.3e1 * mu1 * mu1 * delta2 * z - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.3e1 * delta1 * c * c + 0.3e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.12e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.6e1 * c * delta2 * mu1 * z - 0.6e1 * delta1 * mu2 * c * z + 0.6e1 * delta1 * mu2 * mu1 * z - 0.6e1 * delta1 * delta2 * c * z + 0.6e1 * delta1 * delta2 * mu1 * z - 0.3e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 + 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * delta1 * z * z * delta2 * delta2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c - 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 - 0.3e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * mu1 * z * z * delta2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c - pow(z, 0.3e1) * pow(mu2, 0.3e1) - pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.6e1 * delta1 * z * z * mu2 * delta2 + 0.6e1 * mu2 * z * z * delta2 * c - 0.6e1 * mu1 * z * z * mu2 * delta2 - 0.6e1 * delta1 * pow(z, 0.3e1) * mu2 * delta2 + 0.6e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * mu1 * z * z * delta2 + 0.6e1 * delta1 * c * z * z * mu2 + 0.6e1 * delta1 * c * z * z * delta2 - 0.12e2 * delta1 * mu1 * z * z * mu2 + 0.6e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.12e2 * delta1 * mu1 * z * z * delta2 + 0.6e1 * delta1 * mu1 * pow(z, 0.3e1) * delta2 - 0.6e1 * delta1 * mu1 * z * z * c + 0.9e1 * delta1 * mu1 * mu1 * z * z - 0.3e1 * delta1 * mu1 * mu1 * pow(z, 0.3e1) - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + pow(delta1, 0.3e1) + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * delta1 * delta1 - 0.3e1 * pow(delta1, 0.3e1) * z + 0.9e1 * mu1 * delta1 * delta1 * z - 0.6e1 * delta1 * delta1 * c * z - 0.3e1 * delta1 * delta1 * mu2 * z - 0.3e1 * delta1 * delta1 * delta2 * z + 0.3e1 * pow(delta1, 0.3e1) * z * z - pow(delta1, 0.3e1) * pow(z, 0.3e1) + 0.3e1 * c * delta1 * delta1 * z * z - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 + 0.6e1 * delta1 * delta1 * z * z * delta2 + 0.6e1 * delta1 * delta1 * z * z * mu2 - 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 - 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * mu2) * (c - mu1 + mu1 * z + delta1 - delta1 * z - mu2 * z - delta2 * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;


		case 3:
			return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.6e1 * delta1 * c * mu1 - 0.9e1 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z - 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.4e1 * mu1 * mu1 * delta2 * z - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.3e1 * delta1 * c * c + 0.3e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.12e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.8e1 * c * delta2 * mu1 * z - 0.6e1 * delta1 * mu2 * c * z + 0.6e1 * delta1 * mu2 * mu1 * z - 0.8e1 * delta1 * delta2 * c * z + 0.8e1 * delta1 * delta2 * mu1 * z - 0.4e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * mu1 * z * z * delta2 - 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c - pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.8e1 * delta1 * z * z * mu2 * delta2 + 0.8e1 * mu2 * z * z * delta2 * c - 0.8e1 * mu1 * z * z * mu2 * delta2 - 0.8e1 * delta1 * pow(z, 0.3e1) * mu2 * delta2 + 0.8e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * mu1 * z * z * delta2 + 0.6e1 * delta1 * c * z * z * mu2 + 0.8e1 * delta1 * c * z * z * delta2 - 0.12e2 * delta1 * mu1 * z * z * mu2 + 0.6e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.16e2 * delta1 * mu1 * z * z * delta2 + 0.8e1 * delta1 * mu1 * pow(z, 0.3e1) * delta2 - 0.6e1 * delta1 * mu1 * z * z * c + 0.9e1 * delta1 * mu1 * mu1 * z * z - 0.3e1 * delta1 * mu1 * mu1 * pow(z, 0.3e1) - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + pow(delta1, 0.3e1) + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * delta1 * delta1 - 0.3e1 * pow(delta1, 0.3e1) * z + 0.9e1 * mu1 * delta1 * delta1 * z - 0.6e1 * delta1 * delta1 * c * z - 0.3e1 * delta1 * delta1 * mu2 * z - 0.4e1 * delta1 * delta1 * delta2 * z + 0.3e1 * pow(delta1, 0.3e1) * z * z - pow(delta1, 0.3e1) * pow(z, 0.3e1) + 0.3e1 * c * delta1 * delta1 * z * z - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 + 0.8e1 * delta1 * delta1 * z * z * delta2 + 0.6e1 * delta1 * delta1 * z * z * mu2 - 0.4e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 - 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * mu2) * (c - mu1 + delta1 - mu2 * z + mu1 * z - delta1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;


		case 4:
			return (pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.8e1 * delta1 * c * mu1 - 0.12e2 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.4e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z - 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z - 0.4e1 * mu1 * mu1 * delta2 * z - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.4e1 * delta1 * c * c + 0.4e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z + 0.16e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.8e1 * c * delta2 * mu1 * z - 0.8e1 * delta1 * mu2 * c * z + 0.8e1 * delta1 * mu2 * mu1 * z - 0.12e2 * delta1 * delta2 * c * z + 0.12e2 * delta1 * delta2 * mu1 * z - 0.4e1 * pow(z, 0.3e1) * mu2 * mu2 * delta2 + 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * mu1 * z * z * delta2 - 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.3e1 * mu1 * mu1 * z * z * c - pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.12e2 * delta1 * z * z * mu2 * delta2 + 0.8e1 * mu2 * z * z * delta2 * c - 0.8e1 * mu1 * z * z * mu2 * delta2 - 0.12e2 * delta1 * pow(z, 0.3e1) * mu2 * delta2 + 0.8e1 * mu1 * pow(z, 0.3e1) * mu2 * delta2 - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * mu1 * z * z * delta2 + 0.8e1 * delta1 * c * z * z * mu2 + 0.12e2 * delta1 * c * z * z * delta2 - 0.16e2 * delta1 * mu1 * z * z * mu2 + 0.8e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.24e2 * delta1 * mu1 * z * z * delta2 + 0.12e2 * delta1 * mu1 * pow(z, 0.3e1) * delta2 - 0.8e1 * delta1 * mu1 * z * z * c + 0.12e2 * delta1 * mu1 * mu1 * z * z - 0.4e1 * delta1 * mu1 * mu1 * pow(z, 0.3e1) - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1)) * (c - mu2 * z - mu1 + mu1 * z) * pow(z, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

			
		case 5:
			return (0.6e1 * c * c - 0.12e2 * c * mu1 + 0.6e1 * mu1 * mu1 + 0.4e1 * delta1 * c - 0.4e1 * delta1 * mu1 - 0.12e2 * c * mu2 * z - 0.12e2 * c * delta2 * z + 0.12e2 * mu1 * c * z + 0.12e2 * mu1 * mu2 * z + 0.12e2 * mu1 * delta2 * z - 0.4e1 * delta1 * c * z - 0.4e1 * delta1 * mu2 * z - 0.4e1 * delta1 * delta2 * z + 0.8e1 * mu1 * z * delta1 - 0.12e2 * mu1 * z * z * delta2 - 0.12e2 * mu1 * z * z * mu2 + 0.4e1 * delta1 * z * z * delta2 + 0.4e1 * delta1 * z * z * mu2 - 0.4e1 * delta1 * z * z * mu1 - 0.12e2 * mu1 * mu1 * z + 0.6e1 * mu1 * mu1 * z * z + delta1 * delta1 * z * z - 0.2e1 * delta1 * delta1 * z + delta1 * delta1 + 0.12e2 * mu2 * z * z * delta2 + 0.6e1 * mu2 * mu2 * z * z + 0.6e1 * delta2 * delta2 * z * z) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

		case 6:
			return -(delta2 * delta2 * z * z + 0.6e1 * mu1 * mu1 * z * z - 0.4e1 * mu1 * z * z * delta2 + 0.4e1 * delta1 * z * z * delta2 - 0.12e2 * mu1 * z * z * mu2 - 0.12e2 * delta1 * z * z * mu1 + 0.12e2 * delta1 * z * z * mu2 + 0.6e1 * mu2 * mu2 * z * z + 0.4e1 * mu2 * z * z * delta2 + 0.4e1 * mu1 * delta2 * z + 0.12e2 * mu1 * c * z + 0.24e2 * mu1 * z * delta1 + 0.12e2 * mu1 * mu2 * z - 0.4e1 * delta1 * delta2 * z - 0.12e2 * delta1 * mu2 * z - 0.4e1 * c * delta2 * z - 0.12e2 * mu1 * mu1 * z - 0.12e2 * c * mu2 * z - 0.12e2 * delta1 * c * z + 0.12e2 * delta1 * c + 0.6e1 * c * c - 0.12e2 * c * mu1 + 0.6e1 * mu1 * mu1 - 0.12e2 * delta1 * mu1) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

			 
		case 7:
			return (-mu2 * mu2 * z - 0.2e1 * mu2 * delta2 * z - 0.2e1 * c * mu2 * z + 0.4e1 * c * mu2 - 0.4e1 * mu1 * mu2 + 0.4e1 * mu1 * mu2 * z + 0.4e1 * delta1 * mu2 - 0.4e1 * delta1 * mu2 * z - delta2 * delta2 * z - 0.2e1 * c * delta2 * z + 0.4e1 * c * delta2 - 0.4e1 * mu1 * delta2 + 0.4e1 * mu1 * delta2 * z + 0.4e1 * delta1 * delta2 - 0.4e1 * delta1 * delta2 * z + 0.3e1 * c * c * z - 0.4e1 * c * c + 0.4e1 * c * mu1 - 0.4e1 * mu1 * c * z - 0.4e1 * delta1 * c + 0.4e1 * delta1 * c * z) * pow(-mu2 - delta2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 8:
			return (0.12e2 * mu1 * delta2 * z + 0.4e1 * mu1 * mu2 * z - 0.12e2 * delta1 * delta2 * z + 0.3e1 * c * c * z - 0.4e1 * mu1 * c * z + 0.4e1 * delta1 * c * z - 0.4e1 * delta1 * mu2 * z - mu2 * mu2 * z - 0.2e1 * c * mu2 * z - 0.8e1 * c * delta2 * z - 0.4e1 * mu2 * delta2 * z + 0.4e1 * c * mu2 - 0.4e1 * c * c + 0.4e1 * c * mu1 - 0.4e1 * delta1 * c + 0.4e1 * delta1 * mu2 + 0.12e2 * c * delta2 - 0.4e1 * mu1 * mu2 - 0.12e2 * mu1 * delta2 + 0.12e2 * delta1 * delta2) * pow(-mu2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 9:
			return pow(c - mu1 + delta1, 0.2e1) * (0.2e1 * c * c * z + c * c - 0.2e1 * c * mu1 + mu1 * mu1 + 0.2e1 * delta1 * c - 0.2e1 * delta1 * mu1 - 0.4e1 * c * mu2 * z - 0.4e1 * c * delta2 * z + 0.4e1 * mu1 * mu2 * z + 0.4e1 * mu1 * delta2 * z - 0.4e1 * delta1 * mu2 * z - 0.4e1 * delta1 * delta2 * z + 0.4e1 * mu1 * z * delta1 - 0.4e1 * mu1 * z * z * delta2 - 0.4e1 * mu1 * z * z * mu2 + 0.4e1 * delta1 * z * z * delta2 + 0.4e1 * delta1 * z * z * mu2 - 0.2e1 * delta1 * z * z * mu1 - 0.2e1 * mu1 * mu1 * z + mu1 * mu1 * z * z + delta1 * delta1 * z * z - 0.2e1 * delta1 * delta1 * z + delta1 * delta1 + 0.3e1 * c * c * z * z + 0.2e1 * mu1 * c * z * z - 0.2e1 * delta1 * c * z * z + 0.12e2 * mu2 * z * z * delta2 + 0.6e1 * mu2 * mu2 * z * z + 0.6e1 * delta2 * delta2 * z * z - 0.8e1 * c * mu2 * z * z - 0.8e1 * c * delta2 * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

		case 10:
			return (c - mu1) * (pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.8e1 * delta1 * c * mu1 - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.4e1 * delta1 * c * c + 0.4e1 * delta1 * mu1 * mu1 + 0.12e2 * delta1 * mu1 * mu2 * z + 0.12e2 * delta1 * mu1 * delta2 * z + 0.4e1 * delta1 * mu1 * c * z + 0.8e1 * c * mu2 * z * mu1 - 0.12e2 * c * mu2 * z * delta1 + 0.8e1 * c * delta2 * z * mu1 - 0.12e2 * c * delta2 * z * delta1 - 0.4e1 * mu1 * mu1 * mu2 * z - 0.4e1 * mu1 * mu1 * delta2 * z - 0.2e1 * mu1 * mu1 * c * z - z * z * c * c * mu1 - z * z * c * mu1 * mu1 + 0.4e1 * z * z * delta1 * c * c - 0.8e1 * z * z * c * c * delta2 + 0.4e1 * z * z * delta1 * mu1 * mu1 + 0.4e1 * z * z * mu1 * mu1 * delta2 + 0.6e1 * z * z * mu2 * mu2 * c - 0.6e1 * z * z * mu2 * mu2 * mu1 + 0.12e2 * z * z * mu2 * mu2 * delta1 - 0.8e1 * z * z * c * c * mu2 + 0.4e1 * z * z * mu1 * mu1 * mu2 - 0.8e1 * mu1 * mu1 * z * delta1 + 0.3e1 * z * z * pow(c, 0.3e1) - z * z * pow(mu1, 0.3e1) + 0.2e1 * pow(mu1, 0.3e1) * z + 0.2e1 * pow(c, 0.3e1) * z - 0.2e1 * c * c * z * mu1 + 0.4e1 * c * c * z * delta1 - 0.4e1 * c * c * mu2 * z - 0.4e1 * c * c * delta2 * z + 0.4e1 * z * z * delta1 * c * mu1 + 0.4e1 * z * z * c * mu1 * delta2 - 0.12e2 * z * z * c * delta1 * delta2 - 0.12e2 * z * z * mu1 * delta1 * delta2 + 0.12e2 * z * z * mu2 * delta2 * c - 0.12e2 * z * z * mu2 * delta2 * mu1 + 0.24e2 * z * z * mu2 * delta2 * delta1 - 0.12e2 * z * z * mu1 * delta1 * mu2 + 0.4e1 * z * z * c * mu2 * mu1 - 0.12e2 * z * z * c * mu2 * delta1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;
	
		case 11:
			return (0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * delta1 * pow(c, 0.3e1) * z * z - 0.12e2 * c * mu1 * delta2 * delta2 + 0.12e2 * delta1 * c * delta2 * delta2 + 0.12e2 * delta1 * mu2 * mu2 * z * delta2 + 0.12e2 * c * mu2 * mu2 * z * delta2 - 0.12e2 * mu1 * mu2 * mu2 * z * delta2 - pow(mu2, 0.4e1) * z * z - 0.12e2 * delta1 * mu1 * delta2 * delta2 + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * c * c * delta2 * delta2 * z + 0.6e1 * c * c * delta2 * delta2 * z * z - 0.12e2 * c * c * mu2 * mu2 * z + 0.6e1 * c * c * mu2 * mu2 * z * z - 0.12e2 * mu1 * mu1 * delta2 * delta2 * z + 0.6e1 * mu1 * mu1 * delta2 * delta2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * c * c * delta1 * mu2 * z * z + 0.12e2 * c * c * delta1 * delta2 * z - 0.12e2 * c * c * delta1 * delta2 * z * z - 0.24e2 * c * c * mu2 * delta2 * z + 0.12e2 * c * c * mu2 * delta2 * z * z + 0.24e2 * c * mu1 * delta2 * delta2 * z - 0.12e2 * c * mu1 * delta2 * delta2 * z * z + 0.12e2 * c * mu1 * mu2 * mu2 * z - 0.12e2 * c * mu1 * mu2 * mu2 * z * z - 0.24e2 * delta1 * c * delta2 * delta2 * z + 0.12e2 * delta1 * c * delta2 * delta2 * z * z - 0.12e2 * delta1 * c * mu2 * mu2 * z + 0.12e2 * delta1 * c * mu2 * mu2 * z * z + 0.24e2 * delta1 * mu1 * delta2 * delta2 * z - 0.12e2 * delta1 * mu1 * delta2 * delta2 * z * z + 0.24e2 * c * mu1 * mu2 * delta2 * z - 0.24e2 * c * mu1 * mu2 * delta2 * z * z - 0.24e2 * delta1 * c * mu2 * delta2 * z + 0.24e2 * delta1 * c * mu2 * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * mu2 * z * z - 0.12e2 * z * delta2 * delta2 * delta1 * delta1 + 0.6e1 * delta2 * delta2 * delta1 * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta2 + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.12e2 * mu1 * mu2 * mu2 * z * z * delta2 - 0.12e2 * delta1 * mu2 * mu2 * z * z * delta2 + 0.6e1 * delta1 * delta1 * delta2 * delta2 * z * z + 0.4e1 * mu1 * z * z * pow(mu2, 0.3e1) - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z + 0.6e1 * c * c * delta2 * delta2 + 0.6e1 * mu1 * mu1 * delta2 * delta2) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 12:
			return (0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * delta1 * pow(c, 0.3e1) * z + 0.4e1 * delta1 * pow(c, 0.3e1) * z * z + 0.12e2 * c * mu1 * delta2 * delta2 - 0.12e2 * delta1 * c * delta2 * delta2 + 0.12e2 * delta1 * mu2 * mu2 * z * delta2 + 0.12e2 * c * mu2 * mu2 * z * delta2 - 0.12e2 * mu1 * mu2 * mu2 * z * delta2 - pow(mu2, 0.4e1) * z * z - pow(delta2, 0.4e1) * z * z + 0.12e2 * delta1 * mu1 * delta2 * delta2 + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.12e2 * pow(c, 0.3e1) * delta2 * z - 0.8e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * c * c * mu2 * mu2 * z + 0.6e1 * c * c * mu2 * mu2 * z * z + 0.12e2 * mu1 * mu1 * delta2 * delta2 * z - 0.6e1 * mu1 * mu1 * delta2 * delta2 * z * z - 0.12e2 * c * c * mu1 * delta2 * z + 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * c * c * delta1 * mu2 * z * z + 0.12e2 * c * c * delta1 * delta2 * z - 0.12e2 * c * c * delta1 * delta2 * z * z - 0.24e2 * c * c * mu2 * delta2 * z + 0.12e2 * c * c * mu2 * delta2 * z * z - 0.12e2 * c * mu1 * delta2 * delta2 * z + 0.12e2 * c * mu1 * mu2 * mu2 * z - 0.12e2 * c * mu1 * mu2 * mu2 * z * z + 0.12e2 * delta1 * c * delta2 * delta2 * z - 0.12e2 * delta1 * c * mu2 * mu2 * z + 0.12e2 * delta1 * c * mu2 * mu2 * z * z - 0.24e2 * delta1 * mu1 * delta2 * delta2 * z + 0.12e2 * delta1 * mu1 * delta2 * delta2 * z * z + 0.24e2 * c * mu1 * mu2 * delta2 * z - 0.24e2 * c * mu1 * mu2 * delta2 * z * z - 0.24e2 * delta1 * c * mu2 * delta2 * z + 0.24e2 * delta1 * c * mu2 * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * mu2 * z * z + 0.12e2 * c * mu2 * delta2 * delta2 * z + 0.12e2 * mu1 * mu2 * z * z * delta2 * delta2 - 0.12e2 * mu1 * mu2 * delta2 * delta2 * z + 0.12e2 * mu2 * z * delta1 * delta2 * delta2 - 0.12e2 * mu2 * z * z * delta2 * delta2 * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * z * delta2 + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.12e2 * mu1 * mu2 * mu2 * z * z * delta2 - 0.12e2 * delta1 * mu2 * mu2 * z * z * delta2 + 0.4e1 * mu1 * z * z * pow(mu2, 0.3e1) - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z - 0.6e1 * c * c * delta2 * delta2 - 0.6e1 * mu1 * mu1 * delta2 * delta2 + 0.4e1 * c * pow(delta2, 0.3e1) * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z - 0.6e1 * mu2 * mu2 * z * z * delta2 * delta2 - 0.4e1 * mu2 * z * z * pow(delta2, 0.3e1) + 0.4e1 * pow(delta2, 0.3e1) * z * delta1 - 0.4e1 * pow(delta2, 0.3e1) * z * z * delta1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: AQBE_expected_piece_value(double z, int piecenum)
{

	if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}

	
	switch (piecenum)
	{
		// // Expressions for z.pdf(z) and not pdf(z)
		case 1:
			return -pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2;
	
		case 2:
			return pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 - pow(delta2, -0.2e1) / z * c * mu1 - pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * c * mu2 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu2 / 0.2e1 + delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 - delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 + delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + delta1 / delta2 * log(z) / 0.6e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta2 * log(z) * c / 0.2e1 - 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 + pow(delta2, -0.2e1) / z * c * c / 0.2e1 + pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2;

		case 3:
			return -pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 + pow(delta2, -0.2e1) / z * c * mu1 + pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu2 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu2 / 0.2e1 - delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 + delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 - delta1 / delta2 * log(z) / 0.6e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta2 * log(z) * c / 0.2e1 + 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 - pow(delta2, -0.2e1) / z * c * c / 0.2e1 - pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1;


		case 4:
			return pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1;

			
		case 5:
			return pow(delta2, -0.2e1) / z * c * c / 0.2e1 - pow(delta2, -0.2e1) / z * c * mu1 + pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 + delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 + delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 - delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + delta1 / delta2 * log(z) / 0.6e1 + pow(delta2, -0.2e1) * log(z) * c * mu2 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu2 / 0.2e1 + 0.1e1 / delta2 * log(z) * c / 0.2e1 - 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1;

		case 6:
			return pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2;
 
			
		case 7:
			return -pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2;


		case 8:
			return -pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1;

			
		case 9:
			return pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 - pow(delta2, -0.2e1) / z * c * mu1 - pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * c * mu2 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu2 / 0.2e1 + delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 - delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + delta1 / delta2 * log(z) / 0.6e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta2 * log(z) * c / 0.2e1 - 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 + pow(delta2, -0.2e1) / z * c * c / 0.2e1 + pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1;

			
		case 10:
			return pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1;
			
		case 11:
			return -pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1;


		case 12:
			return -pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2;

			
		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: AQBE_second_moment_piece_value(double z, int piecenum)
{
	
	if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}

	
	switch (piecenum)
	{
		// Expressions for z^2.pdf(z) and not pdf(z)
		case 1:
			return -pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta2, -0.2e1) / delta1 * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * mu1 * z * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * z * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * z * mu2 / 0.2e1 - 0.1e1 / delta2 / delta1 * c * z * mu2 + 0.1e1 / delta2 / delta1 * c * z * mu1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu2 * mu2 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) * mu1 / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z * c / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu1 * log(z) + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu2 * log(fabs(-0.1e1 + z)) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * log(fabs(-0.1e1 + z)) / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu1 * log(z) / 0.2e1 + pow(delta1, -0.2e1) * z * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * mu1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * c * mu2 * z / 0.2e1 + 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 - delta2 * pow(delta1, -0.2e1) * mu1 * z / 0.6e1 - delta2 * pow(delta1, -0.2e1) * c * z / 0.6e1 - 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.3e1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 + pow(delta1, -0.2e1) * mu2 * mu2 * z / 0.2e1 + delta2 / delta1 * z / 0.6e1 + delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 + pow(delta1, -0.2e1) * c * c * log(fabs(-0.1e1 + z)) / 0.2e1 - 0.1e1 / delta1 * z * c / 0.2e1 + 0.1e1 / delta1 * mu2 * z / 0.2e1;


		case 2:
			return pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta2, -0.2e1) / delta1 * c * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * mu1 * z * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * z * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * z * mu2 / 0.2e1 + 0.1e1 / delta2 / delta1 * c * z * mu2 - 0.1e1 / delta2 / delta1 * c * z * mu1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu2 * mu2 * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) * mu1 / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z * c / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * c * c * mu1 * log(z) - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu2 * log(fabs(-0.1e1 + z)) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * log(fabs(-0.1e1 + z)) / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu1 * log(z) / 0.2e1 - pow(delta1, -0.2e1) * z * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * mu1 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) * c * mu2 * z / 0.2e1 - 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 - delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 + delta2 * pow(delta1, -0.2e1) * mu1 * z / 0.6e1 + delta2 * pow(delta1, -0.2e1) * c * z / 0.6e1 + 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + pow(delta2, -0.2e1) * log(z) * c * mu1 + pow(delta2, -0.2e1) * delta1 * z * mu2 / 0.6e1 - pow(delta2, -0.2e1) * delta1 * z * mu1 / 0.3e1 + pow(delta2, -0.2e1) * delta1 * z * c / 0.6e1 - pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * mu2 * z * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.3e1 + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta2 * c * z / 0.2e1 - 0.1e1 / delta2 * mu1 * z / 0.2e1 + 0.1e1 / delta2 * delta1 * z / 0.6e1 + pow(delta2, -0.2e1) * delta1 * delta1 * z / 0.12e2 - pow(delta2, -0.2e1) * c * c * log(z) / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 - pow(delta1, -0.2e1) * mu2 * mu2 * z / 0.2e1 - delta2 / delta1 * z / 0.6e1 - delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 - pow(delta1, -0.2e1) * c * c * log(fabs(-0.1e1 + z)) / 0.2e1 + 0.1e1 / delta1 * z * c / 0.2e1 - 0.1e1 / delta1 * mu2 * z / 0.2e1;


		case 3:
			return -pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta2, -0.2e1) / delta1 * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * mu1 * z * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * z * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * z * mu2 / 0.2e1 - 0.1e1 / delta2 / delta1 * c * z * mu2 + 0.1e1 / delta2 / delta1 * c * z * mu1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu2 * mu2 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) * mu1 / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z * c / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu1 * log(z) + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu2 * log(fabs(-0.1e1 + z)) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * log(fabs(-0.1e1 + z)) / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu1 * log(z) / 0.2e1 + 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 - 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - pow(delta2, -0.2e1) * log(z) * c * mu1 - pow(delta2, -0.2e1) * delta1 * z * mu2 / 0.6e1 + pow(delta2, -0.2e1) * delta1 * z * mu1 / 0.3e1 - pow(delta2, -0.2e1) * delta1 * z * c / 0.6e1 + pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * mu2 * z * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.3e1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta2 * c * z / 0.2e1 + 0.1e1 / delta2 * mu1 * z / 0.2e1 - 0.1e1 / delta2 * delta1 * z / 0.6e1 - pow(delta2, -0.2e1) * delta1 * delta1 * z / 0.12e2 + pow(delta2, -0.2e1) * c * c * log(z) / 0.2e1;

			
		case 4:
			return pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta2, -0.2e1) / delta1 * c * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * mu1 * z * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * z * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * z * mu2 / 0.2e1 + 0.1e1 / delta2 / delta1 * c * z * mu2 - 0.1e1 / delta2 / delta1 * c * z * mu1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu2 * mu2 * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) * mu1 / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z * c / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * c * c * mu1 * log(z) - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu2 * log(fabs(-0.1e1 + z)) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * log(fabs(-0.1e1 + z)) / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu1 * log(z) / 0.2e1 - 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.3e1 + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1;

			
		case 5:
			return pow(delta2, -0.2e1) * delta1 * delta1 * z / 0.12e2 + 0.1e1 / delta2 * delta1 * z / 0.6e1 + pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * mu2 * z * mu1 / 0.2e1 + 0.1e1 / delta2 * c * z / 0.2e1 - 0.1e1 / delta2 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * delta1 * z * mu1 / 0.3e1 + pow(delta2, -0.2e1) * delta1 * z * c / 0.6e1 + pow(delta2, -0.2e1) * delta1 * z * mu2 / 0.6e1 - pow(delta2, -0.2e1) * c * c * log(z) / 0.2e1 + pow(delta2, -0.2e1) * log(z) * c * mu1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1;
			
		case 6:
			return pow(delta1, -0.2e1) * z * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * mu1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * c * mu2 * z / 0.2e1 + delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 - delta2 * pow(delta1, -0.2e1) * mu1 * z / 0.6e1 - delta2 * pow(delta1, -0.2e1) * c * z / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 + pow(delta1, -0.2e1) * mu2 * mu2 * z / 0.2e1 + delta2 / delta1 * z / 0.6e1 + delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 + pow(delta1, -0.2e1) * c * c * log(fabs(-0.1e1 + z)) / 0.2e1 - 0.1e1 / delta1 * z * c / 0.2e1 + 0.1e1 / delta1 * mu2 * z / 0.2e1;
			
		case 7:
			return 0.1e1 / delta2 / delta1 * z * c * c / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * z * mu2 - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 / delta1 * c * z * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu2 * mu2 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) * mu1 / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu2 * log(fabs(-0.1e1 + z)) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * log(fabs(-0.1e1 + z)) / 0.2e1 + pow(delta1, -0.2e1) * z * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * mu1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * c * mu2 * z / 0.2e1 + 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 + delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 - delta2 * pow(delta1, -0.2e1) * mu1 * z / 0.6e1 - delta2 * pow(delta1, -0.2e1) * c * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.3e1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * z * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 + pow(delta1, -0.2e1) * mu2 * mu2 * z / 0.2e1 + delta2 / delta1 * z / 0.6e1 + delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 + pow(delta1, -0.2e1) * c * c * log(fabs(-0.1e1 + z)) / 0.2e1 - 0.1e1 / delta1 * z * c / 0.2e1 + 0.1e1 / delta1 * mu2 * z / 0.2e1;

			
		case 8:
			return 0.1e1 / delta2 / delta1 * z * c * c / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * z * mu2 - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 / delta1 * c * z * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu2 * mu2 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) * mu1 / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu2 * log(fabs(-0.1e1 + z)) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * log(fabs(-0.1e1 + z)) / 0.2e1 + 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.3e1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * z * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1;

			
		case 9:
			return 0.1e1 / delta2 / delta1 * z * c * c / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * mu1 * z * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * z * mu2 / 0.2e1 - 0.1e1 / delta2 / delta1 * c * z * mu1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z * c / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * c * c * mu1 * log(z) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu1 * log(z) / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + pow(delta2, -0.2e1) * log(z) * c * mu1 + pow(delta2, -0.2e1) * delta1 * z * mu2 / 0.6e1 - pow(delta2, -0.2e1) * delta1 * z * mu1 / 0.3e1 + pow(delta2, -0.2e1) * delta1 * z * c / 0.6e1 - pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * mu2 * z * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * z * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta2 * c * z / 0.2e1 - 0.1e1 / delta2 * mu1 * z / 0.2e1 + 0.1e1 / delta2 * delta1 * z / 0.6e1 + pow(delta2, -0.2e1) * delta1 * delta1 * z / 0.12e2 - pow(delta2, -0.2e1) * c * c * log(z) / 0.2e1;


		case 10:
			return 0.1e1 / delta2 / delta1 * z * c * c / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * mu1 * z * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * z * mu2 / 0.2e1 - 0.1e1 / delta2 / delta1 * c * z * mu1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z * c / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * c * c * mu1 * log(z) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu1 * log(z) / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * z * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1;

	
		case 11:
			return 0.1e1 / delta2 / delta1 * z * c * c / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * z * mu2 - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 / delta1 * c * z * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu2 * mu2 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) * mu1 / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu2 * log(fabs(-0.1e1 + z)) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * log(fabs(-0.1e1 + z)) / 0.2e1 + 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.3e1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * z * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1;

			
		case 12:
			return 0.1e1 / delta2 / delta1 * z * c * c / 0.2e1 - pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * z * mu2 - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 / delta1 * c * z * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu2 * mu2 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) * mu1 / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu2 * log(fabs(-0.1e1 + z)) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * log(fabs(-0.1e1 + z)) / 0.2e1 + pow(delta1, -0.2e1) * z * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * mu1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * c * mu2 * z / 0.2e1 + 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 + delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 - delta2 * pow(delta1, -0.2e1) * mu1 * z / 0.6e1 - delta2 * pow(delta1, -0.2e1) * c * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu2 * mu2 * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 / 0.6e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 / 0.3e1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * z * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 + pow(delta1, -0.2e1) * mu2 * mu2 * z / 0.2e1 + delta2 / delta1 * z / 0.6e1 + delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 + pow(delta1, -0.2e1) * c * c * log(fabs(-0.1e1 + z)) / 0.2e1 - 0.1e1 / delta1 * z * c / 0.2e1 + 0.1e1 / delta1 * mu2 * z / 0.2e1;



		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

/*----------------------------------------------------------------------------------------------------------------------------------------*/


double triangular_kernel_polynomial :: EBRC_integrate_piece_value(double z, int piecenum)
{
	
	if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}



	switch (piecenum)
	{
		// Expressions for pdf(z)
		case 1:
			return (pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.16e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z - 0.8e1 * c * delta2 * mu1 * z - 0.8e1 * delta1 * mu2 * c * z + 0.8e1 * delta1 * mu2 * mu1 * z + 0.12e2 * delta1 * delta2 * c * z - 0.12e2 * delta1 * delta2 * mu1 * z - 0.12e2 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.4e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z + 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.4e1 * mu1 * mu1 * delta2 * z - 0.8e1 * delta1 * c * mu1 - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.4e1 * delta1 * c * c + 0.4e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * delta2 * z * z * mu2 + 0.8e1 * mu1 * delta2 * z * z * mu2 - 0.8e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * delta2 * z * z * c - 0.16e2 * delta1 * mu1 * z * z * mu2 + 0.8e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.8e1 * delta1 * mu1 * z * z * c - 0.12e2 * delta1 * delta2 * z * z * mu2 + 0.12e2 * delta1 * delta2 * pow(z, 0.3e1) * mu2 - 0.12e2 * delta1 * delta2 * z * z * c + 0.8e1 * delta1 * c * z * z * mu2 + 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.24e2 * mu1 * delta1 * delta2 * z * z - 0.12e2 * mu1 * pow(z, 0.3e1) * delta1 * delta2 + 0.12e2 * delta1 * z * z * mu1 * mu1 - 0.8e1 * delta2 * z * z * mu1 * mu1 - 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2) * (c - mu1 - mu2 * z + mu1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

		case 2:
			return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.12e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z - 0.8e1 * c * delta2 * mu1 * z - 0.6e1 * delta1 * mu2 * c * z + 0.6e1 * delta1 * mu2 * mu1 * z + 0.8e1 * delta1 * delta2 * c * z - 0.8e1 * delta1 * delta2 * mu1 * z - 0.9e1 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z + 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.4e1 * mu1 * mu1 * delta2 * z - 0.6e1 * delta1 * c * mu1 - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.3e1 * delta1 * c * c + 0.3e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * delta2 * z * z * mu2 + 0.8e1 * mu1 * delta2 * z * z * mu2 - 0.8e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * delta2 * z * z * c - 0.12e2 * delta1 * mu1 * z * z * mu2 + 0.6e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.6e1 * delta1 * mu1 * z * z * c - 0.8e1 * delta1 * delta2 * z * z * mu2 + 0.8e1 * delta1 * delta2 * pow(z, 0.3e1) * mu2 - 0.8e1 * delta1 * delta2 * z * z * c + 0.6e1 * delta1 * c * z * z * mu2 + 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.16e2 * mu1 * delta1 * delta2 * z * z - 0.8e1 * mu1 * pow(z, 0.3e1) * delta1 * delta2 + 0.9e1 * delta1 * z * z * mu1 * mu1 - 0.8e1 * delta2 * z * z * mu1 * mu1 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + pow(delta1, 0.3e1) - 0.3e1 * pow(delta1, 0.3e1) * z + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * delta1 * delta1 + 0.9e1 * mu1 * delta1 * delta1 * z - 0.6e1 * delta1 * delta1 * c * z - 0.3e1 * delta1 * delta1 * mu2 * z + 0.4e1 * delta1 * delta1 * delta2 * z + 0.6e1 * mu2 * z * z * delta1 * delta1 - 0.3e1 * mu2 * pow(z, 0.3e1) * delta1 * delta1 + 0.3e1 * c * z * z * delta1 * delta1 - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 - 0.8e1 * delta1 * delta1 * delta2 * z * z + 0.4e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 + 0.3e1 * pow(delta1, 0.3e1) * z * z - pow(delta1, 0.3e1) * pow(z, 0.3e1)) * (c - mu1 + mu1 * z + delta1 - delta1 * z - mu2 * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;


		case 3:
			return (pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.12e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z - 0.6e1 * c * delta2 * mu1 * z - 0.6e1 * delta1 * mu2 * c * z + 0.6e1 * delta1 * mu2 * mu1 * z + 0.6e1 * delta1 * delta2 * c * z - 0.6e1 * delta1 * delta2 * mu1 * z - 0.9e1 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z + 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.3e1 * mu1 * mu1 * delta2 * z - 0.6e1 * delta1 * c * mu1 - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.3e1 * delta1 * c * c + 0.3e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * delta2 * z * z * mu2 + 0.6e1 * mu1 * delta2 * z * z * mu2 - 0.6e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * delta2 * z * z * c - 0.12e2 * delta1 * mu1 * z * z * mu2 + 0.6e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.6e1 * delta1 * mu1 * z * z * c - 0.6e1 * delta1 * delta2 * z * z * mu2 + 0.6e1 * delta1 * delta2 * pow(z, 0.3e1) * mu2 - 0.6e1 * delta1 * delta2 * z * z * c + 0.6e1 * delta1 * c * z * z * mu2 + 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.12e2 * mu1 * delta1 * delta2 * z * z - 0.6e1 * mu1 * pow(z, 0.3e1) * delta1 * delta2 + 0.9e1 * delta1 * z * z * mu1 * mu1 - 0.6e1 * delta2 * z * z * mu1 * mu1 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + pow(delta1, 0.3e1) - 0.3e1 * pow(delta1, 0.3e1) * z + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * delta1 * delta1 + 0.9e1 * mu1 * delta1 * delta1 * z - 0.6e1 * delta1 * delta1 * c * z - 0.3e1 * delta1 * delta1 * mu2 * z + 0.3e1 * delta1 * delta1 * delta2 * z + 0.6e1 * mu2 * z * z * delta1 * delta1 - 0.3e1 * mu2 * pow(z, 0.3e1) * delta1 * delta1 + 0.3e1 * c * z * z * delta1 * delta1 - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 - 0.6e1 * delta1 * delta1 * delta2 * z * z + 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 + 0.3e1 * pow(delta1, 0.3e1) * z * z - pow(delta1, 0.3e1) * pow(z, 0.3e1) + pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 - 0.3e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c) * (c - mu1 + delta1 - mu2 * z + mu1 * z - delta1 * z + delta2 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;


		case 4:
			return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.16e2 * delta1 * c * mu1 * z + 0.6e1 * c * mu2 * mu1 * z - 0.6e1 * c * delta2 * mu1 * z - 0.8e1 * delta1 * mu2 * c * z + 0.8e1 * delta1 * mu2 * mu1 * z + 0.8e1 * delta1 * delta2 * c * z - 0.8e1 * delta1 * delta2 * mu1 * z - 0.12e2 * delta1 * mu1 * mu1 * z + 0.3e1 * c * c * mu1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.4e1 * delta1 * c * c * z - 0.3e1 * c * c * mu2 * z + 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.3e1 * mu1 * mu1 * delta2 * z - 0.8e1 * delta1 * c * mu1 - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.4e1 * delta1 * c * c + 0.4e1 * delta1 * mu1 * mu1 + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * delta2 * z * z * mu2 + 0.6e1 * mu1 * delta2 * z * z * mu2 - 0.6e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * delta2 * z * z * c - 0.16e2 * delta1 * mu1 * z * z * mu2 + 0.8e1 * delta1 * mu1 * pow(z, 0.3e1) * mu2 - 0.8e1 * delta1 * mu1 * z * z * c - 0.8e1 * delta1 * delta2 * z * z * mu2 + 0.8e1 * delta1 * delta2 * pow(z, 0.3e1) * mu2 - 0.8e1 * delta1 * delta2 * z * z * c + 0.8e1 * delta1 * c * z * z * mu2 + 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) + 0.16e2 * mu1 * delta1 * delta2 * z * z - 0.8e1 * mu1 * pow(z, 0.3e1) * delta1 * delta2 + 0.12e2 * delta1 * z * z * mu1 * mu1 - 0.6e1 * delta2 * z * z * mu1 * mu1 - 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + pow(z, 0.3e1) * pow(delta2, 0.3e1) + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 - 0.4e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.4e1 * delta1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c) * (c - mu2 * z - mu1 + mu1 * z + delta2 * z) * pow(z, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 5:
			return -(0.6e1 * c * c - 0.12e2 * c * mu1 + 0.6e1 * mu1 * mu1 + 0.4e1 * delta1 * c - 0.4e1 * delta1 * mu1 - 0.12e2 * c * mu2 * z + 0.12e2 * c * delta2 * z + 0.12e2 * mu1 * mu2 * z - 0.12e2 * mu1 * delta2 * z + 0.12e2 * mu1 * c * z - 0.4e1 * delta1 * mu2 * z + 0.4e1 * delta1 * delta2 * z - 0.4e1 * delta1 * c * z - 0.12e2 * mu1 * mu1 * z - 0.2e1 * delta1 * delta1 * z + 0.6e1 * mu1 * mu1 * z * z + 0.8e1 * mu1 * z * delta1 - 0.12e2 * mu1 * z * z * mu2 + 0.4e1 * delta1 * z * z * mu2 - 0.4e1 * delta1 * z * z * mu1 - 0.12e2 * delta2 * z * z * mu2 + 0.12e2 * delta2 * z * z * mu1 + delta1 * delta1 - 0.4e1 * delta1 * delta2 * z * z + 0.6e1 * mu2 * mu2 * z * z + delta1 * delta1 * z * z) * pow(z, -0.2e1) * pow(delta2, -0.2e1) / 0.24e2;


		case 6:
			return -(-0.12e2 * mu1 * z * z * mu2 - 0.12e2 * delta1 * z * z * mu1 - 0.4e1 * delta1 * delta2 * z * z + 0.4e1 * delta2 * z * z * mu1 + 0.12e2 * delta1 * z * z * mu2 + 0.6e1 * mu1 * mu1 * z * z + delta2 * delta2 * z * z + 0.6e1 * mu2 * mu2 * z * z - 0.4e1 * delta2 * z * z * mu2 - 0.12e2 * c * mu2 * z - 0.4e1 * mu1 * delta2 * z - 0.12e2 * mu1 * mu1 * z + 0.4e1 * c * delta2 * z + 0.12e2 * mu1 * c * z - 0.12e2 * delta1 * mu2 * z + 0.24e2 * mu1 * z * delta1 + 0.12e2 * mu1 * mu2 * z - 0.12e2 * delta1 * c * z + 0.4e1 * delta1 * delta2 * z + 0.6e1 * c * c - 0.12e2 * c * mu1 + 0.6e1 * mu1 * mu1 + 0.12e2 * delta1 * c - 0.12e2 * delta1 * mu1) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 7:
			return -(0.4e1 * mu1 * mu2 * z + 0.4e1 * delta2 * mu2 * z - 0.4e1 * delta1 * mu2 * z - mu2 * mu2 * z - 0.4e1 * mu1 * c * z - 0.12e2 * mu1 * delta2 * z - 0.2e1 * c * mu2 * z + 0.4e1 * delta1 * c * z + 0.3e1 * c * c * z + 0.8e1 * c * delta2 * z + 0.12e2 * delta1 * delta2 * z - 0.4e1 * c * c + 0.4e1 * c * mu1 - 0.4e1 * mu1 * mu2 - 0.4e1 * delta1 * c + 0.4e1 * c * mu2 - 0.12e2 * c * delta2 + 0.12e2 * mu1 * delta2 + 0.4e1 * delta1 * mu2 - 0.12e2 * delta1 * delta2) * pow(-mu2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 8:
			return -(-mu2 * mu2 * z + 0.2e1 * delta2 * mu2 * z - 0.2e1 * c * mu2 * z + 0.4e1 * c * mu2 - 0.4e1 * mu1 * mu2 + 0.4e1 * mu1 * mu2 * z + 0.4e1 * delta1 * mu2 - 0.4e1 * delta1 * mu2 * z - delta2 * delta2 * z + 0.2e1 * c * delta2 * z - 0.4e1 * c * delta2 + 0.4e1 * mu1 * delta2 - 0.4e1 * mu1 * delta2 * z - 0.4e1 * delta1 * delta2 + 0.4e1 * delta1 * delta2 * z + 0.3e1 * c * c * z - 0.4e1 * c * c + 0.4e1 * c * mu1 - 0.4e1 * mu1 * c * z - 0.4e1 * delta1 * c + 0.4e1 * delta1 * c * z) * pow(-mu2 + delta2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 9:
			return -pow(c - mu1 + delta1, 0.2e1) * (c * c - 0.2e1 * c * mu1 + 0.2e1 * c * c * z + mu1 * mu1 + 0.2e1 * delta1 * c - 0.2e1 * delta1 * mu1 - 0.4e1 * c * mu2 * z + 0.4e1 * c * delta2 * z + 0.4e1 * mu1 * mu2 * z - 0.4e1 * mu1 * delta2 * z - 0.4e1 * delta1 * mu2 * z + 0.4e1 * delta1 * delta2 * z - 0.2e1 * mu1 * mu1 * z - 0.2e1 * delta1 * delta1 * z + mu1 * mu1 * z * z + 0.4e1 * mu1 * z * delta1 - 0.4e1 * mu1 * z * z * mu2 + 0.4e1 * delta1 * z * z * mu2 - 0.2e1 * delta1 * z * z * mu1 - 0.12e2 * delta2 * z * z * mu2 + 0.4e1 * delta2 * z * z * mu1 + delta1 * delta1 + 0.3e1 * c * c * z * z + 0.8e1 * c * delta2 * z * z + 0.2e1 * mu1 * c * z * z - 0.4e1 * delta1 * delta2 * z * z - 0.2e1 * delta1 * c * z * z + 0.6e1 * mu2 * mu2 * z * z - 0.8e1 * mu2 * z * z * c + delta1 * delta1 * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;


		case 10:
			return -(c - mu1) * (0.2e1 * pow(c, 0.3e1) * z + pow(c, 0.3e1) - pow(mu1, 0.3e1) - 0.8e1 * delta1 * c * mu1 - 0.3e1 * c * c * mu1 + 0.3e1 * c * mu1 * mu1 + 0.4e1 * delta1 * c * c + 0.4e1 * delta1 * mu1 * mu1 + 0.12e2 * delta1 * mu1 * mu2 * z - 0.12e2 * delta1 * mu1 * delta2 * z + 0.4e1 * delta1 * mu1 * c * z - 0.4e1 * c * c * mu2 * z + 0.4e1 * c * c * delta2 * z - 0.2e1 * c * c * z * mu1 + 0.4e1 * c * c * z * delta1 + 0.12e2 * c * delta2 * z * delta1 + 0.8e1 * c * mu2 * z * mu1 - 0.12e2 * c * mu2 * z * delta1 - 0.8e1 * c * delta2 * z * mu1 + 0.12e2 * delta1 * delta2 * delta2 * z * z + 0.3e1 * z * z * pow(c, 0.3e1) - z * z * pow(mu1, 0.3e1) + 0.2e1 * pow(mu1, 0.3e1) * z - z * z * c * c * mu1 + 0.4e1 * z * z * delta1 * c * c - z * z * c * mu1 * mu1 + 0.4e1 * z * z * delta1 * mu1 * mu1 + 0.6e1 * z * z * mu2 * mu2 * c - 0.6e1 * z * z * mu2 * mu2 * mu1 + 0.12e2 * z * z * mu2 * mu2 * delta1 - 0.8e1 * z * z * c * c * mu2 - 0.4e1 * z * z * mu1 * mu1 * delta2 + 0.8e1 * z * z * c * c * delta2 + 0.4e1 * z * z * mu1 * mu1 * mu2 + 0.6e1 * z * z * delta2 * delta2 * c - 0.6e1 * z * z * delta2 * delta2 * mu1 - 0.8e1 * mu1 * mu1 * z * delta1 - 0.4e1 * mu1 * mu1 * mu2 * z + 0.4e1 * mu1 * mu1 * delta2 * z - 0.2e1 * mu1 * mu1 * c * z - 0.12e2 * z * z * c * mu2 * delta1 - 0.12e2 * z * z * mu1 * mu2 * delta1 + 0.12e2 * z * z * delta1 * c * delta2 + 0.12e2 * z * z * delta1 * mu1 * delta2 - 0.4e1 * z * z * c * mu1 * delta2 + 0.4e1 * z * z * delta1 * c * mu1 - 0.24e2 * z * z * delta2 * mu2 * delta1 - 0.12e2 * z * z * delta2 * mu2 * c + 0.12e2 * z * z * delta2 * mu2 * mu1 + 0.4e1 * z * z * c * mu2 * mu1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

	
		case 11:
			return -(-0.6e1 * delta1 * delta1 * delta2 * delta2 * z * z + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * c * pow(delta2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * delta1 * pow(delta2, 0.3e1) * z + 0.4e1 * delta1 * pow(delta2, 0.3e1) * z * z - 0.6e1 * delta2 * delta2 * delta1 * delta1 + 0.4e1 * pow(delta2, 0.3e1) * z * z * mu2 + 0.4e1 * delta2 * z * z * pow(mu2, 0.3e1) - 0.6e1 * delta2 * delta2 * z * z * mu2 * mu2 - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z - 0.6e1 * mu1 * mu1 * delta2 * delta2 - 0.6e1 * c * c * delta2 * delta2 + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - pow(mu2, 0.4e1) * z * z - pow(delta2, 0.4e1) * z * z + 0.12e2 * c * mu2 * z * delta2 * delta2 - 0.12e2 * c * mu2 * mu2 * z * delta2 - 0.12e2 * mu1 * mu2 * z * delta2 * delta2 - 0.12e2 * mu1 * mu2 * mu2 * z * z * delta2 + 0.12e2 * mu1 * mu2 * mu2 * z * delta2 + 0.12e2 * mu1 * mu2 * z * z * delta2 * delta2 + 0.12e2 * delta1 * mu2 * z * delta2 * delta2 + 0.12e2 * delta1 * mu2 * mu2 * z * z * delta2 - 0.12e2 * delta1 * mu2 * mu2 * z * delta2 - 0.12e2 * delta1 * mu2 * z * z * delta2 * delta2 - 0.12e2 * c * c * mu2 * mu2 * z + 0.6e1 * c * c * mu2 * mu2 * z * z - 0.6e1 * z * z * mu1 * mu1 * delta2 * delta2 - 0.12e2 * delta1 * c * delta2 * delta2 + 0.12e2 * delta1 * mu1 * delta2 * delta2 + 0.12e2 * c * mu1 * delta2 * delta2 + 0.12e2 * mu1 * mu1 * delta2 * delta2 * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * mu1 * delta2 * z * z - 0.12e2 * delta1 * c * c * delta2 * z + 0.12e2 * delta1 * c * c * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * mu2 * z * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * c * c * delta1 * mu2 * z * z + 0.24e2 * c * c * delta2 * mu2 * z - 0.12e2 * c * c * delta2 * mu2 * z * z + 0.12e2 * c * mu1 * mu2 * mu2 * z - 0.12e2 * c * mu1 * mu2 * mu2 * z * z - 0.12e2 * delta1 * c * mu2 * mu2 * z + 0.12e2 * delta1 * c * mu2 * mu2 * z * z - 0.24e2 * delta1 * mu1 * delta2 * delta2 * z + 0.12e2 * c * delta2 * delta2 * z * delta1 - 0.12e2 * c * delta2 * delta2 * z * mu1 + 0.12e2 * z * z * delta1 * mu1 * delta2 * delta2 + 0.12e2 * z * delta2 * delta2 * delta1 * delta1 - 0.24e2 * c * mu1 * delta2 * mu2 * z + 0.24e2 * c * mu1 * delta2 * mu2 * z * z + 0.24e2 * delta1 * c * delta2 * mu2 * z - 0.24e2 * delta1 * c * delta2 * mu2 * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

			
		case 12:
			return -(0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * delta1 * pow(mu2, 0.3e1) * z - 0.4e1 * delta1 * pow(mu2, 0.3e1) * z * z + 0.4e1 * delta2 * z * z * pow(mu2, 0.3e1) - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z + 0.6e1 * mu1 * mu1 * delta2 * delta2 + 0.6e1 * c * c * delta2 * delta2 + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - pow(mu2, 0.4e1) * z * z - 0.12e2 * c * mu2 * mu2 * z * delta2 - 0.12e2 * mu1 * mu2 * mu2 * z * z * delta2 + 0.12e2 * mu1 * mu2 * mu2 * z * delta2 + 0.12e2 * delta1 * mu2 * mu2 * z * z * delta2 - 0.12e2 * delta1 * mu2 * mu2 * z * delta2 - 0.12e2 * c * c * mu2 * mu2 * z + 0.6e1 * c * c * mu2 * mu2 * z * z - 0.12e2 * c * c * delta2 * delta2 * z + 0.6e1 * z * z * mu1 * mu1 * delta2 * delta2 + 0.6e1 * z * z * c * c * delta2 * delta2 + 0.12e2 * delta1 * c * delta2 * delta2 - 0.12e2 * delta1 * mu1 * delta2 * delta2 - 0.12e2 * c * mu1 * delta2 * delta2 - 0.12e2 * mu1 * mu1 * delta2 * delta2 * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * mu1 * delta2 * z * z - 0.12e2 * delta1 * c * c * delta2 * z + 0.12e2 * delta1 * c * c * delta2 * z * z - 0.12e2 * c * c * mu1 * mu2 * z + 0.12e2 * c * c * mu1 * mu2 * z * z + 0.12e2 * c * c * delta1 * mu2 * z - 0.12e2 * c * c * delta1 * mu2 * z * z + 0.24e2 * c * c * delta2 * mu2 * z - 0.12e2 * c * c * delta2 * mu2 * z * z + 0.12e2 * c * mu1 * mu2 * mu2 * z - 0.12e2 * c * mu1 * mu2 * mu2 * z * z - 0.12e2 * delta1 * c * mu2 * mu2 * z + 0.12e2 * delta1 * c * mu2 * mu2 * z * z + 0.24e2 * delta1 * mu1 * delta2 * delta2 * z - 0.24e2 * c * delta2 * delta2 * z * delta1 + 0.24e2 * c * delta2 * delta2 * z * mu1 + 0.12e2 * z * z * delta1 * c * delta2 * delta2 - 0.12e2 * z * z * delta1 * mu1 * delta2 * delta2 - 0.12e2 * z * z * c * mu1 * delta2 * delta2 - 0.24e2 * c * mu1 * delta2 * mu2 * z + 0.24e2 * c * mu1 * delta2 * mu2 * z * z + 0.24e2 * delta1 * c * delta2 * mu2 * z - 0.24e2 * delta1 * c * delta2 * mu2 * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: EBRC_expected_piece_value(double z, int piecenum)
{
	
	if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}

	
	switch (piecenum)
	{
		// Expressions for z.pdf(z) and not pdf(z)
		case 1:				
			return 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1;

		case 2:
			return -0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + delta1 / delta2 * log(z) / 0.6e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta2 * log(z) * c / 0.2e1 - 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 - pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) / z * c * c / 0.2e1 - delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 + delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu2 / 0.2e1 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) / z * c * mu1;


		case 3:
			return 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 - delta1 / delta2 * log(z) / 0.6e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta2 * log(z) * c / 0.2e1 + 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 + pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 + pow(delta2, -0.2e1) / z * c * c / 0.2e1 + delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 - delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu2 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * c * mu2 / 0.2e1 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) / z * c * mu1;

			
		case 4:
			return -0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1;


		case 5:
			return -delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + delta1 / delta2 * log(z) / 0.6e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu2 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu2 / 0.2e1 - 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 + 0.1e1 / delta2 * log(z) * c / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 + pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 - delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 - pow(delta2, -0.2e1) / z * c * c / 0.2e1 + pow(delta2, -0.2e1) / z * c * mu1 - pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 - delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 + delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1;

		case 6:
			return -pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2;
			
		case 7:
			return -0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1;

			
		case 8:
			return -0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1;


		case 9:
			return -0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + delta1 / delta2 * log(z) / 0.6e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta2 * log(z) * c / 0.2e1 - 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 - pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) / z * c * c / 0.2e1 - delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 + delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu2 / 0.2e1 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) / z * c * mu1;
			
		case 10:
			return -0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1;
	
		case 11:
			return -0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1;

		case 12:
			return -0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1;

		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: EBRC_second_moment_piece_value(double z, int piecenum)
{	
	
	if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}

	switch (piecenum)
	{
		// Expressions for z^2.pdf(z) and not pdf(z)
		case 1:
			return -pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * mu1 * log(z) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu1 * log(z) / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu2 * c * c * log(fabs(-0.1e1 + z)) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * pow(mu1, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * mu2 * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 / delta1 * c * mu2 * z + 0.1e1 / delta2 / delta1 * c * z * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 - 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 - pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * z * c / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z - pow(delta2, -0.2e1) / delta1 * c * mu2 * z * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1;

			
		case 2:
			return pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu1 * log(z) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu1 * log(z) / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu2 * c * c * log(fabs(-0.1e1 + z)) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * mu2 * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta2 / delta1 * c * mu2 * z - 0.1e1 / delta2 / delta1 * c * z * mu1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 + pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu1 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - pow(delta2, -0.2e1) * delta1 * mu2 * z / 0.6e1 - pow(delta2, -0.2e1) * delta1 * c * z / 0.6e1 + pow(delta2, -0.2e1) * delta1 * mu1 * z / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * mu2 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * z * c / 0.2e1 + 0.1e1 / delta2 * c * z / 0.2e1 - 0.1e1 / delta2 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta2 * delta1 * z / 0.6e1 - pow(delta2, -0.2e1) * delta1 * delta1 * z / 0.12e2 + pow(delta2, -0.2e1) * c * c * log(z) / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z + pow(delta2, -0.2e1) / delta1 * c * mu2 * z * mu1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1;


		case 3:
			return -pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * c * mu1 * log(z) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu1 * log(z) / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu2 * c * c * log(fabs(-0.1e1 + z)) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * pow(mu1, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * mu2 * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 / delta1 * c * mu2 * z + 0.1e1 / delta2 / delta1 * c * z * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * z * c * mu2 / 0.2e1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 - 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 - pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * c * mu1 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 - pow(delta1, -0.2e1) * z * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * c * z / 0.2e1 - 0.1e1 / delta1 * z * mu2 / 0.2e1 + pow(delta2, -0.2e1) * delta1 * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) * delta1 * c * z / 0.6e1 - pow(delta2, -0.2e1) * delta1 * mu1 * z / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * mu2 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 + pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * z * c / 0.2e1 - 0.1e1 / delta2 * c * z / 0.2e1 + 0.1e1 / delta2 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta2 * delta1 * z / 0.6e1 + pow(delta2, -0.2e1) * delta1 * delta1 * z / 0.12e2 - pow(delta2, -0.2e1) * c * c * log(z) / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 - delta2 * pow(delta1, -0.2e1) * z * c / 0.6e1 - delta2 * pow(delta1, -0.2e1) * z * mu1 / 0.6e1 + delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 + pow(delta1, -0.2e1) * z * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z - pow(delta2, -0.2e1) / delta1 * c * mu2 * z * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 - delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 + delta2 / delta1 * z / 0.6e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1;

			
		case 4:
			return pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu1 * log(z) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu1 * log(z) / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu2 * c * c * log(fabs(-0.1e1 + z)) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * mu2 * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta2 / delta1 * c * mu2 * z - 0.1e1 / delta2 / delta1 * c * z * mu1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * z * c * mu2 / 0.2e1 + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 + pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 + pow(delta1, -0.2e1) * z * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * c * z / 0.2e1 + 0.1e1 / delta1 * z * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 - pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * z * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + delta2 * pow(delta1, -0.2e1) * z * c / 0.6e1 + delta2 * pow(delta1, -0.2e1) * z * mu1 / 0.6e1 - delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 - pow(delta1, -0.2e1) * z * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z + pow(delta2, -0.2e1) / delta1 * c * mu2 * z * mu1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 + delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 - delta2 / delta1 * z / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1;

			
		case 5:
			return -pow(delta2, -0.2e1) * delta1 * mu2 * z / 0.6e1 - pow(delta2, -0.2e1) * delta1 * delta1 * z / 0.12e2 + 0.1e1 / delta2 * delta1 * z / 0.6e1 + pow(delta2, -0.2e1) * mu2 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 - 0.1e1 / delta2 * mu1 * z / 0.2e1 + 0.1e1 / delta2 * c * z / 0.2e1 - pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * delta1 * mu1 * z / 0.3e1 - pow(delta2, -0.2e1) * delta1 * c * z / 0.6e1 + pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + pow(delta2, -0.2e1) * c * c * log(z) / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1;
			
		case 6:
			return -pow(delta1, -0.2e1) * z * c * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 + pow(delta1, -0.2e1) * z * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * c * z / 0.2e1 + 0.1e1 / delta1 * z * mu2 / 0.2e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 + delta2 * pow(delta1, -0.2e1) * z * c / 0.6e1 + delta2 * pow(delta1, -0.2e1) * z * mu1 / 0.6e1 - delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 - pow(delta1, -0.2e1) * z * mu1 * mu2 / 0.2e1 + delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 - delta2 / delta1 * z / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1;
			
		case 7:
			return -pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu2 * c * c * log(fabs(-0.1e1 + z)) + pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 / delta1 * c * mu2 * z + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z;

		case 8:
			return -pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu2 * c * c * log(fabs(-0.1e1 + z)) + pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 / delta1 * c * mu2 * z + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * z * c * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 - pow(delta1, -0.2e1) * z * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * c * z / 0.2e1 - 0.1e1 / delta1 * z * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 - delta2 * pow(delta1, -0.2e1) * z * c / 0.6e1 - delta2 * pow(delta1, -0.2e1) * z * mu1 / 0.6e1 + delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 + pow(delta1, -0.2e1) * z * mu1 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z - delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 + delta2 / delta1 * z / 0.6e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1;


		case 9:
			return -pow(delta2, -0.2e1) / delta1 * c * c * mu1 * log(z) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu1 * log(z) / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * mu2 * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta2 / delta1 * c * z * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 + 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu1 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - pow(delta2, -0.2e1) * delta1 * mu2 * z / 0.6e1 - pow(delta2, -0.2e1) * delta1 * c * z / 0.6e1 + pow(delta2, -0.2e1) * delta1 * mu1 * z / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * mu2 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * z * c / 0.2e1 + 0.1e1 / delta2 * c * z / 0.2e1 - 0.1e1 / delta2 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta2 * delta1 * z / 0.6e1 - pow(delta2, -0.2e1) * delta1 * delta1 * z / 0.12e2 + pow(delta2, -0.2e1) * c * c * log(z) / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) / delta1 * c * mu2 * z * mu1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1;
			
		case 10:
			return -pow(delta2, -0.2e1) / delta1 * c * c * mu1 * log(z) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu1 * mu1 * log(z) / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * mu2 * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta2 / delta1 * c * z * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 + 0.1e1 / delta2 / delta1 * mu1 * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(mu1, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(mu1, 0.3e1) * z / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) / delta1 * mu1 * mu1 * z * c / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) / delta1 * c * mu2 * z * mu1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1;
	
		case 11:
			return -pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu2 * c * c * log(fabs(-0.1e1 + z)) + pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 / delta1 * c * mu2 * z + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * z * c * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 - pow(delta1, -0.2e1) * z * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * c * z / 0.2e1 - 0.1e1 / delta1 * z * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 - delta2 * pow(delta1, -0.2e1) * z * c / 0.6e1 - delta2 * pow(delta1, -0.2e1) * z * mu1 / 0.6e1 + delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 + pow(delta1, -0.2e1) * z * mu1 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z - delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 + delta2 / delta1 * z / 0.6e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1;


		case 12:
			return -pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu2 * c * c * log(fabs(-0.1e1 + z)) + pow(delta2, -0.2e1) / delta1 * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta2 / delta1 * c * mu2 * z + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 + pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta2 / delta1 * z * mu2 * mu2 / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - pow(delta2, -0.2e1) / delta1 * z * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * z * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * mu1 * z / 0.2e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * mu1 * mu2 * z;
			
		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

/*----------------------------------------------------------------------------------------------------------------------------------------*/


double triangular_kernel_polynomial :: DECS_integrate_piece_value(double z, int piecenum)
{
	if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}

	
	switch (piecenum)
	{
		// Expressions for pdf(z)
		case 1:
			return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) - pow(delta1, 0.3e1) + 0.3e1 * c * c * mu1 * z + 0.3e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.6e1 * c * delta1 * delta1 * z - 0.3e1 * c * c * mu2 * z + 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.4e1 * mu1 * mu1 * delta2 * z - 0.3e1 * delta1 * delta1 * mu2 * z + 0.4e1 * delta1 * delta1 * delta2 * z + 0.9e1 * mu1 * mu1 * delta1 * z + 0.9e1 * mu1 * delta1 * delta1 * z + 0.6e1 * c * mu1 * delta1 - 0.12e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.6e1 * c * mu2 * delta1 * z - 0.8e1 * c * delta2 * mu1 * z - 0.8e1 * c * delta2 * delta1 * z - 0.6e1 * mu1 * mu2 * delta1 * z + 0.8e1 * mu1 * delta2 * delta1 * z + 0.3e1 * pow(mu1, 0.3e1) * z + 0.3e1 * pow(delta1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c + 0.6e1 * delta1 * delta1 * z * z * mu2 - 0.3e1 * delta1 * delta1 * pow(z, 0.3e1) * mu2 + 0.3e1 * delta1 * delta1 * z * z * c - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * delta1 * z * z * mu2 + 0.12e2 * mu1 * delta1 * z * z * mu2 - 0.6e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * delta1 * z * z * c - 0.8e1 * c * delta2 * z * z * mu2 + 0.8e1 * mu1 * delta2 * z * z * mu2 - 0.8e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * delta2 * z * z * c + 0.8e1 * delta1 * delta2 * z * z * mu2 - 0.8e1 * delta1 * delta2 * pow(z, 0.3e1) * mu2 + 0.8e1 * delta1 * delta2 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.3e1 * pow(delta1, 0.3e1) * z * z + pow(delta1, 0.3e1) * pow(z, 0.3e1) - 0.16e2 * mu1 * delta2 * z * z * delta1 + 0.8e1 * mu1 * pow(z, 0.3e1) * delta2 * delta1 - 0.9e1 * mu1 * mu1 * z * z * delta1 - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 - 0.8e1 * delta2 * z * z * mu1 * mu1 - 0.8e1 * delta2 * z * z * delta1 * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 + 0.4e1 * delta1 * delta1 * pow(z, 0.3e1) * delta2 - 0.3e1 * c * c * mu1 - 0.3e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * mu1 * delta1 - 0.3e1 * delta1 * delta1 * mu1) * (c - mu1 - delta1 - mu2 * z + mu1 * z + delta1 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;
			
		case 2:
			return (pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.3e1 * c * c * mu1 * z + 0.4e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * c * c * mu2 * z + 0.4e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.4e1 * mu1 * mu1 * delta2 * z + 0.12e2 * mu1 * mu1 * delta1 * z + 0.8e1 * c * mu1 * delta1 - 0.16e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.8e1 * c * mu2 * delta1 * z - 0.8e1 * c * delta2 * mu1 * z - 0.12e2 * c * delta2 * delta1 * z - 0.8e1 * mu1 * mu2 * delta1 * z + 0.12e2 * mu1 * delta2 * delta1 * z + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * delta1 * z * z * mu2 + 0.16e2 * mu1 * delta1 * z * z * mu2 - 0.8e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * delta1 * z * z * c - 0.8e1 * c * delta2 * z * z * mu2 + 0.8e1 * mu1 * delta2 * z * z * mu2 - 0.8e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * delta2 * z * z * c + 0.12e2 * delta1 * delta2 * z * z * mu2 - 0.12e2 * delta1 * delta2 * pow(z, 0.3e1) * mu2 + 0.12e2 * delta1 * delta2 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.24e2 * mu1 * delta2 * z * z * delta1 + 0.12e2 * mu1 * pow(z, 0.3e1) * delta2 * delta1 - 0.12e2 * mu1 * mu1 * z * z * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.8e1 * delta2 * z * z * mu1 * mu1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 - 0.3e1 * c * c * mu1 - 0.4e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.4e1 * mu1 * mu1 * delta1) * (c - mu2 * z - mu1 + mu1 * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;
			
		case 3:
			return -(pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.3e1 * c * c * mu1 * z + 0.4e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * c * c * mu2 * z + 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.3e1 * mu1 * mu1 * delta2 * z + 0.12e2 * mu1 * mu1 * delta1 * z + 0.8e1 * c * mu1 * delta1 - 0.16e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.8e1 * c * mu2 * delta1 * z - 0.6e1 * c * delta2 * mu1 * z - 0.8e1 * c * delta2 * delta1 * z - 0.8e1 * mu1 * mu2 * delta1 * z + 0.8e1 * mu1 * delta2 * delta1 * z + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.4e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.4e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c + pow(z, 0.3e1) * pow(delta2, 0.3e1) - 0.6e1 * c * mu1 * z * z * mu2 - 0.8e1 * c * delta1 * z * z * mu2 + 0.16e2 * mu1 * delta1 * z * z * mu2 - 0.8e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.8e1 * mu1 * delta1 * z * z * c - 0.6e1 * c * delta2 * z * z * mu2 + 0.6e1 * mu1 * delta2 * z * z * mu2 - 0.6e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * delta2 * z * z * c + 0.8e1 * delta1 * delta2 * z * z * mu2 - 0.8e1 * delta1 * delta2 * pow(z, 0.3e1) * mu2 + 0.8e1 * delta1 * delta2 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.16e2 * mu1 * delta2 * z * z * delta1 + 0.8e1 * mu1 * pow(z, 0.3e1) * delta2 * delta1 - 0.12e2 * mu1 * mu1 * z * z * delta1 + 0.4e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.6e1 * delta2 * z * z * mu1 * mu1 + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 - 0.4e1 * delta1 * z * z * delta2 * delta2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 + 0.4e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 - 0.3e1 * c * c * mu1 - 0.4e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.4e1 * mu1 * mu1 * delta1) * (c - mu1 - mu2 * z + mu1 * z + delta2 * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(z, -0.2e1) / 0.24e2;
			
		case 4:
			return (pow(c, 0.3e1) - pow(mu1, 0.3e1) - pow(delta1, 0.3e1) + 0.3e1 * pow(delta1, 0.3e1) * z + 0.3e1 * c * delta1 * delta1 - 0.3e1 * mu1 * delta1 * delta1 + 0.9e1 * mu1 * delta1 * delta1 * z + 0.3e1 * c * c * mu1 * z + 0.3e1 * c * c * delta1 * z - 0.6e1 * c * mu1 * mu1 * z - 0.3e1 * c * c * mu2 * z + 0.3e1 * c * c * delta2 * z - 0.3e1 * mu1 * mu1 * mu2 * z + 0.3e1 * mu1 * mu1 * delta2 * z + 0.9e1 * mu1 * mu1 * delta1 * z + 0.6e1 * c * mu1 * delta1 - 0.12e2 * c * mu1 * delta1 * z + 0.6e1 * c * mu2 * mu1 * z + 0.6e1 * c * mu2 * delta1 * z - 0.6e1 * c * delta2 * mu1 * z - 0.6e1 * c * delta2 * delta1 * z - 0.6e1 * mu1 * mu2 * delta1 * z + 0.6e1 * mu1 * delta2 * delta1 * z + 0.3e1 * pow(mu1, 0.3e1) * z - pow(z, 0.3e1) * pow(mu2, 0.3e1) + 0.3e1 * mu2 * mu2 * z * z * c - 0.3e1 * mu1 * z * z * mu2 * mu2 - 0.3e1 * delta1 * z * z * mu2 * mu2 + 0.3e1 * mu1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta1 * pow(z, 0.3e1) * mu2 * mu2 + 0.3e1 * delta2 * pow(z, 0.3e1) * mu2 * mu2 + 0.6e1 * mu1 * mu1 * z * z * mu2 - 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * mu2 + 0.3e1 * mu1 * mu1 * z * z * c + pow(z, 0.3e1) * pow(delta2, 0.3e1) - 0.6e1 * c * mu1 * z * z * mu2 - 0.6e1 * c * delta1 * z * z * mu2 + 0.12e2 * mu1 * delta1 * z * z * mu2 - 0.6e1 * mu1 * delta1 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * delta1 * z * z * c - 0.6e1 * c * delta2 * z * z * mu2 + 0.6e1 * mu1 * delta2 * z * z * mu2 - 0.6e1 * mu1 * delta2 * pow(z, 0.3e1) * mu2 + 0.6e1 * mu1 * delta2 * z * z * c + 0.6e1 * delta1 * delta2 * z * z * mu2 - 0.6e1 * delta1 * delta2 * pow(z, 0.3e1) * mu2 + 0.6e1 * delta1 * delta2 * z * z * c - 0.3e1 * pow(mu1, 0.3e1) * z * z + pow(mu1, 0.3e1) * pow(z, 0.3e1) - 0.12e2 * mu1 * delta2 * z * z * delta1 + 0.6e1 * mu1 * pow(z, 0.3e1) * delta2 * delta1 - 0.9e1 * mu1 * mu1 * z * z * delta1 + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta1 - 0.6e1 * delta2 * z * z * mu1 * mu1 + 0.3e1 * mu1 * mu1 * pow(z, 0.3e1) * delta2 - 0.3e1 * delta1 * z * z * delta2 * delta2 - 0.3e1 * mu1 * z * z * delta2 * delta2 + 0.3e1 * delta2 * delta2 * z * z * c - 0.3e1 * pow(z, 0.3e1) * mu2 * delta2 * delta2 + 0.3e1 * delta1 * pow(z, 0.3e1) * delta2 * delta2 + 0.3e1 * mu1 * pow(z, 0.3e1) * delta2 * delta2 - 0.3e1 * pow(delta1, 0.3e1) * z * z + pow(delta1, 0.3e1) * pow(z, 0.3e1) + 0.6e1 * mu2 * z * z * delta1 * delta1 - 0.3e1 * mu2 * pow(z, 0.3e1) * delta1 * delta1 - 0.6e1 * delta2 * z * z * delta1 * delta1 + 0.3e1 * delta2 * pow(z, 0.3e1) * delta1 * delta1 + 0.3e1 * c * delta1 * delta1 * z * z - 0.9e1 * mu1 * delta1 * delta1 * z * z + 0.3e1 * mu1 * pow(z, 0.3e1) * delta1 * delta1 - 0.6e1 * c * delta1 * delta1 * z - 0.3e1 * delta1 * delta1 * mu2 * z + 0.3e1 * delta1 * delta1 * delta2 * z - 0.3e1 * c * c * mu1 - 0.3e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.3e1 * mu1 * mu1 * delta1) * (-mu2 * z + delta2 * z + c - mu1 + mu1 * z - delta1 + delta1 * z) * pow(z, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;


		case 5:
			return -(0.6e1 * c * c - 0.12e2 * c * mu1 - 0.4e1 * c * delta1 + 0.6e1 * mu1 * mu1 + 0.4e1 * mu1 * delta1 + delta1 * delta1 - 0.12e2 * c * mu2 * z + 0.12e2 * c * delta2 * z + 0.12e2 * mu1 * mu2 * z - 0.12e2 * mu1 * delta2 * z + 0.12e2 * mu1 * c * z + 0.4e1 * delta1 * mu2 * z - 0.4e1 * delta1 * delta2 * z + 0.4e1 * delta1 * c * z - 0.12e2 * mu1 * mu1 * z - 0.2e1 * delta1 * delta1 * z - 0.8e1 * mu1 * z * delta1 - 0.12e2 * mu1 * z * z * mu2 + 0.4e1 * mu1 * z * z * delta1 - 0.4e1 * delta1 * z * z * mu2 + 0.12e2 * delta2 * z * z * mu1 - 0.12e2 * delta2 * z * z * mu2 + 0.4e1 * delta2 * z * z * delta1 + 0.6e1 * mu1 * mu1 * z * z + delta1 * delta1 * z * z + 0.6e1 * mu2 * mu2 * z * z) * pow(z, -0.2e1) * pow(delta2, -0.2e1) / 0.24e2;

			 
		case 6:
			return (0.6e1 * c * c - 0.12e2 * c * mu1 - 0.12e2 * c * delta1 + 0.6e1 * mu1 * mu1 + 0.12e2 * mu1 * delta1 + 0.6e1 * delta1 * delta1 - 0.12e2 * c * mu2 * z + 0.4e1 * c * delta2 * z + 0.12e2 * mu1 * mu2 * z - 0.4e1 * mu1 * delta2 * z + 0.12e2 * mu1 * c * z + 0.12e2 * delta1 * mu2 * z - 0.4e1 * delta1 * delta2 * z + 0.12e2 * delta1 * c * z - 0.12e2 * mu1 * mu1 * z - 0.12e2 * delta1 * delta1 * z - 0.24e2 * mu1 * z * delta1 - 0.12e2 * mu1 * z * z * mu2 + 0.12e2 * mu1 * z * z * delta1 - 0.12e2 * delta1 * z * z * mu2 + 0.4e1 * delta2 * z * z * mu1 - 0.4e1 * delta2 * z * z * mu2 + 0.4e1 * delta2 * z * z * delta1 + 0.6e1 * mu1 * mu1 * z * z + 0.6e1 * delta1 * delta1 * z * z + 0.6e1 * mu2 * mu2 * z * z + delta2 * delta2 * z * z) * pow(-0.1e1 + z, -0.2e1) * pow(delta1, -0.2e1) / 0.24e2;

		case 7:
			return (0.4e1 * delta1 * mu2 * z - mu2 * mu2 * z + 0.4e1 * delta2 * mu2 * z - 0.12e2 * delta1 * delta2 * z + 0.4e1 * mu1 * mu2 * z + 0.3e1 * c * c * z - 0.4e1 * mu1 * c * z - 0.4e1 * delta1 * c * z - 0.12e2 * mu1 * delta2 * z - 0.2e1 * c * mu2 * z + 0.8e1 * c * delta2 * z - 0.4e1 * c * c + 0.4e1 * c * mu1 + 0.4e1 * c * delta1 + 0.12e2 * mu1 * delta2 + 0.4e1 * c * mu2 - 0.12e2 * c * delta2 - 0.4e1 * mu1 * mu2 - 0.4e1 * delta1 * mu2 + 0.12e2 * delta1 * delta2) * pow(-mu2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;
 
			
		case 8:
			return (-mu2 * mu2 * z + 0.2e1 * delta2 * mu2 * z - 0.2e1 * c * mu2 * z - 0.4e1 * mu1 * mu2 + 0.4e1 * mu1 * mu2 * z - 0.4e1 * delta1 * mu2 + 0.4e1 * delta1 * mu2 * z + 0.4e1 * c * mu2 - delta2 * delta2 * z + 0.2e1 * c * delta2 * z + 0.4e1 * mu1 * delta2 - 0.4e1 * mu1 * delta2 * z + 0.4e1 * delta1 * delta2 - 0.4e1 * delta1 * delta2 * z - 0.4e1 * c * delta2 + 0.3e1 * c * c * z + 0.4e1 * c * mu1 - 0.4e1 * mu1 * c * z + 0.4e1 * c * delta1 - 0.4e1 * delta1 * c * z - 0.4e1 * c * c) * pow(-mu2 + delta2 + c, 0.2e1) * z * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		case 9:
			return (c - mu1) * (pow(c, 0.3e1) - pow(mu1, 0.3e1) + 0.8e1 * c * mu1 * delta1 - 0.8e1 * c * delta2 * z * mu1 - 0.12e2 * c * delta2 * z * delta1 - 0.12e2 * mu1 * delta1 * mu2 * z + 0.12e2 * mu1 * delta1 * delta2 * z - 0.4e1 * mu1 * delta1 * c * z + 0.4e1 * c * c * delta2 * z + 0.8e1 * c * mu2 * z * mu1 + 0.12e2 * c * mu2 * z * delta1 - z * z * c * c * mu1 - z * z * c * mu1 * mu1 - 0.4e1 * z * z * c * c * delta1 + 0.8e1 * z * z * c * c * delta2 - 0.4e1 * z * z * mu1 * mu1 * delta1 - 0.4e1 * z * z * mu1 * mu1 * delta2 + 0.6e1 * z * z * mu2 * mu2 * c - 0.6e1 * z * z * mu2 * mu2 * mu1 - 0.12e2 * z * z * mu2 * mu2 * delta1 - 0.8e1 * z * z * c * c * mu2 + 0.4e1 * z * z * mu1 * mu1 * mu2 + 0.8e1 * mu1 * mu1 * z * delta1 + 0.2e1 * pow(c, 0.3e1) * z - 0.4e1 * mu1 * mu1 * mu2 * z + 0.4e1 * mu1 * mu1 * delta2 * z - 0.2e1 * mu1 * mu1 * c * z - 0.2e1 * c * c * z * mu1 - 0.4e1 * c * c * z * delta1 - 0.4e1 * c * c * mu2 * z + 0.3e1 * z * z * pow(c, 0.3e1) - z * z * pow(mu1, 0.3e1) + 0.2e1 * pow(mu1, 0.3e1) * z - 0.4e1 * z * z * c * mu1 * delta1 - 0.4e1 * z * z * c * delta2 * mu1 - 0.12e2 * z * z * c * delta2 * delta1 - 0.12e2 * z * z * mu1 * delta2 * delta1 - 0.12e2 * z * z * delta2 * mu2 * c + 0.12e2 * z * z * delta2 * mu2 * mu1 + 0.24e2 * z * z * delta2 * mu2 * delta1 + 0.12e2 * z * z * mu1 * delta1 * mu2 + 0.4e1 * z * z * c * mu2 * mu1 + 0.12e2 * z * z * c * mu2 * delta1 - 0.3e1 * c * c * mu1 - 0.4e1 * c * c * delta1 + 0.3e1 * c * mu1 * mu1 - 0.4e1 * mu1 * mu1 * delta1) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;

		case 10:
			return pow(c - mu1 - delta1, 0.2e1) * (c * c - 0.2e1 * c * mu1 - 0.2e1 * c * delta1 + 0.2e1 * c * c * z + mu1 * mu1 + 0.2e1 * mu1 * delta1 + delta1 * delta1 - 0.4e1 * c * mu2 * z + 0.4e1 * c * delta2 * z + 0.4e1 * mu1 * mu2 * z - 0.4e1 * mu1 * delta2 * z + 0.4e1 * delta1 * mu2 * z - 0.4e1 * delta1 * delta2 * z - 0.2e1 * mu1 * mu1 * z - 0.2e1 * delta1 * delta1 * z - 0.4e1 * mu1 * z * delta1 - 0.4e1 * mu1 * z * z * mu2 + 0.2e1 * mu1 * z * z * delta1 - 0.4e1 * delta1 * z * z * mu2 + 0.4e1 * delta2 * z * z * mu1 - 0.12e2 * delta2 * z * z * mu2 + 0.4e1 * delta2 * z * z * delta1 + mu1 * mu1 * z * z + delta1 * delta1 * z * z + 0.3e1 * c * c * z * z + 0.8e1 * c * delta2 * z * z + 0.2e1 * mu1 * c * z * z + 0.2e1 * delta1 * c * z * z + 0.6e1 * mu2 * mu2 * z * z - 0.8e1 * mu2 * z * z * c + 0.6e1 * delta2 * delta2 * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.24e2;
	
		case 11:
			return (-0.24e2 * c * delta2 * mu2 * mu1 * z + 0.24e2 * c * delta2 * mu2 * mu1 * z * z - 0.24e2 * c * delta2 * mu2 * delta1 * z + 0.24e2 * c * delta2 * mu2 * delta1 * z * z - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z - 0.12e2 * mu1 * delta2 * z * z * mu2 * mu2 + 0.12e2 * mu1 * delta2 * delta2 * z * z * mu2 - 0.12e2 * mu1 * mu2 * z * delta2 * delta2 + 0.12e2 * mu1 * mu2 * mu2 * z * delta2 - 0.12e2 * mu2 * mu2 * z * z * delta2 * delta1 - 0.12e2 * mu2 * z * delta2 * delta2 * delta1 + 0.12e2 * mu2 * mu2 * z * delta2 * delta1 + 0.12e2 * c * mu2 * z * delta2 * delta2 - 0.12e2 * c * mu2 * mu2 * z * delta2 + 0.4e1 * pow(delta2, 0.3e1) * z * delta1 - 0.4e1 * pow(delta2, 0.3e1) * z * z * delta1 + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * c * c * delta1 * delta2 * z - 0.12e2 * c * c * delta1 * delta2 * z * z + 0.24e2 * delta2 * mu2 * c * c * z - 0.12e2 * delta2 * mu2 * c * c * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * c * mu2 * mu2 * delta1 * z - 0.12e2 * c * mu2 * mu2 * delta1 * z * z - 0.12e2 * c * c * mu2 * mu1 * z + 0.12e2 * c * c * mu2 * mu1 * z * z - 0.12e2 * c * c * mu2 * delta1 * z + 0.12e2 * c * c * mu2 * delta1 * z * z - 0.12e2 * c * delta2 * delta2 * z * mu1 - 0.12e2 * c * delta2 * delta2 * z * delta1 + 0.24e2 * mu1 * delta1 * delta2 * delta2 * z - 0.12e2 * z * z * mu1 * delta2 * delta2 * delta1 + 0.12e2 * mu2 * z * z * delta2 * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * mu2 * mu2 * c * c * z + 0.6e1 * mu2 * mu2 * c * c * z * z + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z + 0.12e2 * c * delta2 * delta2 * mu1 + 0.12e2 * c * delta2 * delta2 * delta1 - 0.12e2 * mu1 * delta2 * delta2 * delta1 - 0.6e1 * z * z * mu1 * mu1 * delta2 * delta2 + 0.12e2 * mu1 * mu1 * delta2 * delta2 * z + 0.4e1 * c * pow(mu2, 0.3e1) * z - 0.4e1 * c * pow(delta2, 0.3e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(delta2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(delta2, 0.3e1) * z + 0.4e1 * mu2 * z * z * pow(delta2, 0.3e1) + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 - 0.6e1 * mu2 * mu2 * z * z * delta2 * delta2 + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta2 - 0.6e1 * c * c * delta2 * delta2 - 0.6e1 * mu1 * mu1 * delta2 * delta2 - pow(mu2, 0.4e1) * z * z - pow(delta2, 0.4e1) * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;


		case 12:
			return (-0.12e2 * z * delta2 * delta2 * delta1 * delta1 - 0.24e2 * c * delta2 * mu2 * mu1 * z + 0.24e2 * c * delta2 * mu2 * mu1 * z * z - 0.24e2 * c * delta2 * mu2 * delta1 * z + 0.24e2 * c * delta2 * mu2 * delta1 * z * z + 0.6e1 * delta2 * delta2 * delta1 * delta1 - 0.4e1 * pow(c, 0.4e1) * z + 0.3e1 * pow(c, 0.4e1) * z * z - 0.12e2 * mu1 * delta2 * z * z * mu2 * mu2 + 0.12e2 * mu1 * mu2 * mu2 * z * delta2 - 0.12e2 * mu2 * mu2 * z * z * delta2 * delta1 + 0.12e2 * mu2 * mu2 * z * delta2 * delta1 - 0.12e2 * c * mu2 * mu2 * z * delta2 + 0.6e1 * delta1 * delta1 * delta2 * delta2 * z * z + 0.12e2 * c * c * mu1 * delta2 * z - 0.12e2 * c * c * mu1 * delta2 * z * z + 0.12e2 * c * c * delta1 * delta2 * z - 0.12e2 * c * c * delta1 * delta2 * z * z + 0.24e2 * delta2 * mu2 * c * c * z - 0.12e2 * delta2 * mu2 * c * c * z * z + 0.12e2 * c * mu2 * mu2 * mu1 * z - 0.12e2 * c * mu2 * mu2 * mu1 * z * z + 0.12e2 * c * mu2 * mu2 * delta1 * z - 0.12e2 * c * mu2 * mu2 * delta1 * z * z - 0.12e2 * c * c * mu2 * mu1 * z + 0.12e2 * c * c * mu2 * mu1 * z * z - 0.12e2 * c * c * mu2 * delta1 * z + 0.12e2 * c * c * mu2 * delta1 * z * z + 0.24e2 * c * delta2 * delta2 * z * mu1 + 0.24e2 * c * delta2 * delta2 * z * delta1 - 0.24e2 * mu1 * delta1 * delta2 * delta2 * z - 0.12e2 * z * z * c * delta2 * delta2 * mu1 - 0.12e2 * z * z * c * delta2 * delta2 * delta1 + 0.12e2 * z * z * mu1 * delta2 * delta2 * delta1 + 0.4e1 * pow(c, 0.3e1) * mu1 * z - 0.4e1 * pow(c, 0.3e1) * mu1 * z * z + 0.4e1 * pow(c, 0.3e1) * delta1 * z - 0.4e1 * pow(c, 0.3e1) * delta1 * z * z - 0.12e2 * pow(c, 0.3e1) * delta2 * z + 0.8e1 * pow(c, 0.3e1) * delta2 * z * z - 0.12e2 * mu2 * mu2 * c * c * z + 0.6e1 * mu2 * mu2 * c * c * z * z + 0.12e2 * pow(c, 0.3e1) * mu2 * z - 0.8e1 * pow(c, 0.3e1) * mu2 * z * z - 0.12e2 * c * delta2 * delta2 * mu1 - 0.12e2 * c * delta2 * delta2 * delta1 + 0.12e2 * mu1 * delta2 * delta2 * delta1 - 0.12e2 * c * c * delta2 * delta2 * z + 0.6e1 * z * z * c * c * delta2 * delta2 + 0.6e1 * z * z * mu1 * mu1 * delta2 * delta2 - 0.12e2 * mu1 * mu1 * delta2 * delta2 * z + 0.4e1 * c * pow(mu2, 0.3e1) * z + 0.4e1 * mu1 * pow(mu2, 0.3e1) * z * z - 0.4e1 * mu1 * pow(mu2, 0.3e1) * z + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta1 - 0.4e1 * pow(mu2, 0.3e1) * z * delta1 + 0.4e1 * pow(mu2, 0.3e1) * z * z * delta2 + 0.6e1 * c * c * delta2 * delta2 + 0.6e1 * mu1 * mu1 * delta2 * delta2 - pow(mu2, 0.4e1) * z * z) * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) / 0.24e2;

		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: DECS_expected_piece_value(double z, int piecenum)
{
	
	if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}

	
	switch (piecenum)
	{
		// Expressions for z.pdf(z) and not pdf(z)
		case 1:
			return -delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 - delta1 / delta2 * log(z) / 0.6e1 + 0.1e1 / delta2 * log(z) * c / 0.2e1 - 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) / z * c * c / 0.2e1 - pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta2, -0.2e1) / z * c * mu1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu2 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1;

			
		case 2:
			return -pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1;


		case 3:
			return 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1;

			
		case 4:
			return -0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 + delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + delta1 / delta2 * log(z) / 0.6e1 - 0.1e1 / delta2 * log(z) * c / 0.2e1 + 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + pow(delta2, -0.2e1) / z * c * c / 0.2e1 + pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 - 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - pow(delta2, -0.2e1) / z * c * mu1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * c * mu2 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 + 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1;

			
		case 5:
			return pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 - delta1 / delta2 * log(z) / 0.6e1 + 0.1e1 / delta2 * log(z) * c / 0.2e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu2 / 0.2e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1 - pow(delta2, -0.2e1) * log(z) * c * mu2 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 - pow(delta2, -0.2e1) / z * c * c / 0.2e1 + pow(delta2, -0.2e1) / z * c * mu1 + delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 - pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 - delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 - delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2;
			
		case 6:
			return -0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 - 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1;
			
		case 7:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1;

			
		case 8:
			return 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1;


		case 9:
			return 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1;
			
		case 10:
			return delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.12e2 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + delta1 / delta2 * log(z) / 0.6e1 - 0.1e1 / delta2 * log(z) * c / 0.2e1 + 0.1e1 / delta2 * log(z) * mu1 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + pow(delta2, -0.2e1) / z * c * c / 0.2e1 + pow(delta2, -0.2e1) / z * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - pow(delta2, -0.2e1) / z * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - delta1 * pow(delta2, -0.2e1) / z * c / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + delta1 * pow(delta2, -0.2e1) / z * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.12e2 - pow(delta2, -0.2e1) * log(z) * c * mu1 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * c * mu2 / 0.2e1 - pow(delta2, -0.2e1) * log(z) * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.6e1 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.6e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu2 / 0.6e1;

	
		case 11:
			return 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c / 0.2e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 / 0.3e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c / 0.2e1 - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.12e2 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.6e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1;


		case 12:
			return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.6e1;


		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

// there are total 12 basic pieces  so piece number will vary from  1 to 12
double triangular_kernel_polynomial :: DECS_second_moment_piece_value(double z, int piecenum)
{
	
	if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}
	
	switch (piecenum)
	{
		// Expressions for z^2.pdf(z) and not pdf(z)
		case 1:
			return -delta1 * delta1 * pow(delta2, -0.2e1) * z / 0.12e2 - delta1 / delta2 * z / 0.6e1 + pow(delta2, -0.2e1) * c * c * log(z) / 0.2e1 - 0.1e1 / delta2 * mu1 * z / 0.2e1 + 0.1e1 / delta2 * c * z / 0.2e1 - pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 / delta2 * c * mu1 * z - 0.1e1 / delta1 / delta2 * c * mu2 * z + pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z * c / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 - pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * mu1 * mu2 * z / 0.2e1 + pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + 0.1e1 / delta1 / delta2 * z * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 + delta1 * pow(delta2, -0.2e1) * z * c / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z / 0.3e1 - pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.6e1 - 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 + delta1 * pow(delta2, -0.2e1) * mu2 * z / 0.6e1 - delta1 * pow(delta2, -0.2e1) * z * mu1 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * z * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1;

			
		case 2:
			return 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z + pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 / delta2 * c * mu1 * z + 0.1e1 / delta1 / delta2 * c * mu2 * z - pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z * c / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 - 0.1e1 / delta1 / delta2 * z * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z / 0.3e1 + pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.6e1 + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * z * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1;


		case 3:
			return delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 + delta2 / delta1 * z / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 * z * mu2 / 0.2e1 + pow(delta1, -0.2e1) * z * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * c * z / 0.2e1 + pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 / delta2 * c * mu1 * z - 0.1e1 / delta1 / delta2 * c * mu2 * z + pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z * c / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + 0.1e1 / delta1 / delta2 * z * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z / 0.3e1 - pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.6e1 - 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * z * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta1, -0.2e1) * z * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * z * mu1 * mu2 / 0.2e1 - delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 + delta2 * pow(delta1, -0.2e1) * z * c / 0.6e1 + delta2 * pow(delta1, -0.2e1) * z * mu1 / 0.6e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1;
			
		case 4:
			return -delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 - delta2 / delta1 * z / 0.6e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 * z * mu2 / 0.2e1 - pow(delta1, -0.2e1) * z * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * c * z / 0.2e1 + delta1 * delta1 * pow(delta2, -0.2e1) * z / 0.12e2 + delta1 / delta2 * z / 0.6e1 - pow(delta2, -0.2e1) * c * c * log(z) / 0.2e1 + 0.1e1 / delta2 * mu1 * z / 0.2e1 - 0.1e1 / delta2 * c * z / 0.2e1 + pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 - pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z + pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 / delta2 * c * mu1 * z + 0.1e1 / delta1 / delta2 * c * mu2 * z - pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z * c / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 + pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * mu1 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 - 0.1e1 / delta1 / delta2 * z * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - delta1 * pow(delta2, -0.2e1) * z * c / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z / 0.3e1 + pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.6e1 + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 - delta1 * pow(delta2, -0.2e1) * mu2 * z / 0.6e1 + delta1 * pow(delta2, -0.2e1) * z * mu1 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * z * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta1, -0.2e1) * z * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * z * mu1 * mu2 / 0.2e1 + delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 - delta2 * pow(delta1, -0.2e1) * z * c / 0.6e1 - delta2 * pow(delta1, -0.2e1) * z * mu1 / 0.6e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 - 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta2, -0.2e1) * log(z) * c * mu1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1;

			
		case 5:
			return pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 + delta1 * pow(delta2, -0.2e1) * z * c / 0.6e1 - delta1 * pow(delta2, -0.2e1) * z * mu1 / 0.3e1 - 0.1e1 / delta2 * mu1 * z / 0.2e1 - delta1 / delta2 * z / 0.6e1 + 0.1e1 / delta2 * c * z / 0.2e1 + pow(delta2, -0.2e1) * mu1 * mu2 * z / 0.2e1 + delta1 * pow(delta2, -0.2e1) * mu2 * z / 0.6e1 - pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 - delta1 * delta1 * pow(delta2, -0.2e1) * z / 0.12e2 + pow(delta2, -0.2e1) * c * c * log(z) / 0.2e1 - pow(delta2, -0.2e1) * log(z) * c * mu1 - delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 + pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1 + delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2;
			
		case 6:
			return -delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 - delta2 / delta1 * z / 0.6e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 * z * mu2 / 0.2e1 - pow(delta1, -0.2e1) * z * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * c * z / 0.2e1 - pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + pow(delta1, -0.2e1) * z * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) * z * mu1 * mu2 / 0.2e1 + delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 - delta2 * pow(delta1, -0.2e1) * z * c / 0.6e1 - delta2 * pow(delta1, -0.2e1) * z * mu1 / 0.6e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 + pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 - 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 + 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 + 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 - 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1;
			
		case 7:
			return pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 - 0.1e1 / delta1 / delta2 * c * mu2 * z + pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * z * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * z * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1;

			
		case 8:
			return delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 + delta2 / delta1 * z / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 * z * mu2 / 0.2e1 + pow(delta1, -0.2e1) * z * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * c * z / 0.2e1 + pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 - 0.1e1 / delta1 / delta2 * c * mu2 * z + pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * z * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * z * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 - pow(delta1, -0.2e1) * z * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * z * mu1 * mu2 / 0.2e1 - delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 + delta2 * pow(delta1, -0.2e1) * z * c / 0.6e1 + delta2 * pow(delta1, -0.2e1) * z * mu1 / 0.6e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1;
 

		case 9:
			return pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 - 0.1e1 / delta1 / delta2 * c * mu1 * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z * c / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z / 0.3e1 + pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.6e1 + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1;	

		case 10:
			return delta1 * delta1 * pow(delta2, -0.2e1) * z / 0.12e2 + delta1 / delta2 * z / 0.6e1 - pow(delta2, -0.2e1) * c * c * log(z) / 0.2e1 + 0.1e1 / delta2 * mu1 * z / 0.2e1 - 0.1e1 / delta2 * c * z / 0.2e1 + pow(delta2, -0.2e1) * mu1 * mu1 * z / 0.2e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu1 * mu2 * z / 0.2e1 - delta1 * delta1 * pow(delta2, -0.2e1) * log(z) / 0.12e2 - pow(delta2, -0.2e1) * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 - 0.1e1 / delta1 / delta2 * c * mu1 * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z * c / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 + pow(delta2, -0.2e1) * c * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * mu1 * mu2 * z / 0.2e1 - pow(delta2, -0.2e1) * c * mu1 * z / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z / 0.12e2 - delta1 * pow(delta2, -0.2e1) * z * c / 0.6e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z / 0.3e1 + pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.6e1 + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 - delta1 * pow(delta2, -0.2e1) * mu2 * z / 0.6e1 + delta1 * pow(delta2, -0.2e1) * z * mu1 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 + pow(delta2, -0.2e1) * log(z) * c * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + delta1 * pow(delta2, -0.2e1) * log(z) * c / 0.3e1 - delta1 * pow(delta2, -0.2e1) * log(z) * mu1 / 0.3e1;
	
		case 11:
			return delta2 * delta2 * pow(delta1, -0.2e1) * z / 0.12e2 + delta2 / delta1 * z / 0.6e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 * z * mu2 / 0.2e1 + pow(delta1, -0.2e1) * z * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * c * z / 0.2e1 + pow(delta1, -0.2e1) * c * mu1 * z / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 / 0.6e1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c / 0.6e1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 / 0.6e1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 / 0.3e1 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 - 0.1e1 / delta1 / delta2 * c * mu2 * z + pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * z * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * z * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 - pow(delta1, -0.2e1) * z * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) * z * mu1 * mu2 / 0.2e1 - delta2 * pow(delta1, -0.2e1) * z * mu2 / 0.3e1 + delta2 * pow(delta1, -0.2e1) * z * c / 0.6e1 + delta2 * pow(delta1, -0.2e1) * z * mu1 / 0.6e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.1e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) / 0.4e1 - pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) / 0.24e2 + 0.1e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) / 0.3e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 / 0.4e1 - pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c / 0.4e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * delta2 / (-0.1e1 + z) / 0.6e1 - 0.1e1 / delta1 / (-0.1e1 + z) * c / 0.2e1 + 0.1e1 / delta1 / (-0.1e1 + z) * mu2 / 0.2e1;

		case 12:
			return pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z / 0.6e1 - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.6e1 + pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z / 0.12e2 - 0.1e1 / delta1 / delta2 * c * mu2 * z + pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * z * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * z * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu2, 0.4e1) / 0.12e2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 / 0.4e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) / 0.24e2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) / 0.12e2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.3e1;


		default:
			cout<<"This basic piece doesn't exist"; 
	}
}

//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


double triangular_kernel_polynomial :: approx_PAED_integrate_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:	
				return -pow(c - mu1 - delta1 - mu2 * z + mu1 * z - delta2 * z + delta1 * z, 0.2e1) / (-0.1e1 + z) / z * ((c - mu1 - delta1) / z / 0.3e1 + mu2 / 0.3e1 + 0.2e1 / 0.3e1 * mu1 + delta2 / 0.3e1 + 0.2e1 / 0.3e1 * delta1 + (mu2 + delta2 - c) / (0.1e1 - z) / 0.3e1 - c) * pow(delta1, -0.2e1) * ((c - mu1 - delta1) / z / 0.3e1 + 0.4e1 / 0.3e1 * mu2 + mu1 / 0.3e1 + 0.4e1 / 0.3e1 * delta2 + delta1 / 0.3e1 + (mu2 + delta2 - c) / (0.1e1 - z) / 0.3e1 - 0.5e1 / 0.3e1 * c - (mu2 + delta2 - c) / (0.1e1 - z) * z / 0.3e1) * pow(delta2, -0.2e1) / 0.2e1;			
		
		case 2:	
				return pow(-mu2 * z - delta2 * z + c - mu1 + mu1 * z, 0.2e1) / (-0.1e1 + z) / z * ((mu2 + delta2 - c) / (0.1e1 - z) / 0.3e1 + mu2 / 0.3e1 + 0.2e1 / 0.3e1 * mu1 + delta2 / 0.3e1 + (c - mu1) / z / 0.3e1 - c + delta1) * pow(delta1, -0.2e1) * ((mu2 + delta2 - c) / (0.1e1 - z) / 0.3e1 + 0.4e1 / 0.3e1 * mu2 + mu1 / 0.3e1 + 0.4e1 / 0.3e1 * delta2 + (c - mu1) / z / 0.3e1 - (mu2 + delta2 - c) / (0.1e1 - z) * z / 0.3e1 - 0.5e1 / 0.3e1 * c) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 3:	
				return -pow(c - mu1 - mu2 * z + mu1 * z, 0.2e1) / (-0.1e1 + z) / z * ((c - mu1) / z / 0.3e1 + mu2 / 0.3e1 + 0.2e1 / 0.3e1 * mu1 + (mu2 - c) / (0.1e1 - z) / 0.3e1 - c + delta1) * pow(delta1, -0.2e1) * ((c - mu1) / z / 0.3e1 + 0.4e1 / 0.3e1 * mu2 + mu1 / 0.3e1 + (mu2 - c) / (0.1e1 - z) / 0.3e1 - 0.5e1 / 0.3e1 * c - (mu2 - c) / (0.1e1 - z) * z / 0.3e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 4:	
				return pow(-mu2 * z + c - mu1 + mu1 * z - delta1 + delta1 * z, 0.2e1) / (-0.1e1 + z) / z * ((mu2 - c) / (0.1e1 - z) / 0.3e1 + mu2 / 0.3e1 + 0.2e1 / 0.3e1 * mu1 + 0.2e1 / 0.3e1 * delta1 + (c - mu1 - delta1) / z / 0.3e1 - c) * pow(delta1, -0.2e1) * ((mu2 - c) / (0.1e1 - z) / 0.3e1 + 0.4e1 / 0.3e1 * mu2 + mu1 / 0.3e1 + delta1 / 0.3e1 + (c - mu1 - delta1) / z / 0.3e1 - (mu2 - c) / (0.1e1 - z) * z / 0.3e1 - 0.5e1 / 0.3e1 * c + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 5:	
				return -0.1e1 / delta1 * (-0.2e1 * mu1 - 0.2e1 * delta2 * z - delta1 - 0.2e1 * mu2 * z + 0.2e1 * mu1 * z + 0.2e1 * c + delta1 * z) / z * ((c - mu1 - delta1) / z / 0.4e1 + mu2 / 0.2e1 + mu1 / 0.2e1 + delta2 / 0.2e1 + 0.3e1 / 0.4e1 * delta1 + (c - mu1) / z / 0.4e1 - c) * ((c - mu1 - delta1) / z / 0.4e1 + 0.3e1 / 0.2e1 * mu2 + mu1 / 0.2e1 + 0.3e1 / 0.2e1 * delta2 + delta1 / 0.4e1 + (c - mu1) / z / 0.4e1 - 0.2e1 * c) * pow(delta2, -0.2e1) / 0.2e1;
					
		case 6:
				return 0.1e1 / delta2 * (0.2e1 * mu1 * z + 0.2e1 * delta1 * z - delta2 * z - 0.2e1 * mu2 * z + 0.2e1 * c - 0.2e1 * mu1 - 0.2e1 * delta1) / (-0.1e1 + z) * ((mu2 - c) / (0.1e1 - z) / 0.4e1 + mu2 / 0.2e1 + mu1 / 0.2e1 + delta1 / 0.2e1 + delta2 / 0.4e1 + (mu2 + delta2 - c) / (0.1e1 - z) / 0.4e1 - c) * pow(delta1, -0.2e1) * ((mu2 - c) / (0.1e1 - z) / 0.4e1 + 0.3e1 / 0.2e1 * mu2 + 0.5e1 / 0.4e1 * delta2 + (mu2 + delta2 - c) / (0.1e1 - z) / 0.4e1 - (mu2 - c) / (0.1e1 - z) * z / 0.4e1 - 0.3e1 / 0.2e1 * c - (mu2 + delta2 - c) / (0.1e1 - z) * z / 0.4e1) / 0.2e1;
		
		case 7:
				return -pow(-mu2 - delta2 + c, 0.2e1) * z / (-0.1e1 + z) * (mu2 / 0.3e1 + delta2 / 0.3e1 - 0.4e1 / 0.3e1 * c + (mu2 + delta2 - c) / (0.1e1 - z) / 0.3e1 + mu1 + delta1) * pow(delta1, -0.2e1) * (0.4e1 / 0.3e1 * mu2 + 0.4e1 / 0.3e1 * delta2 - 0.4e1 / 0.3e1 * c + (mu2 + delta2 - c) / (0.1e1 - z) / 0.3e1 - (mu2 + delta2 - c) / (0.1e1 - z) * z / 0.3e1) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 8:
				return -pow(-mu2 + c, 0.2e1) * z / (-0.1e1 + z) * (mu2 / 0.3e1 - 0.4e1 / 0.3e1 * c + (mu2 - c) / (0.1e1 - z) / 0.3e1 + mu1 + delta1) * pow(delta1, -0.2e1) * (0.4e1 / 0.3e1 * mu2 - 0.4e1 / 0.3e1 * c + (mu2 - c) / (0.1e1 - z) / 0.3e1 - (mu2 - c) / (0.1e1 - z) * z / 0.3e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
					
		case 9:
				return -(c * c * z - mu1 * mu1 * z - 0.2e1 * c * mu2 * z + 0.2e1 * mu1 * mu2 * z - 0.2e1 * c * delta2 * z + 0.2e1 * mu1 * delta2 * z + c * c - 0.2e1 * c * mu1 + mu1 * mu1) / z * (mu2 / 0.2e1 + delta2 / 0.2e1 - 0.5e1 / 0.4e1 * c + 0.3e1 / 0.4e1 * mu1 + (c - mu1) / z / 0.4e1 + delta1) * pow(delta1, -0.2e1) * (0.3e1 / 0.2e1 * mu2 + 0.3e1 / 0.2e1 * delta2 - 0.7e1 / 0.4e1 * c + mu1 / 0.4e1 + (c - mu1) / z / 0.4e1) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 10:
				return -(0.2e1 * delta1 * mu1 + c * c + mu1 * mu1 - 0.2e1 * c * mu2 * z + delta1 * delta1 + c * c * z + 0.2e1 * delta1 * mu2 * z + 0.2e1 * mu1 * mu2 * z - 0.2e1 * mu1 * delta1 * z - 0.2e1 * delta1 * c - 0.2e1 * c * mu1 - mu1 * mu1 * z - delta1 * delta1 * z) / z * (mu2 / 0.2e1 - 0.5e1 / 0.4e1 * c + 0.3e1 / 0.4e1 * mu1 + 0.3e1 / 0.4e1 * delta1 + (c - mu1 - delta1) / z / 0.4e1) * pow(delta1, -0.2e1) * (0.3e1 / 0.2e1 * mu2 - 0.7e1 / 0.4e1 * c + mu1 / 0.4e1 + delta1 / 0.4e1 + (c - mu1 - delta1) / z / 0.4e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 11:	
				return -(-0.2e1 * c * mu2 * z - 0.2e1 * c * delta2 * z + 0.2e1 * mu1 * delta2 * z + c * c * z + mu2 * mu2 * z - 0.2e1 * delta2 * mu1 + 0.2e1 * delta2 * c) / (-0.1e1 + z) * (0.3e1 / 0.5e1 * mu2 + 0.2e1 / 0.5e1 * delta2 - 0.6e1 / 0.5e1 * c + 0.3e1 / 0.5e1 * mu1 + (mu2 - c) / (0.1e1 - z) / 0.5e1 + delta1) * pow(delta1, -0.2e1) * (0.8e1 / 0.5e1 * mu2 + 0.7e1 / 0.5e1 * delta2 - 0.8e1 / 0.5e1 * c + (mu2 - c) / (0.1e1 - z) / 0.5e1 - (mu2 - c) / (0.1e1 - z) * z / 0.5e1) * pow(delta2, -0.2e1) / 0.2e1;
						
		case 12:	
				return	-(mu2 * mu2 * z + delta2 * delta2 * z - 0.2e1 * c * mu2 * z - 0.2e1 * mu1 * delta2 * z - 0.2e1 * delta1 * delta2 * z + 0.2e1 * mu2 * z * delta2 + c * c * z - 0.2e1 * delta2 * c + 0.2e1 * delta1 * delta2 + 0.2e1 * delta2 * mu1) / (-0.1e1 + z) * (0.3e1 / 0.5e1 * mu2 - 0.6e1 / 0.5e1 * c + 0.3e1 / 0.5e1 * mu1 + 0.3e1 / 0.5e1 * delta1 + delta2 / 0.5e1 + (mu2 + delta2 - c) / (0.1e1 - z) / 0.5e1) * pow(delta1, -0.2e1) * (0.8e1 / 0.5e1 * mu2 - 0.8e1 / 0.5e1 * c + 0.6e1 / 0.5e1 * delta2 + (mu2 + delta2 - c) / (0.1e1 - z) / 0.5e1 - (mu2 + delta2 - c) / (0.1e1 - z) * z / 0.5e1) * pow(delta2, -0.2e1) / 0.2e1;
								
		default:
			cout<<"This basic piece doesn't exist"; 
  }
  
}

double triangular_kernel_polynomial :: approx_PAED_expected_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:	
				return -0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.3e1 / delta1 / delta2 / z * c * mu1 + 0.14e2 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.7e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * c - 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.14e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.10e2 / 0.3e1 / delta1 / delta2 * log(z) * c * mu1 - 0.2e1 / 0.3e1 / delta1 / delta2 * log(z) * c * mu2 + 0.2e1 / 0.3e1 / delta1 / delta2 * log(z) * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c - 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.4e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu2 / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu2 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 * mu2 / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * mu2 / 0.3e1 + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 - 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) / z * c * c - 0.5e1 / 0.3e1 / delta2 / z * mu1 + 0.5e1 / 0.3e1 / delta2 / z * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c / 0.2e1 + pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 / 0.2e1 + 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * c - 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.5e1 / 0.9e1 * delta1 / delta2 / z - 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) / z + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + delta1 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.12e2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.9e1 / delta1 * delta2 / (-0.1e1 + z) + 0.1e1 / delta1 * log(z) * mu1 / 0.3e1 + 0.1e1 / delta2 * log(z) * mu2 / 0.3e1 - 0.7e1 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.7e1 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.2e1 / delta2 * log(z) * mu1 + 0.5e1 / 0.3e1 / delta2 * log(z) * c - 0.1e1 / delta1 * log(z) * c / 0.3e1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.7e1 / 0.9e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - 0.2e1 / 0.3e1 * delta1 / delta2 * log(z) - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * c + pow(delta1, -0.2e1) * log(z) * c * c / 0.6e1 + pow(delta1, -0.2e1) * log(z) * mu1 * mu1 / 0.6e1 + pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.6e1 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + log(z) / 0.6e1 - 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.7e1 * pow(delta2, -0.2e1) / z * mu1 * c - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * c * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * c - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.5e1 / 0.3e1 / delta1 / delta2 / z * c * c - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.3e1) / 0.3e1 + delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 / 0.3e1 - delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c / 0.3e1 - 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 - 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - 0.5e1 / 0.3e1 / delta1 / delta2 / z * mu1 * mu1 + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.9e1 - 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * c - 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - pow(delta1, -0.2e1) * log(z) * c * mu1 / 0.3e1 + 0.7e1 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.7e1 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.4e1 / 0.3e1 / delta1 / delta2 * log(z) * c * c - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.25e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1;
			
		
		case 2:	
				return 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c + 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu2 / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * mu2 / 0.3e1 - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / 0.6e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - pow(delta1, -0.2e1) * log(z) * c * c / 0.6e1 - pow(delta1, -0.2e1) * log(z) * mu1 * mu1 / 0.6e1 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c + 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 + 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.9e1 + 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + pow(delta1, -0.2e1) * log(z) * c * mu1 / 0.3e1 - 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1;

		
		case 3:	
				return -0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 + pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c - 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 - 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.3e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.2e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.2e1;

		
		case 4:	
				return 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.2e1 / delta1 / delta2 / z * c * mu1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.7e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * c + 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu2 - pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.3e1 / delta1 / delta2 * log(z) * c * mu1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c + 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.4e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu2 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 * mu2 / 0.3e1 - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 + 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) / z * c * c + 0.1e1 / delta2 / z * mu1 - 0.1e1 / delta2 / z * c - pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c / 0.2e1 - pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 / 0.2e1 + delta1 / delta2 / z / 0.3e1 + 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) / z - delta1 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.12e2 + 0.3e1 / 0.2e1 / delta2 * log(z) * mu1 - 0.3e1 / 0.2e1 / delta2 * log(z) * c + 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + delta1 / delta2 * log(z) / 0.2e1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * c - pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.6e1 + 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c + pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) / 0.3e1 + 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu2 - pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - 0.7e1 * pow(delta2, -0.2e1) / z * mu1 * c + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * c * mu2 + pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * c + 0.1e1 / delta1 / delta2 / z * c * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.3e1) / 0.3e1 - delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 / 0.3e1 + delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c / 0.3e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 + 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.1e1 / delta1 / delta2 / z * mu1 * mu1 - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.3e1 + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * c + 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * c * c + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.2e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.25e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.2e1 + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.2e1;

		
		case 5:	
				return 	0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + 0.3e1 / delta1 / delta2 / z * c * mu1 + 0.6e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * c - 0.15e2 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * mu2 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu2 - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 * c + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 + 0.5e1 / 0.2e1 / delta1 / delta2 * log(z) * c * mu1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu2 / 0.2e1 + 0.15e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 * mu2 / 0.4e1 - 0.11e2 / 0.4e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 - 0.17e2 / 0.4e1 * pow(delta2, -0.2e1) / z * c * c - 0.3e1 / 0.2e1 / delta2 / z * mu1 + 0.3e1 / 0.2e1 / delta2 / z * c + 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c + 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 - 0.3e1 / 0.8e1 * delta1 / delta2 / z - 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z + 0.3e1 / 0.64e2 * delta1 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) + 0.1e1 / delta1 * log(z) * mu1 / 0.4e1 + 0.1e1 / delta2 * log(z) * mu2 / 0.4e1 - 0.2e1 / delta2 * log(z) * mu1 + 0.7e1 / 0.4e1 / delta2 * log(z) * c - 0.1e1 / delta1 * log(z) * c / 0.4e1 - 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - 0.5e1 / 0.8e1 * delta1 / delta2 * log(z) - 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * c + pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.8e1 + log(z) / 0.8e1 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.2e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu2 + 0.7e1 * pow(delta2, -0.2e1) / z * mu1 * c - 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 + 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) / z * c * mu2 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * c - 0.3e1 / 0.2e1 / delta1 / delta2 / z * c * c - 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) + 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.3e1) + 0.9e1 / 0.32e2 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 - 0.9e1 / 0.32e2 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c - 0.3e1 / 0.2e1 / delta1 / delta2 / z * mu1 * mu1 + 0.21e2 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * mu1 * c - 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.7e1 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.1e1 / delta1 / delta2 * log(z) * c * c - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.17e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.27e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2;
					
		case 6:
				return 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.4e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.4e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.3e1 / 0.4e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.3e1 / 0.4e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.9e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c;

		
		case 7:
				return -0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.5e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.25e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.6e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.25e2 / 0.18e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1);

		
		case 8:
				return -0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.25e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.3e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1);

					
		case 9:
				return 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu2 / 0.2e1 + 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.4e1 - 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 + 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) + 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 - 0.9e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * c + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c + 0.7e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu2 / 0.4e1 - pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * mu2 / 0.4e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.8e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.8e1 - pow(delta1, -0.2e1) * log(z) * c * c / 0.8e1 - pow(delta1, -0.2e1) * log(z) * mu1 * mu1 / 0.8e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.4e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.4e1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) + 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - 0.3e1 / 0.64e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) - 0.3e1 / 0.64e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) + pow(delta1, -0.2e1) * log(z) * c * mu1 / 0.4e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.4e1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1);
		
		case 10:
				return -0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu2 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 - 0.13e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.4e1 - 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 + 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) + 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 - 0.9e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 - 0.3e1 / 0.2e1 / delta1 / delta2 / z * c * mu1 - 0.39e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * c + 0.6e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * mu2 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu2 - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 + 0.9e1 / 0.16e2 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 * c - 0.9e1 / 0.16e2 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 - 0.3e1 / delta1 / delta2 * log(z) * c * mu1 - 0.9e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c + 0.49e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.15e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.11e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 * mu2 / 0.4e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.8e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.8e1 + 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 + 0.3e1 * pow(delta2, -0.2e1) / z * c * c + 0.3e1 / 0.4e1 / delta2 / z * mu1 - 0.3e1 / 0.4e1 / delta2 / z * c - 0.9e1 / 0.32e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c - 0.9e1 / 0.32e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 + delta1 / delta2 / z / 0.4e1 + 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z - 0.3e1 / 0.64e2 * delta1 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) + 0.3e1 / 0.2e1 / delta2 * log(z) * mu1 - 0.3e1 / 0.2e1 / delta2 * log(z) * c + 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + delta1 / delta2 * log(z) / 0.2e1 + 0.21e2 / 0.16e2 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.49e2 / 0.16e2 * pow(delta2, -0.2e1) * log(z) * c * c - pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.8e1 + 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.5e1 / 0.4e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.19e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * c + pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) / 0.4e1 + 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu2 - pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) / 0.4e1 - 0.39e2 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * c + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * c * mu2 + 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * c + 0.3e1 / 0.4e1 / delta1 / delta2 / z * c * c + 0.3e1 / 0.16e2 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) - 0.3e1 / 0.16e2 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.3e1) - 0.3e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 + 0.3e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c + 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - 0.3e1 / 0.64e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) - 0.3e1 / 0.64e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) + 0.3e1 / 0.4e1 / delta1 / delta2 / z * mu1 * mu1 - 0.9e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * c + 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * c * c + 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.7e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.7e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.3e1 / 0.2e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.2e1 + 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.2e1;

		
		case 11:	
				return -0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.6e1 / 0.5e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.57e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.7e1 / 0.10e2 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.7e1 / 0.10e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.7e1 / 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.7e1 / 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z));

						
		case 12:	
				return -0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) + pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.66e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.39e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.93e2 / 0.25e2 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.93e2 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.168e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.243e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.101e3 / 0.50e2 / delta1 / (-0.1e1 + z) * c - 0.101e3 / 0.50e2 / delta1 / (-0.1e1 + z) * mu2 - 0.51e2 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.10e2 / delta1 * delta2 / (-0.1e1 + z) - 0.101e3 / 0.50e2 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.101e3 / 0.50e2 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.147e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.7e1 / 0.10e2 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 / 0.50e2 - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.48e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.93e2 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.93e2 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.23e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.11e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.193e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.93e2 / 0.50e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.93e2 / 0.50e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.143e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.49e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.23e2 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z));				
									
		default:
			cout<<"This basic piece doesn't exist"; 
  }
  
}


double triangular_kernel_polynomial :: approx_PAED_second_moment_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:	
				return -0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z + 0.7e1 / 0.9e1 / delta1 * delta2 * z - 0.2e1 / 0.3e1 * delta1 / delta2 * z - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.8e1 / 0.3e1 / delta1 * c * z + 0.1e1 / delta1 * mu1 * z / 0.3e1 + 0.1e1 / delta2 * mu2 * z / 0.3e1 + 0.7e1 / 0.3e1 / delta1 * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * c * z - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * mu1 * mu1 * z - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * z - 0.2e1 / delta2 * mu1 * z + pow(delta1, -0.2e1) * mu1 * mu1 * z / 0.6e1 + pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.6e1 + 0.5e1 / 0.3e1 / delta2 * c * z + z / 0.6e1 + 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu2 * mu2 * z / 0.3e1 + pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * mu2 * z / 0.3e1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.28e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.26e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.11e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.14e2 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * c + 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.28e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.10e2 / 0.3e1 / delta1 / delta2 * log(z) * c * mu1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c + 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.8e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * mu1 * z - 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) + 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * c * z - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z - 0.2e1 / delta1 / delta2 * mu1 * mu1 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * c * z + 0.1e1 / delta1 / delta2 * c * c * z - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * c * mu2 * z + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * mu1 * mu2 * z - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * c * mu1 * z + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * mu2 * z * c - 0.2e1 * pow(delta2, -0.2e1) * mu2 * z * mu1 + 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * c * mu1 * z - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z - 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z - 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * mu1 * z + 0.7e1 / 0.3e1 / delta1 / delta2 * mu2 * mu2 * z - 0.16e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z + pow(delta2, -0.2e1) / z * mu1 * mu1 + pow(delta2, -0.2e1) / z * c * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * c - 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.6e1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.9e1 / delta1 * delta2 / (-0.1e1 + z) - 0.14e2 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.14e2 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.3e1 / delta2 * log(z) * mu1 - 0.5e1 / 0.3e1 / delta2 * log(z) * c + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.14e2 / 0.9e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + 0.5e1 / 0.9e1 * delta1 / delta2 * log(z) + 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * c + 0.20e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * mu1 * mu1 + 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.11e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.2e1 * pow(delta2, -0.2e1) / z * mu1 * c - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.7e1 * pow(delta2, -0.2e1) * log(z) * mu1 * c + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.14e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.14e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.5e1 / 0.3e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.5e1 / 0.3e1 / delta1 / delta2 * log(z) * c * c - 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) + 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * mu2 * z / 0.6e1 + 0.10e2 / 0.3e1 / delta1 / delta2 * c * mu1 * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * c + pow(delta1, -0.2e1) / delta2 * c * c * mu1 * z + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z - 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 - 0.7e1 / delta1 * pow(delta2, -0.2e1) * c * c * mu1 * z + 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu2 * mu2 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z - 0.16e2 / 0.3e1 / delta1 / delta2 * c * mu2 * z + 0.2e1 / 0.3e1 / delta1 / delta2 * mu1 * mu2 * z - 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 + 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu1 * mu1 * z + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu1, 0.3e1) * z - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z; 			
		
		case 2:	
				return -0.5e1 / 0.6e1 / delta1 * delta2 * z + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.2e1 / delta1 * c * z - 0.5e1 / 0.2e1 / delta1 * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * c * z - pow(delta1, -0.2e1) * mu1 * mu1 * z / 0.6e1 - 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z - pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * mu2 * z / 0.3e1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.28e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.26e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.11e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * mu1 * z + 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * c * z - 0.2e1 / delta1 / delta2 * c * c * z + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * c * mu2 * z - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * mu1 * mu2 * z + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * c * mu1 * z + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z / 0.3e1 - 0.5e1 / 0.2e1 / delta1 / delta2 * mu2 * mu2 * z + 0.16e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) + 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / 0.3e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.20e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * mu1 * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.11e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c + 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * mu2 * z / 0.6e1 - 0.1e1 / delta1 / delta2 * c * mu1 * z - 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * c - pow(delta1, -0.2e1) / delta2 * c * c * mu1 * z - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 / 0.2e1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * c * mu1 * z - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu2 * mu2 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.5e1 / delta1 / delta2 * c * mu2 * z + 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu1 * mu1 * z - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu1, 0.3e1) * z + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z;

		
		case 3:	
				return pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z - pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z / 0.2e1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) / 0.3e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z - 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z / 0.3e1 + 0.1e1 / delta1 / delta2 * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * mu2 * z / 0.6e1 + 0.1e1 / delta1 / delta2 * c * mu1 * z + 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * c - pow(delta1, -0.2e1) / delta2 * c * c * mu1 * z + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 / 0.2e1 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * c * mu1 * z + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu2 * mu2 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z - 0.1e1 / delta1 / delta2 * c * mu2 * z - 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 + 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu1 * mu1 * z + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu1, 0.3e1) * z - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z;
		
		case 4:	
				return 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z + delta1 / delta2 * z / 0.2e1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * mu1 * mu1 * z + 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * z + 0.3e1 / 0.2e1 / delta2 * mu1 * z - pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.6e1 - 0.3e1 / 0.2e1 / delta2 * c * z - pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z + pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu2 * mu2 * z / 0.3e1 - pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z / 0.2e1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) + pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) / 0.3e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * c - 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.2e1 / delta1 / delta2 * log(z) * c * mu1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c - 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.8e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z - 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * c * z + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z + 0.3e1 / 0.2e1 / delta1 / delta2 * mu1 * mu1 * z + 0.1e1 / delta1 / delta2 * c * c * z - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * mu2 * z * c + 0.2e1 * pow(delta2, -0.2e1) * mu2 * z * mu1 - 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * c * mu1 * z + pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.2e1 + 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z + 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * mu1 * z - 0.1e1 / delta1 / delta2 * mu2 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z - pow(delta2, -0.2e1) / z * mu1 * mu1 - pow(delta2, -0.2e1) / z * c * c - delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.6e1 - 0.1e1 / delta2 * log(z) * mu1 + 0.1e1 / delta2 * log(z) * c - 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - delta1 / delta2 * log(z) / 0.3e1 - 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * c - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * mu1 * mu1 - 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.2e1 * pow(delta2, -0.2e1) / z * mu1 * c + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.7e1 * pow(delta2, -0.2e1) * log(z) * mu1 * c - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.1e1 / delta1 / delta2 * log(z) * c * c + 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * mu2 * z / 0.6e1 - 0.3e1 / delta1 / delta2 * c * mu1 * z - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * c + pow(delta1, -0.2e1) / delta2 * c * c * mu1 * z - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z + 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 + 0.7e1 / delta1 * pow(delta2, -0.2e1) * c * c * mu1 * z - 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu2 * mu2 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.1e1 / delta1 / delta2 * c * mu2 * z + 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu1 * mu1 * z - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu1, 0.3e1) * z + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z;
			
		case 5:	
				return -0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z - 0.5e1 / 0.8e1 * delta1 / delta2 * z - 0.1e1 / delta1 * c * z / 0.4e1 + 0.1e1 / delta1 * mu1 * z / 0.4e1 + 0.1e1 / delta2 * mu2 * z / 0.4e1 - 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * mu1 * mu1 * z - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * z - 0.2e1 / delta2 * mu1 * z + pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.8e1 + 0.7e1 / 0.4e1 / delta2 * c * z + z / 0.8e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu2 * mu2 * z / 0.4e1 - 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * c + 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.3e1 / delta1 / delta2 * log(z) * c * mu1 - 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c + 0.15e2 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z / 0.4e1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) + 0.27e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * c * z - 0.3e1 / 0.2e1 / delta1 / delta2 * mu1 * mu1 * z - 0.1e1 / delta1 / delta2 * c * c * z + 0.7e1 / 0.4e1 * pow(delta2, -0.2e1) * mu2 * z * c - 0.2e1 * pow(delta2, -0.2e1) * mu2 * z * mu1 + 0.21e2 / 0.4e1 * pow(delta2, -0.2e1) * c * mu1 * z - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z - 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z - 0.17e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * mu1 * z + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * c * c + 0.3e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z + 0.3e1 / 0.2e1 / delta2 * log(z) * mu1 - 0.3e1 / 0.2e1 / delta2 * log(z) * c + 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + 0.3e1 / 0.8e1 * delta1 / delta2 * log(z) + 0.11e2 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.17e2 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * c * c + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * mu1 + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.9e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.9e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) / z * c - 0.9e1 / 0.4e1 * pow(delta2, -0.2e1) / z * mu1 * c - 0.7e1 * pow(delta2, -0.2e1) * log(z) * mu1 * c + 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * c * c + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.2e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + 0.5e1 / 0.2e1 / delta1 / delta2 * c * mu1 * z - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * c - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * c * c * mu1 * z + 0.15e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z - 0.1e1 / delta1 / delta2 * c * mu2 * z / 0.2e1 + 0.1e1 / delta1 / delta2 * mu1 * mu2 * z / 0.2e1;
					
		case 6:
				return 0.3e1 / 0.4e1 / delta1 * delta2 * z - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.2e1 / delta1 * c * z + 0.5e1 / 0.2e1 / delta1 * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * c * z + 0.4e1 * pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z - 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z + 0.2e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z + 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.8e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.10e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.4e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.8e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * mu1 * z - 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * c * z + 0.2e1 / delta1 / delta2 * c * c * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * mu1 * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * mu1 * z + 0.2e1 / delta1 / delta2 * mu2 * mu2 * z - 0.4e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 + 0.9e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.3e1 / 0.4e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.3e1 / 0.2e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.7e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.23e2 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.13e2 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.4e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.4e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * c * mu1 * z - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) - 0.4e1 / delta1 / delta2 * c * mu2 * z;
		
		case 7:
				return 0.5e1 / 0.6e1 / delta1 * delta2 * z - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.2e1 / delta1 * c * z + 0.5e1 / 0.2e1 / delta1 * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * c * z + 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.5e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.10e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.25e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.65e2 / 0.6e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.35e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.65e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * mu1 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * c * z + 0.5e1 / 0.2e1 / delta1 / delta2 * c * c * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * mu1 * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * mu1 * z + 0.5e1 / 0.2e1 / delta1 / delta2 * mu2 * mu2 * z - 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 + 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.3e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.20e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * c * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.65e2 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.35e2 / 0.18e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.65e2 / 0.18e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * c + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * c * mu1 * z - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu2 * mu2 * z - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z - 0.5e1 / delta1 / delta2 * c * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.4e1);
			
		case 8:
				return pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z - pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z / 0.2e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) / 0.3e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.35e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.65e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z - pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) / 0.2e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) + 0.1e1 / delta1 / delta2 * c * c * z / 0.2e1 + 0.1e1 / delta1 / delta2 * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * c + pow(delta1, -0.2e1) / delta2 * c * c * mu1 * z / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu2 * mu2 * z - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z - 0.1e1 / delta1 / delta2 * c * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.4e1);
					
		case 9:
				return -pow(delta1, -0.2e1) * c * c * z / 0.8e1 - pow(delta1, -0.2e1) * mu1 * mu1 * z / 0.8e1 - pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z / 0.4e1 - pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * mu2 * z / 0.4e1 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.9e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) + 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta1 / delta2 * c * c * z / 0.2e1 + pow(delta1, -0.2e1) * c * mu1 * z / 0.4e1 + 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z / 0.4e1 + pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.4e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * mu1 + 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * c * mu1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * mu1 * mu1 - 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.4e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.4e1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * mu2 * z / 0.8e1 - 0.1e1 / delta1 / delta2 * c * mu1 * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * c / 0.2e1 + 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * c * c * mu1 * z - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 / 0.2e1 + 0.7e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * c * c * mu1 * z - 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu2 * mu2 * z / 0.8e1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu1 * mu1 * z - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu1, 0.3e1) * z + 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z + 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.4e1);
		
		case 10:
				return 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z + delta1 / delta2 * z / 0.2e1 + 0.21e2 / 0.16e2 * pow(delta2, -0.2e1) * mu1 * mu1 * z + 0.49e2 / 0.16e2 * pow(delta2, -0.2e1) * c * c * z + 0.3e1 / 0.2e1 / delta2 * mu1 * z - pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.8e1 - 0.3e1 / 0.2e1 / delta2 * c * z - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu2 * mu2 * z / 0.4e1 + 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.9e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * c - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * c * mu1 + 0.39e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * c - 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z / 0.4e1 - pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) - 0.3e1 / 0.2e1 * delta1 * pow(delta2, -0.2e1) * c * z + 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z + 0.3e1 / 0.2e1 / delta1 / delta2 * mu1 * mu1 * z + 0.3e1 / 0.2e1 / delta1 / delta2 * c * c * z - 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * mu2 * z * c + 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) * mu2 * z * mu1 - 0.9e1 / 0.2e1 * pow(delta2, -0.2e1) * c * mu1 * z + pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.2e1 + 0.7e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z + 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z + 0.7e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * mu1 * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.4e1 - 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) / z * mu1 * mu1 - 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) / z * c * c - 0.3e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z - 0.3e1 / 0.4e1 / delta2 * log(z) * mu1 + 0.3e1 / 0.4e1 / delta2 * log(z) * c - 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - delta1 / delta2 * log(z) / 0.4e1 - 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * c - 0.13e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * mu1 + 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * c * mu1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * mu1 * mu1 - 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * c + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * c - 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + 0.39e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * c - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.3e1 / 0.4e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.3e1 / 0.4e1 / delta1 / delta2 * log(z) * c * c - 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.5e1 / 0.4e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.19e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.4e1 - 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * mu2 * z / 0.8e1 - 0.3e1 / delta1 / delta2 * c * mu1 * z + 0.11e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * c + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * c * mu1 * z - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z + 0.15e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 + 0.49e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * c * c * mu1 * z - 0.9e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu2 * mu2 * z / 0.8e1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu1 * mu1 * z - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu1, 0.3e1) * z + 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z + 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.4e1);

		
		case 11:	
				return 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z - 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * z + 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * z - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.6e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) + pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.3e1 / 0.10e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.117e3 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.63e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.14e2 / 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.27e2 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.27e2 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.78e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z - 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) + 0.7e1 / 0.10e2 / delta1 / delta2 * c * c * z - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * c * mu2 * z - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * mu1 * mu2 * z + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * c * mu1 * z + 0.7e1 / 0.10e2 / delta1 / delta2 * mu2 * mu2 * z - 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * c * mu1 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * z + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.7e1 / 0.10e2 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.7e1 / 0.10e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.2e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.7e1 / 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.7e1 / 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.9e1 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.9e1 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.28e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.36e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * c + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * c * c * mu1 * z + 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu2 * mu2 * z - 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z - 0.7e1 / 0.5e1 / delta1 / delta2 * c * mu2 * z - 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.4e1);

						
		case 12:	
				return	0.7e1 / 0.10e2 / delta1 * delta2 * z - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.101e3 / 0.50e2 / delta1 * c * z + 0.101e3 / 0.50e2 / delta1 * mu2 * z + 0.147e3 / 0.50e2 * pow(delta1, -0.2e1) * c * c * z + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * mu2 * z + 0.168e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z - 0.243e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * z + pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * z - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.186e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.36e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.33e2 / 0.10e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.93e2 / 0.25e2 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.117e3 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.63e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.186e3 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.81e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.81e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.234e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.141e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 * mu1 * z - 0.143e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) - 0.49e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * c * z + 0.93e2 / 0.50e2 / delta1 / delta2 * c * c * z - 0.193e3 / 0.50e2 * pow(delta1, -0.2e1) * c * mu2 * z + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * mu1 * mu2 * z - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * c * mu1 * z + 0.93e2 / 0.50e2 / delta1 / delta2 * mu2 * mu2 * z - 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z + 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.101e3 / 0.50e2 / delta1 / (-0.1e1 + z) * c - 0.101e3 / 0.50e2 / delta1 / (-0.1e1 + z) * mu2 + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.10e2 / delta1 * delta2 / (-0.1e1 + z) - 0.101e3 / 0.25e2 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.101e3 / 0.25e2 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.99e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.7e1 / 0.5e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.73e2 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * c * c * mu1 + 0.23e2 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * z + 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.191e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.48e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.93e2 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.93e2 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.53e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.43e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.71e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.101e3 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.97e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.101e3 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.93e2 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.93e2 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.27e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.27e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.7e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.109e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.19e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.36e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * mu2 * z * c * c + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * c * c * mu1 * z - 0.2e1 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * mu2 * mu2 * z - 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z - 0.93e2 / 0.25e2 / delta1 / delta2 * c * mu2 * z - 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.4e1);
			
									
		default:
			cout<<"This basic piece doesn't exist"; 
  }
  
}


double triangular_kernel_polynomial :: approx_AQBE_integrate_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:	
				return -pow(c - mu1 - mu2 * z + mu1 * z - delta2 * z, 0.2e1) / (-0.1e1 + z) / z * (c - 0.2e1 / 0.3e1 * mu1 + delta1 - (c - mu1) / z / 0.3e1 - mu2 / 0.3e1 - delta2 / 0.3e1 - (mu2 + delta2 - c) / (0.1e1 - z) / 0.3e1) * pow(delta1, -0.2e1) * ((c - mu1) / z / 0.3e1 + 0.4e1 / 0.3e1 * mu2 + mu1 / 0.3e1 + 0.4e1 / 0.3e1 * delta2 + (mu2 + delta2 - c) / (0.1e1 - z) / 0.3e1 - 0.5e1 / 0.3e1 * c - (mu2 + delta2 - c) / (0.1e1 - z) * z / 0.3e1) * pow(delta2, -0.2e1) / 0.2e1;			
		
		case 2:	
				return pow(c - mu2 * z - mu1 + mu1 * z + delta1 - delta1 * z - delta2 * z, 0.2e1) / (-0.1e1 + z) / z * (c - 0.2e1 / 0.3e1 * mu1 + 0.2e1 / 0.3e1 * delta1 - (mu2 + delta2 - c) / (0.1e1 - z) / 0.3e1 - mu2 / 0.3e1 - delta2 / 0.3e1 - (c - mu1 + delta1) / z / 0.3e1) * pow(delta1, -0.2e1) * ((mu2 + delta2 - c) / (0.1e1 - z) / 0.3e1 + 0.4e1 / 0.3e1 * mu2 + mu1 / 0.3e1 - delta1 / 0.3e1 + 0.4e1 / 0.3e1 * delta2 + (c - mu1 + delta1) / z / 0.3e1 - (mu2 + delta2 - c) / (0.1e1 - z) * z / 0.3e1 - 0.5e1 / 0.3e1 * c) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 3:	
				return -pow(c - mu1 + delta1 - mu2 * z + mu1 * z - delta1 * z, 0.2e1) / (-0.1e1 + z) / z * (c - 0.2e1 / 0.3e1 * mu1 + 0.2e1 / 0.3e1 * delta1 - (c - mu1 + delta1) / z / 0.3e1 - mu2 / 0.3e1 - (mu2 - c) / (0.1e1 - z) / 0.3e1) * pow(delta1, -0.2e1) * ((c - mu1 + delta1) / z / 0.3e1 + 0.4e1 / 0.3e1 * mu2 + mu1 / 0.3e1 - delta1 / 0.3e1 + (mu2 - c) / (0.1e1 - z) / 0.3e1 - 0.5e1 / 0.3e1 * c - (mu2 - c) / (0.1e1 - z) * z / 0.3e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 4:	
				return pow(c - mu2 * z - mu1 + mu1 * z, 0.2e1) / (-0.1e1 + z) / z * (c - 0.2e1 / 0.3e1 * mu1 + delta1 - (mu2 - c) / (0.1e1 - z) / 0.3e1 - mu2 / 0.3e1 - (c - mu1) / z / 0.3e1) * pow(delta1, -0.2e1) * ((mu2 - c) / (0.1e1 - z) / 0.3e1 + 0.4e1 / 0.3e1 * mu2 + mu1 / 0.3e1 + (c - mu1) / z / 0.3e1 - (mu2 - c) / (0.1e1 - z) * z / 0.3e1 - 0.5e1 / 0.3e1 * c + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 5:	
				return -0.1e1 / delta1 * (delta1 + 0.2e1 * c - 0.2e1 * mu1 - 0.2e1 * mu2 * z - 0.2e1 * delta2 * z + 0.2e1 * mu1 * z - delta1 * z) / z * (c - mu1 / 0.2e1 + 0.3e1 / 0.4e1 * delta1 - (c - mu1) / z / 0.4e1 - mu2 / 0.2e1 - delta2 / 0.2e1 - (c - mu1 + delta1) / z / 0.4e1) * ((c - mu1) / z / 0.4e1 + 0.3e1 / 0.2e1 * mu2 + mu1 / 0.2e1 + 0.3e1 / 0.2e1 * delta2 - delta1 / 0.4e1 + (c - mu1 + delta1) / z / 0.4e1 - 0.2e1 * c) * pow(delta2, -0.2e1) / 0.2e1;
					
		case 6:
				return 0.1e1 / delta2 * (-0.2e1 * mu2 * z + 0.2e1 * mu1 * z - delta2 * z + 0.2e1 * c - 0.2e1 * mu1) / (-0.1e1 + z) * (c - mu1 / 0.2e1 + delta1 - (mu2 - c) / (0.1e1 - z) / 0.4e1 - mu2 / 0.2e1 - delta2 / 0.4e1 - (mu2 + delta2 - c) / (0.1e1 - z) / 0.4e1) * pow(delta1, -0.2e1) * ((mu2 - c) / (0.1e1 - z) / 0.4e1 + 0.3e1 / 0.2e1 * mu2 + 0.5e1 / 0.4e1 * delta2 + (mu2 + delta2 - c) / (0.1e1 - z) / 0.4e1 - (mu2 - c) / (0.1e1 - z) * z / 0.4e1 - 0.3e1 / 0.2e1 * c - (mu2 + delta2 - c) / (0.1e1 - z) * z / 0.4e1) / 0.2e1;
		
		case 7:
				return -pow(-mu2 - delta2 + c, 0.2e1) * z / (-0.1e1 + z) * (0.4e1 / 0.3e1 * c - mu1 + delta1 - mu2 / 0.3e1 - delta2 / 0.3e1 - (mu2 + delta2 - c) / (0.1e1 - z) / 0.3e1) * pow(delta1, -0.2e1) * (0.4e1 / 0.3e1 * mu2 + 0.4e1 / 0.3e1 * delta2 - 0.4e1 / 0.3e1 * c + (mu2 + delta2 - c) / (0.1e1 - z) / 0.3e1 - (mu2 + delta2 - c) / (0.1e1 - z) * z / 0.3e1) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 8:
				return -pow(-mu2 + c, 0.2e1) * z / (-0.1e1 + z) * (0.4e1 / 0.3e1 * c - mu1 + delta1 - mu2 / 0.3e1 - (mu2 - c) / (0.1e1 - z) / 0.3e1) * pow(delta1, -0.2e1) * (0.4e1 / 0.3e1 * mu2 - 0.4e1 / 0.3e1 * c + (mu2 - c) / (0.1e1 - z) / 0.3e1 - (mu2 - c) / (0.1e1 - z) * z / 0.3e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
					
		case 9:
				return -(delta1 * delta1 + 0.2e1 * delta1 * c - 0.2e1 * delta1 * mu1 - 0.2e1 * delta1 * mu2 * z - 0.2e1 * delta1 * delta2 * z - 0.2e1 * mu2 * z * c + 0.2e1 * mu2 * z * mu1 - 0.2e1 * delta2 * z * c + 0.2e1 * delta2 * z * mu1 + 0.2e1 * mu1 * z * delta1 + c * c - 0.2e1 * c * mu1 + mu1 * mu1 - mu1 * mu1 * z - delta1 * delta1 * z + z * c * c) / z * (0.5e1 / 0.4e1 * c - 0.3e1 / 0.4e1 * mu1 + 0.3e1 / 0.4e1 * delta1 - mu2 / 0.2e1 - delta2 / 0.2e1 - (c - mu1 + delta1) / z / 0.4e1) * pow(delta1, -0.2e1) * (0.3e1 / 0.2e1 * mu2 + 0.3e1 / 0.2e1 * delta2 - 0.7e1 / 0.4e1 * c + mu1 / 0.4e1 - delta1 / 0.4e1 + (c - mu1 + delta1) / z / 0.4e1) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 10:
				return -(z * c * c - mu1 * mu1 * z - 0.2e1 * mu2 * z * c + 0.2e1 * mu2 * z * mu1 + c * c - 0.2e1 * c * mu1 + mu1 * mu1) / z * (0.5e1 / 0.4e1 * c - 0.3e1 / 0.4e1 * mu1 + delta1 - mu2 / 0.2e1 - (c - mu1) / z / 0.4e1) * pow(delta1, -0.2e1) * (0.3e1 / 0.2e1 * mu2 - 0.7e1 / 0.4e1 * c + mu1 / 0.4e1 + (c - mu1) / z / 0.4e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 11:	
				return -(-0.2e1 * mu2 * z * c + mu2 * mu2 * z - 0.2e1 * delta2 * z * c + 0.2e1 * delta2 * z * mu1 + z * c * c - 0.2e1 * delta1 * delta2 * z + 0.2e1 * delta1 * delta2 + 0.2e1 * delta2 * c - 0.2e1 * delta2 * mu1) / (-0.1e1 + z) * (0.6e1 / 0.5e1 * c - 0.3e1 / 0.5e1 * mu1 + 0.3e1 / 0.5e1 * delta1 - 0.3e1 / 0.5e1 * mu2 - 0.2e1 / 0.5e1 * delta2 - (mu2 - c) / (0.1e1 - z) / 0.5e1) * pow(delta1, -0.2e1) * (0.8e1 / 0.5e1 * mu2 + 0.7e1 / 0.5e1 * delta2 - 0.8e1 / 0.5e1 * c + (mu2 - c) / (0.1e1 - z) / 0.5e1 - (mu2 - c) / (0.1e1 - z) * z / 0.5e1) * pow(delta2, -0.2e1) / 0.2e1;
						
		case 12:	
				return	-(-0.2e1 * delta2 * z * mu1 + mu2 * mu2 * z + 0.2e1 * mu2 * z * delta2 - 0.2e1 * mu2 * z * c + delta2 * delta2 * z + z * c * c - 0.2e1 * delta2 * c + 0.2e1 * delta2 * mu1) / (-0.1e1 + z) * (0.6e1 / 0.5e1 * c - 0.3e1 / 0.5e1 * mu1 + delta1 - 0.3e1 / 0.5e1 * mu2 - delta2 / 0.5e1 - (mu2 + delta2 - c) / (0.1e1 - z) / 0.5e1) * pow(delta1, -0.2e1) * (0.8e1 / 0.5e1 * mu2 - 0.8e1 / 0.5e1 * c + 0.6e1 / 0.5e1 * delta2 + (mu2 + delta2 - c) / (0.1e1 - z) / 0.5e1 - (mu2 + delta2 - c) / (0.1e1 - z) * z / 0.5e1) * pow(delta2, -0.2e1) / 0.2e1;
									
		default:
			cout<<"This basic piece doesn't exist"; 
  }
  
}

double triangular_kernel_polynomial :: approx_AQBE_expected_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:	
				return -0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.9e1 - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) * log(z) * c * mu1 / 0.3e1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - pow(delta1, -0.2e1) * log(z) * mu1 * mu1 / 0.6e1 - pow(delta1, -0.2e1) * log(z) * c * c / 0.6e1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.6e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu2 / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * mu2 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2;
 					
		case 2:	
				return log(z) / 0.6e1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu2 - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) + 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) - 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.9e1 + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * c + 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - pow(delta1, -0.2e1) * log(z) * c * mu1 / 0.3e1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) + 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.25e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.4e1 / 0.3e1 / delta1 / delta2 * log(z) * c * c + 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.7e1 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.7e1 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * c + 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) + 0.7e1 / 0.9e1 / delta1 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + pow(delta1, -0.2e1) * log(z) * mu1 * mu1 / 0.6e1 + pow(delta1, -0.2e1) * log(z) * c * c / 0.6e1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.7e1 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.7e1 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.7e1 / 0.9e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.14e2 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 + 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 - 0.7e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.10e2 / 0.3e1 / delta1 / delta2 * log(z) * c * mu1 + 0.14e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu2 / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * mu2 / 0.3e1 + 0.4e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu2 * mu1 + 0.5e1 / 0.3e1 / delta2 / z * c - 0.5e1 / 0.3e1 / delta2 / z * mu1 + delta1 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.12e2 - 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) / z + 0.5e1 / 0.9e1 * delta1 / delta2 / z + 0.2e1 / 0.3e1 * delta1 / delta2 * log(z) - 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * c + pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.6e1 + 0.1e1 / delta1 * log(z) * c / 0.3e1 + 0.5e1 / 0.3e1 / delta2 * log(z) * c - 0.2e1 / delta2 * log(z) * mu1 - 0.1e1 / delta1 * log(z) * mu1 / 0.3e1 + 0.1e1 / delta2 * log(z) * mu2 / 0.3e1 + pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c / 0.2e1 + pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 / 0.2e1 - 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) / z * c * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 - 0.10e2 / 0.3e1 / delta1 / delta2 / z * c * mu1 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu2 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * mu2 + 0.2e1 / 0.3e1 / delta1 / delta2 * log(z) * c * mu2 - 0.2e1 / 0.3e1 / delta1 / delta2 * log(z) * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu2 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 * mu2 / 0.3e1 - pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 + 0.7e1 * pow(delta2, -0.2e1) / z * c * mu1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * c * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 - delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 / 0.3e1 + delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) / 0.3e1 + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c + 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu2 + 0.5e1 / 0.3e1 / delta1 / delta2 / z * c * c + 0.5e1 / 0.3e1 / delta1 / delta2 / z * mu1 * mu1 + 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2;
						
		case 3:	
				return -0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) / 0.3e1 - 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) / 0.3e1 + 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.3e1 - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.2e1 - 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.25e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.2e1 + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * c * c - 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 - 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 + 0.7e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.3e1 / delta1 / delta2 * log(z) * c * mu1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.4e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu2 * mu1 - 0.1e1 / delta2 / z * c + 0.1e1 / delta2 / z * mu1 - delta1 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.12e2 + 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) / z - delta1 / delta2 / z / 0.3e1 - delta1 / delta2 * log(z) / 0.2e1 + 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * c - pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.6e1 - 0.3e1 / 0.2e1 / delta2 * log(z) * c + 0.3e1 / 0.2e1 / delta2 * log(z) * mu1 - pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c / 0.2e1 - pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 / 0.2e1 + 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) / z * c * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 + 0.2e1 / delta1 / delta2 / z * c * mu1 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu2 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu2 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 * mu2 / 0.3e1 + pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 - 0.7e1 * pow(delta2, -0.2e1) / z * c * mu1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * c * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 + delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 / 0.3e1 - delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) / 0.3e1 - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu2 - 0.1e1 / delta1 / delta2 / z * c * c - 0.1e1 / delta1 / delta2 / z * mu1 * mu1 - 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2;

		
		case 4:	
				return 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.3e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.2e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2;
		
		case 5:	
				return log(z) / 0.8e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.1e1 / delta1 / delta2 * log(z) * c * c + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.15e2 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.6e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.5e1 / 0.2e1 / delta1 / delta2 * log(z) * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.15e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu2 * mu1 + 0.3e1 / 0.2e1 / delta2 / z * c - 0.3e1 / 0.2e1 / delta2 / z * mu1 + 0.3e1 / 0.64e2 * delta1 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) - 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z + 0.3e1 / 0.8e1 * delta1 / delta2 / z + 0.5e1 / 0.8e1 * delta1 / delta2 * log(z) - 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * c + pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.8e1 + 0.1e1 / delta1 * log(z) * c / 0.4e1 + 0.7e1 / 0.4e1 / delta2 * log(z) * c - 0.2e1 / delta2 * log(z) * mu1 - 0.1e1 / delta1 * log(z) * mu1 / 0.4e1 + 0.1e1 / delta2 * log(z) * mu2 / 0.4e1 + 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c + 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 - 0.11e2 / 0.4e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 - 0.17e2 / 0.4e1 * pow(delta2, -0.2e1) / z * c * c + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 * mu1 - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 - 0.3e1 / delta1 / delta2 / z * c * mu1 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu2 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 * mu2 / 0.4e1 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 + 0.7e1 * pow(delta2, -0.2e1) / z * c * mu1 + 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) / z * c * mu2 - 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 - 0.9e1 / 0.32e2 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 + 0.9e1 / 0.32e2 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c - 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.3e1) + 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) + 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.2e1 * delta1 * pow(delta2, -0.2e1) / z * c + 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu2 + 0.3e1 / 0.2e1 / delta1 / delta2 / z * c * c + 0.3e1 / 0.2e1 / delta1 / delta2 / z * mu1 * mu1 + 0.21e2 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.7e1 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.17e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.27e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2;
					
		case 6:
				return -0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.9e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.2e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.5e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.3e1 / 0.4e1 / delta1 * delta2 / (-0.1e1 + z) - 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.3e1 / 0.4e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.4e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.4e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2;

		
		case 7:
				return -0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.25e2 / 0.18e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.6e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.25e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2;

		
		case 8:
				return -0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.3e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.2e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.25e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2;
					
		case 9:
				return log(z) / 0.8e1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.4e1 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu2 / 0.2e1 - 0.13e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 - 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) + 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) - 0.19e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.3e1 / 0.64e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) + 0.3e1 / 0.64e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - pow(delta1, -0.2e1) * log(z) * c * mu1 / 0.4e1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) - 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) + 0.7e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.11e2 / 0.8e1 / delta1 / delta2 * log(z) * c * c + 0.15e2 / 0.8e1 / delta1 / delta2 * log(z) * mu1 * mu1 + pow(delta1, -0.2e1) * log(z) * mu1 * mu1 / 0.8e1 + pow(delta1, -0.2e1) * log(z) * c * c / 0.8e1 + 0.9e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 - 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) - 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 - 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 + 0.6e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 - 0.39e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.13e2 / 0.4e1 / delta1 / delta2 * log(z) * c * mu1 - 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.8e1 - 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.8e1 - 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu2 / 0.4e1 + pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * mu2 / 0.4e1 + 0.11e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.15e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.49e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.9e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu2 * mu1 + 0.9e1 / 0.8e1 / delta2 / z * c - 0.9e1 / 0.8e1 / delta2 / z * mu1 + 0.3e1 / 0.64e2 * delta1 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) - 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z + 0.3e1 / 0.8e1 * delta1 / delta2 / z + 0.5e1 / 0.8e1 * delta1 / delta2 * log(z) - 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - 0.21e2 / 0.16e2 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.49e2 / 0.16e2 * pow(delta2, -0.2e1) * log(z) * c * c + pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.8e1 + 0.1e1 / delta1 * log(z) * c / 0.4e1 + 0.13e2 / 0.8e1 / delta2 * log(z) * c - 0.15e2 / 0.8e1 / delta2 * log(z) * mu1 - 0.1e1 / delta1 * log(z) * mu1 / 0.4e1 + 0.1e1 / delta2 * log(z) * mu2 / 0.4e1 + 0.9e1 / 0.32e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c + 0.9e1 / 0.32e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 - 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 - 0.3e1 * pow(delta2, -0.2e1) / z * c * c + 0.9e1 / 0.16e2 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 * mu1 - 0.9e1 / 0.16e2 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 - 0.9e1 / 0.4e1 / delta1 / delta2 / z * c * mu1 + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu2 + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu2 / 0.4e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 * mu2 / 0.4e1 - 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 + 0.39e2 / 0.8e1 * pow(delta2, -0.2e1) / z * c * mu1 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * c * mu2 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 - 0.3e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 + 0.3e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c - 0.3e1 / 0.16e2 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.3e1) + 0.3e1 / 0.16e2 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) + 0.5e1 / 0.4e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * c + 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu2 + 0.9e1 / 0.8e1 / delta1 / delta2 / z * c * c + 0.9e1 / 0.8e1 / delta1 / delta2 / z * mu1 * mu1 + 0.9e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.7e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.3e1 / 0.2e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2;

		
		case 10:
				return 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.4e1 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 - 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) / 0.4e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.4e1 + pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) / 0.4e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.4e1 + 0.3e1 / 0.64e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) + 0.3e1 / 0.64e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.4e1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.9e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 - 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) - 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 - 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.8e1 - 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.8e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + 0.7e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1;

		
		case 11:	
				return -0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) - 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.3e1 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.3e1 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.3e1 / 0.50e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.3e1 / 0.50e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.7e1 / 0.25e2 / delta1 / (-0.1e1 + z) * c + 0.7e1 / 0.25e2 / delta1 / (-0.1e1 + z) * mu2 + 0.7e1 / 0.25e2 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.7e1 / 0.25e2 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.3e1 / 0.25e2 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.57e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.6e1 / 0.5e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.3e1 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2;
						
		case 12:	
				return -0.23e2 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.48e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 / 0.50e2 - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.23e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.11e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.193e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.143e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.49e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.51e2 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.23e2 / 0.10e2 / delta1 / (-0.1e1 + z) * c - 0.23e2 / 0.10e2 / delta1 / (-0.1e1 + z) * mu2 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.10e2 / delta1 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.147e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.23e2 / 0.10e2 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.23e2 / 0.10e2 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.7e1 / 0.10e2 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.39e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.66e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.243e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.168e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2;
				
									
		default:
			cout<<"This basic piece doesn't exist"; 
  }
  
}


double triangular_kernel_polynomial :: approx_AQBE_second_moment_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:	
				return 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.28e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.11e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.20e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.3e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.11e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.26e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.16e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu2 * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 * c + 0.5e1 / 0.6e1 / delta1 * delta2 * z + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * c * z - pow(delta1, -0.2e1) * mu1 * mu1 * z / 0.6e1 + 0.5e1 / 0.2e1 / delta1 * mu2 * z - 0.5e1 / 0.2e1 / delta1 * c * z + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu1 - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu1, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * mu1 / 0.6e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * c - 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 - pow(delta1, -0.2e1) / delta2 * c * c * z * mu1 + 0.1e1 / delta1 / delta2 * c * z * mu1 - 0.5e1 / delta1 / delta2 * c * z * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z - 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * pow(mu1, 0.3e1) - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c + 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 / 0.2e1 - 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * c * z * mu2 - pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * z * mu2 / 0.3e1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * z * c + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * c * mu2 * z - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * mu1 * mu2 * z + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * mu1 * z * c + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu1, 0.4e1) + 0.5e1 / 0.2e1 / delta1 / delta2 * mu2 * mu2 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * mu1 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * c * z + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) / 0.3e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z + 0.2e1 * pow(delta1, -0.2e1) / delta2 * pow(c, 0.3e1) * z - 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 + 0.2e1 / delta1 / delta2 * z * c * c;
 			
		
		case 2:	
				return z / 0.6e1 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * z * c + 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * z * mu1 + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z - 0.1e1 / delta1 * mu1 * z / 0.3e1 + 0.1e1 / delta2 * mu2 * z / 0.3e1 - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * z + 0.5e1 / 0.3e1 / delta2 * c * z - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * mu1 * mu1 * z - 0.2e1 / delta2 * z * mu1 + pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.6e1 + 0.2e1 / 0.3e1 * delta1 / delta2 * z - 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu2 * mu2 * z / 0.3e1 - 0.2e1 / 0.3e1 / delta1 / delta2 * mu1 * mu2 * z - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 - 0.28e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.11e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 + 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * c + 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.5e1 / 0.3e1 / delta1 / delta2 * log(z) * c * c - 0.5e1 / 0.3e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.14e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.14e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.20e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * c + 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) + 0.7e1 / 0.9e1 / delta1 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.14e2 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.14e2 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.14e2 / 0.9e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.14e2 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.11e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.26e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.10e2 / 0.3e1 / delta1 / delta2 * log(z) * c * mu1 + 0.28e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.6e1 - 0.5e1 / 0.9e1 * delta1 / delta2 * log(z) + 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * c - 0.5e1 / 0.3e1 / delta2 * log(z) * c + 0.5e1 / 0.3e1 / delta2 * log(z) * mu1 + pow(delta2, -0.2e1) / z * mu1 * mu1 + pow(delta2, -0.2e1) / z * c * c - 0.2e1 * pow(delta2, -0.2e1) / z * c * mu1 - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.7e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 - 0.16e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu2 * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 * c - 0.7e1 / 0.9e1 / delta1 * delta2 * z - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * c * z + pow(delta1, -0.2e1) * mu1 * mu1 * z / 0.6e1 - 0.7e1 / 0.3e1 / delta1 * mu2 * z + 0.8e1 / 0.3e1 / delta1 * c * z - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu1 + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu1, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * mu1 / 0.6e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c - 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * c + 0.7e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * c * c * z * mu1 - 0.10e2 / 0.3e1 / delta1 / delta2 * c * z * mu1 + 0.16e2 / 0.3e1 / delta1 / delta2 * c * z * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 - 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * pow(mu1, 0.3e1) + 0.8e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 + 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * c * z * mu2 + pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * z * mu2 / 0.3e1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * z * c - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * c * mu2 * z + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * mu1 * mu2 * z - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * mu1 * z * c - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu1, 0.4e1) - 0.7e1 / 0.3e1 / delta1 / delta2 * mu2 * mu2 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * mu1 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * c * z - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z - 0.2e1 * pow(delta1, -0.2e1) / delta2 * pow(c, 0.3e1) * z + 0.2e1 / delta1 / delta2 * mu1 * mu1 * z - 0.1e1 / delta1 / delta2 * z * c * c - 0.2e1 * pow(delta2, -0.2e1) * z * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * c * mu2 * z + 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * c * z * mu1;

		
		case 3:	
				return 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * z * c - 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * z * mu1 - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z + 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * z - 0.3e1 / 0.2e1 / delta2 * c * z + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * mu1 * mu1 * z + 0.3e1 / 0.2e1 / delta2 * z * mu1 - pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.6e1 - delta1 / delta2 * z / 0.2e1 + 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu2 * mu2 * z / 0.3e1 + pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) / 0.3e1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.1e1 / delta1 / delta2 * log(z) * c * c + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.2e1 / delta1 / delta2 * log(z) * c * mu1 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.6e1 + delta1 / delta2 * log(z) / 0.3e1 - 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * c + 0.1e1 / delta2 * log(z) * c - 0.1e1 / delta2 * log(z) * mu1 - pow(delta2, -0.2e1) / z * mu1 * mu1 - pow(delta2, -0.2e1) / z * c * c + 0.2e1 * pow(delta2, -0.2e1) / z * c * mu1 + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c + 0.7e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu2 * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 * c + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu1 - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu1, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * mu1 / 0.6e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c + 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * c - 0.7e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * c * c * z * mu1 + 0.3e1 / delta1 / delta2 * c * z * mu1 - 0.1e1 / delta1 / delta2 * c * z * mu2 + pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z / 0.2e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z - 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * pow(mu1, 0.3e1) - 0.8e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * c * c * z * mu2 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * z * c + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu1, 0.4e1) + 0.1e1 / delta1 / delta2 * mu2 * mu2 * z / 0.2e1 + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z - 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.2e1 - 0.3e1 / 0.2e1 / delta1 / delta2 * mu1 * mu1 * z - 0.1e1 / delta1 / delta2 * z * c * c + 0.2e1 * pow(delta2, -0.2e1) * z * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * c * mu2 * z - 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * c * z * mu1;

		
		case 4:	
				return -pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) / 0.3e1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu2 * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 * c - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu1 + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu1, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * mu1 / 0.6e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * c + 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 - pow(delta1, -0.2e1) / delta2 * c * c * z * mu1 - 0.1e1 / delta1 / delta2 * c * z * mu1 + 0.1e1 / delta1 / delta2 * c * z * mu2 - pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z / 0.2e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 - 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * pow(mu1, 0.3e1) + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c - 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * c * c * z * mu2 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * z * c - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu1, 0.4e1) - 0.1e1 / delta1 / delta2 * mu2 * mu2 * z / 0.2e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.2e1 + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1;
		
		case 5:	
				return z / 0.8e1 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) - 0.27e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * z * c + 0.17e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * z * mu1 + 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z - 0.1e1 / delta1 * mu1 * z / 0.4e1 + 0.1e1 / delta2 * mu2 * z / 0.4e1 - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * z + 0.7e1 / 0.4e1 / delta2 * c * z - 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * mu1 * mu1 * z - 0.2e1 / delta2 * z * mu1 + pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.8e1 + 0.5e1 / 0.8e1 * delta1 / delta2 * z - 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu2 * mu2 * z / 0.4e1 - 0.1e1 / delta1 / delta2 * mu1 * mu2 * z / 0.2e1 + 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * c * c - 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.3e1 / delta1 / delta2 * log(z) * c * mu1 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.15e2 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.3e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z - 0.3e1 / 0.8e1 * delta1 / delta2 * log(z) + 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + 0.11e2 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.17e2 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * c * c - 0.3e1 / 0.2e1 / delta2 * log(z) * c + 0.3e1 / 0.2e1 / delta2 * log(z) * mu1 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * c * c - 0.9e1 / 0.4e1 * pow(delta2, -0.2e1) / z * c * mu1 - 0.9e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.9e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) / z * c - 0.7e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 - 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.2e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z + 0.1e1 / delta1 * c * z / 0.4e1 - 0.15e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * c + 0.5e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 - 0.5e1 / 0.2e1 / delta1 / delta2 * c * z * mu1 + 0.1e1 / delta1 / delta2 * c * z * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c / 0.4e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) + 0.3e1 / 0.2e1 / delta1 / delta2 * mu1 * mu1 * z + 0.1e1 / delta1 / delta2 * z * c * c - 0.2e1 * pow(delta2, -0.2e1) * z * mu1 * mu2 + 0.7e1 / 0.4e1 * pow(delta2, -0.2e1) * c * mu2 * z + 0.21e2 / 0.4e1 * pow(delta2, -0.2e1) * c * z * mu1;
					
		case 6:
				return 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.2e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.23e2 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.13e2 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + 0.4e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.4e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.9e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.7e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.3e1 / 0.4e1 / delta1 * delta2 / (-0.1e1 + z) - 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.3e1 / 0.2e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.4e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.10e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.8e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.8e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.4e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.3e1 / 0.4e1 / delta1 * delta2 * z + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * c * z + 0.5e1 / 0.2e1 / delta1 * mu2 * z - 0.5e1 / 0.2e1 / delta1 * c * z - 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * c * z * mu1 - 0.4e1 / delta1 / delta2 * c * z * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z - 0.2e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z - 0.4e1 * pow(delta1, -0.2e1) / delta2 * c * c * z * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * mu1 * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * mu1 * z * c + 0.2e1 / delta1 / delta2 * mu2 * mu2 * z - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * mu1 * z + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * c * z + 0.2e1 * pow(delta1, -0.2e1) / delta2 * pow(c, 0.3e1) * z + 0.2e1 / delta1 / delta2 * z * c * c;
		
		case 7:
				return 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.4e1) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.10e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.65e2 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.35e2 / 0.18e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.65e2 / 0.18e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.20e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.3e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.35e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.65e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.65e2 / 0.6e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.25e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu2 * mu1 + 0.5e1 / 0.6e1 / delta1 * delta2 * z + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * c * z + 0.5e1 / 0.2e1 / delta1 * mu2 * z - 0.5e1 / 0.2e1 / delta1 * c * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * c * z * mu1 - 0.5e1 / delta1 / delta2 * c * z * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 - 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * c * z * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * mu1 * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * mu1 * z * c + 0.5e1 / 0.2e1 / delta1 / delta2 * mu2 * mu2 * z - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * mu1 * z + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * c * z + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * pow(c, 0.3e1) * z + 0.5e1 / 0.2e1 / delta1 / delta2 * z * c * c;

		
		case 8:
				return -0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.4e1) + pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) / 0.3e1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.35e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.65e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu2 * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c - pow(delta1, -0.2e1) / delta2 * c * c * z * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 * c * z * mu2 + pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * c * c * z * mu2 + 0.1e1 / delta1 / delta2 * mu2 * mu2 * z / 0.2e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + pow(delta1, -0.2e1) / delta2 * pow(c, 0.3e1) * z / 0.2e1 + 0.1e1 / delta1 / delta2 * z * c * c / 0.2e1;

					
		case 9:
				return z / 0.8e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) - 0.3e1 / 0.2e1 * delta1 * pow(delta2, -0.2e1) * z * c + 0.7e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * z * mu1 + 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z - 0.1e1 / delta1 * mu1 * z / 0.4e1 + 0.1e1 / delta2 * mu2 * z / 0.4e1 - 0.49e2 / 0.16e2 * pow(delta2, -0.2e1) * c * c * z + 0.13e2 / 0.8e1 / delta2 * c * z - 0.21e2 / 0.16e2 * pow(delta2, -0.2e1) * mu1 * mu1 * z - 0.15e2 / 0.8e1 / delta2 * z * mu1 + pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.8e1 - 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.4e1) + 0.5e1 / 0.8e1 * delta1 / delta2 * z - 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu2 * mu2 * z / 0.4e1 - 0.1e1 / delta1 / delta2 * mu1 * mu2 * z / 0.2e1 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.19e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.9e1 / 0.8e1 / delta1 / delta2 * log(z) * c * c - 0.9e1 / 0.8e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.9e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.9e1 / 0.4e1 / delta1 / delta2 * log(z) * c * mu1 + 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.39e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.3e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z - 0.3e1 / 0.8e1 * delta1 / delta2 * log(z) + 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * c - 0.9e1 / 0.8e1 / delta2 * log(z) * c + 0.9e1 / 0.8e1 / delta2 * log(z) * mu1 + 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) / z * mu1 * mu1 + 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) / z * c * c - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * c * mu1 - 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.39e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.5e1 / 0.4e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z / 0.2e1 - 0.13e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * mu1 / 0.4e1 - 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu2 * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 * c + pow(delta1, -0.2e1) * c * c * z / 0.8e1 + pow(delta1, -0.2e1) * mu1 * mu1 * z / 0.8e1 + 0.1e1 / delta1 * c * z / 0.4e1 - 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu1, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * mu1 / 0.8e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c / 0.8e1 - 0.9e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * c + 0.49e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 - 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * c * c * z * mu1 - 0.13e2 / 0.4e1 / delta1 / delta2 * c * z * mu1 + 0.1e1 / delta1 / delta2 * c * z * mu2 / 0.2e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * pow(mu1, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c / 0.4e1 + 0.11e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 + 0.15e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * c * c * z * mu2 / 0.4e1 + pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * z * mu2 / 0.4e1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * z * c - pow(delta1, -0.2e1) * mu1 * z * c / 0.4e1 - 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu1, 0.4e1) + 0.7e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) - 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * pow(c, 0.3e1) * z + 0.15e2 / 0.8e1 / delta1 / delta2 * mu1 * mu1 * z + 0.11e2 / 0.8e1 / delta1 / delta2 * z * c * c - 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) * z * mu1 * mu2 + 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * c * mu2 * z + 0.9e1 / 0.2e1 * pow(delta2, -0.2e1) * c * z * mu1;

		
		case 10:
				return -0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) - 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.4e1) - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.4e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.4e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.4e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.4e1 + 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.9e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * mu1 / 0.4e1 - 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu2 * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 * c - 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu1, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * mu1 / 0.8e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c / 0.8e1 - 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * c + 0.7e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * c * z * mu1 - 0.1e1 / delta1 / delta2 * c * z * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * pow(mu1, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * z * mu1 * mu1 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * z * c - 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu1, 0.4e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) / 0.4e1 - pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(c, 0.3e1) * z / 0.2e1 + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta1 / delta2 * z * c * c / 0.2e1;
		
		case 11:	
				return -0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) - 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.4e1) - pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.6e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.2e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.3e1 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.3e1 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.36e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.28e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.27e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.27e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.3e1 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.3e1 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.7e1 / 0.25e2 / delta1 / (-0.1e1 + z) * c + 0.7e1 / 0.25e2 / delta1 / (-0.1e1 + z) * mu2 + 0.14e2 / 0.25e2 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.14e2 / 0.25e2 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.3e1 / 0.25e2 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.3e1 / 0.10e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.6e1 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.117e3 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.63e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.78e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.81e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.81e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * z + 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * mu1 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu2 * mu1 - 0.7e1 / 0.25e2 / delta1 * mu2 * z + 0.7e1 / 0.25e2 / delta1 * c * z - 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * c * c * z * mu1 - 0.3e1 / 0.25e2 / delta1 / delta2 * c * z * mu2 + 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 - 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * c * z * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * c * mu2 * z + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * mu1 * mu2 * z - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * mu1 * z * c + 0.3e1 / 0.50e2 / delta1 / delta2 * mu2 * mu2 * z + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) / delta2 * pow(c, 0.3e1) * z + 0.3e1 / 0.50e2 / delta1 / delta2 * z * c * c - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * z - 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * z;
						
		case 12:	
				return	0.2e1 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) - 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.4e1) - 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.186e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.48e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.191e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.43e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.53e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.71e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.97e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.101e3 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.101e3 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.36e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.109e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.7e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.19e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.9e1 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.9e1 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.73e2 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.23e2 / 0.10e2 / delta1 / (-0.1e1 + z) * c - 0.23e2 / 0.10e2 / delta1 / (-0.1e1 + z) * mu2 - 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.10e2 / delta1 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.99e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.23e2 / 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.23e2 / 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.7e1 / 0.5e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.33e2 / 0.10e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.36e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.117e3 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.63e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.141e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.234e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.27e2 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.27e2 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.23e2 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * z + 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * mu1 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu2 * mu1 + 0.7e1 / 0.10e2 / delta1 * delta2 * z + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.147e3 / 0.50e2 * pow(delta1, -0.2e1) * c * c * z + 0.23e2 / 0.10e2 / delta1 * mu2 * z - 0.23e2 / 0.10e2 / delta1 * c * z - 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * c * c * z * mu1 - 0.5e1 / delta1 / delta2 * c * z * mu2 + 0.243e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 - 0.168e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * c * z * mu2 + 0.193e3 / 0.50e2 * pow(delta1, -0.2e1) * c * mu2 * z - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * mu1 * mu2 * z + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * mu1 * z * c + 0.5e1 / 0.2e1 / delta1 / delta2 * mu2 * mu2 * z - 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 * mu1 * z + 0.49e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * c * z + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + 0.143e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(c, 0.3e1) * z + 0.5e1 / 0.2e1 / delta1 / delta2 * z * c * c - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * mu2 * z - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * z - pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * z;		
									
		default:
			cout<<"This basic piece doesn't exist"; 
  }
  
}

double triangular_kernel_polynomial :: approx_EBRC_integrate_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:	
				return -pow(c - mu1 - mu2 * z + mu1 * z, 0.2e1) / (-0.1e1 + z) / z * (c - 0.2e1 / 0.3e1 * mu1 + delta1 - (c - mu1) / z / 0.3e1 - mu2 / 0.3e1 - (mu2 - c) / (0.1e1 - z) / 0.3e1) * pow(delta1, -0.2e1) * (0.5e1 / 0.3e1 * c - mu1 / 0.3e1 + (mu2 - c) / (0.1e1 - z) * z / 0.3e1 - (c - mu1) / z / 0.3e1 - 0.4e1 / 0.3e1 * mu2 - (mu2 - c) / (0.1e1 - z) / 0.3e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 2:	
				return pow(c - mu2 * z - mu1 + mu1 * z + delta1 - delta1 * z, 0.2e1) / (-0.1e1 + z) / z * (c - 0.2e1 / 0.3e1 * mu1 + 0.2e1 / 0.3e1 * delta1 - (mu2 - c) / (0.1e1 - z) / 0.3e1 - mu2 / 0.3e1 - (c - mu1 + delta1) / z / 0.3e1) * pow(delta1, -0.2e1) * ((mu2 - c) / (0.1e1 - z) * z / 0.3e1 + 0.5e1 / 0.3e1 * c - mu1 / 0.3e1 + delta1 / 0.3e1 - (mu2 - c) / (0.1e1 - z) / 0.3e1 - 0.4e1 / 0.3e1 * mu2 - (c - mu1 + delta1) / z / 0.3e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 3:	
				return -pow(c - mu1 + delta1 - mu2 * z + mu1 * z - delta1 * z + delta2 * z, 0.2e1) / (-0.1e1 + z) / z * (c - 0.2e1 / 0.3e1 * mu1 + 0.2e1 / 0.3e1 * delta1 - (c - mu1 + delta1) / z / 0.3e1 - mu2 / 0.3e1 + delta2 / 0.3e1 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.3e1) * pow(delta1, -0.2e1) * (0.5e1 / 0.3e1 * c - mu1 / 0.3e1 + delta1 / 0.3e1 + (mu2 - delta2 - c) / (0.1e1 - z) * z / 0.3e1 - (c - mu1 + delta1) / z / 0.3e1 - 0.4e1 / 0.3e1 * mu2 + 0.4e1 / 0.3e1 * delta2 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.3e1) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 4:	
				return pow(c - mu2 * z - mu1 + mu1 * z + delta2 * z, 0.2e1) / (-0.1e1 + z) / z * (c - 0.2e1 / 0.3e1 * mu1 + delta1 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.3e1 - mu2 / 0.3e1 + delta2 / 0.3e1 - (c - mu1) / z / 0.3e1) * pow(delta1, -0.2e1) * ((mu2 - delta2 - c) / (0.1e1 - z) * z / 0.3e1 + 0.5e1 / 0.3e1 * c - mu1 / 0.3e1 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.3e1 - 0.4e1 / 0.3e1 * mu2 + 0.4e1 / 0.3e1 * delta2 - (c - mu1) / z / 0.3e1) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 5:	
				return -0.1e1 / delta1 * (-0.2e1 * mu2 * z + 0.2e1 * c - 0.2e1 * mu1 + 0.2e1 * mu1 * z + delta1 - delta1 * z) / z * (c - mu1 / 0.2e1 + 0.3e1 / 0.4e1 * delta1 - (c - mu1) / z / 0.4e1 - mu2 / 0.2e1 - (c - mu1 + delta1) / z / 0.4e1) * (0.2e1 * c - mu1 / 0.2e1 + delta1 / 0.4e1 - (c - mu1) / z / 0.4e1 - 0.3e1 / 0.2e1 * mu2 - (c - mu1 + delta1) / z / 0.4e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
					
		case 6:
				return 0.1e1 / delta2 * (-0.2e1 * mu2 * z + delta2 * z + 0.2e1 * mu1 * z + 0.2e1 * c - 0.2e1 * mu1) / (-0.1e1 + z) * (c - mu1 / 0.2e1 + delta1 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.4e1 - mu2 / 0.2e1 + delta2 / 0.4e1 - (mu2 - c) / (0.1e1 - z) / 0.4e1) * pow(delta1, -0.2e1) * ((mu2 - delta2 - c) / (0.1e1 - z) * z / 0.4e1 + 0.3e1 / 0.2e1 * c + (mu2 - c) / (0.1e1 - z) * z / 0.4e1 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.4e1 - 0.3e1 / 0.2e1 * mu2 + 0.5e1 / 0.4e1 * delta2 - (mu2 - c) / (0.1e1 - z) / 0.4e1) / 0.2e1;
		
		case 7:
				return -pow(-mu2 + c, 0.2e1) * z / (-0.1e1 + z) * (0.4e1 / 0.3e1 * c - mu1 + delta1 - mu2 / 0.3e1 - (mu2 - c) / (0.1e1 - z) / 0.3e1) * pow(delta1, -0.2e1) * ((mu2 - c) / (0.1e1 - z) * z / 0.3e1 - 0.4e1 / 0.3e1 * mu2 + 0.4e1 / 0.3e1 * c - (mu2 - c) / (0.1e1 - z) / 0.3e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 8:
				return -pow(-mu2 + delta2 + c, 0.2e1) * z / (-0.1e1 + z) * (0.4e1 / 0.3e1 * c - mu1 + delta1 - mu2 / 0.3e1 + delta2 / 0.3e1 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.3e1) * pow(delta1, -0.2e1) * ((mu2 - delta2 - c) / (0.1e1 - z) * z / 0.3e1 - 0.4e1 / 0.3e1 * mu2 + 0.4e1 / 0.3e1 * delta2 + 0.4e1 / 0.3e1 * c - (mu2 - delta2 - c) / (0.1e1 - z) / 0.3e1) * pow(delta2, -0.2e1) / 0.2e1;
					
		case 9:
				return -(delta1 * delta1 + 0.2e1 * delta1 * c - 0.2e1 * delta1 * mu1 - 0.2e1 * delta1 * mu2 * z - 0.2e1 * mu2 * z * c + 0.2e1 * mu2 * z * mu1 + 0.2e1 * mu1 * z * delta1 + c * c - 0.2e1 * c * mu1 + mu1 * mu1 - mu1 * mu1 * z - delta1 * delta1 * z + z * c * c) / z * (0.5e1 / 0.4e1 * c - 0.3e1 / 0.4e1 * mu1 + 0.3e1 / 0.4e1 * delta1 - mu2 / 0.2e1 - (c - mu1 + delta1) / z / 0.4e1) * pow(delta1, -0.2e1) * (0.7e1 / 0.4e1 * c - mu1 / 0.4e1 + delta1 / 0.4e1 - 0.3e1 / 0.2e1 * mu2 - (c - mu1 + delta1) / z / 0.4e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 10:
				return -(z * c * c - mu1 * mu1 * z - 0.2e1 * mu2 * z * c + 0.2e1 * mu2 * z * mu1 + 0.2e1 * c * delta2 * z - 0.2e1 * mu1 * delta2 * z + c * c - 0.2e1 * c * mu1 + mu1 * mu1) / z * (0.5e1 / 0.4e1 * c - 0.3e1 / 0.4e1 * mu1 + delta1 - mu2 / 0.2e1 + delta2 / 0.2e1 - (c - mu1) / z / 0.4e1) * pow(delta1, -0.2e1) * (0.7e1 / 0.4e1 * c - mu1 / 0.4e1 - 0.3e1 / 0.2e1 * mu2 + 0.3e1 / 0.2e1 * delta2 - (c - mu1) / z / 0.4e1) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 11:	
				return -(0.2e1 * mu1 * delta2 * z + delta2 * delta2 * z + mu2 * mu2 * z + z * c * c - 0.2e1 * mu2 * z * c - 0.2e1 * mu2 * z * delta2 - 0.2e1 * delta2 * delta1 * z + 0.2e1 * c * delta2 - 0.2e1 * mu1 * delta2 + 0.2e1 * delta2 * delta1) / (-0.1e1 + z) * (0.6e1 / 0.5e1 * c - 0.3e1 / 0.5e1 * mu1 + 0.3e1 / 0.5e1 * delta1 - 0.3e1 / 0.5e1 * mu2 + delta2 / 0.5e1 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.5e1) * pow(delta1, -0.2e1) * (0.8e1 / 0.5e1 * c + (mu2 - delta2 - c) / (0.1e1 - z) * z / 0.5e1 - 0.8e1 / 0.5e1 * mu2 + 0.6e1 / 0.5e1 * delta2 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.5e1) * pow(delta2, -0.2e1) / 0.2e1;
						
		case 12:	
				return -(mu2 * mu2 * z - 0.2e1 * mu1 * delta2 * z + 0.2e1 * c * delta2 * z - 0.2e1 * mu2 * z * c + z * c * c - 0.2e1 * c * delta2 + 0.2e1 * mu1 * delta2) / (-0.1e1 + z) * (0.6e1 / 0.5e1 * c - 0.3e1 / 0.5e1 * mu1 + delta1 - 0.3e1 / 0.5e1 * mu2 + 0.2e1 / 0.5e1 * delta2 - (mu2 - c) / (0.1e1 - z) / 0.5e1) * pow(delta1, -0.2e1) * (0.8e1 / 0.5e1 * c + (mu2 - c) / (0.1e1 - z) * z / 0.5e1 - 0.8e1 / 0.5e1 * mu2 + 0.7e1 / 0.5e1 * delta2 - (mu2 - c) / (0.1e1 - z) / 0.5e1) * pow(delta2, -0.2e1) / 0.2e1;
									
		default:
			cout<<"This basic piece doesn't exist"; 
  }
  
}

double triangular_kernel_polynomial :: approx_EBRC_expected_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:	
				return -pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 - pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c + 0.1e1 / delta1 / delta2 * log(z) * mu1 * c - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.3e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.2e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1);
 			
		
		case 2:	
				return pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 + pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 - 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.7e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.3e1 / delta1 / delta2 * log(z) * mu1 * c + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - 0.4e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) / 0.3e1 - 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.3e1 + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.2e1 - 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.2e1 + 0.25e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * c * c - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c / 0.2e1 - pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 / 0.2e1 + 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) / z * c * c + 0.1e1 / delta2 / z * c - 0.1e1 / delta2 / z * mu1 - delta1 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.12e2 + 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) / z + delta1 / delta2 / z / 0.3e1 - pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.6e1 + 0.3e1 / 0.2e1 / delta2 * log(z) * c - 0.3e1 / 0.2e1 / delta2 * log(z) * mu1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * c + 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + delta1 / delta2 * log(z) / 0.2e1 - 0.2e1 / delta1 / delta2 / z * mu1 * c - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu2 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu2 / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 * mu2 / 0.3e1 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu2 * mu1 - 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 / 0.3e1 - delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) / 0.3e1 - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu2 + 0.1e1 / delta1 / delta2 / z * mu1 * mu1 + 0.1e1 / delta1 / delta2 / z * c * c + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * c * mu2 - 0.7e1 * pow(delta2, -0.2e1) / z * c * mu1 + pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1;
		
		case 3:	
				return log(z) / 0.6e1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 + 0.14e2 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 + 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.7e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.14e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c + 0.10e2 / 0.3e1 / delta1 / delta2 * log(z) * mu1 * c - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.4e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) + 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.9e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - 0.25e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.7e1 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.7e1 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.4e1 / 0.3e1 / delta1 / delta2 * log(z) * c * c + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c / 0.2e1 + pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 / 0.2e1 - 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) / z * c * c - 0.5e1 / 0.3e1 / delta2 / z * c + 0.5e1 / 0.3e1 / delta2 / z * mu1 + delta1 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) / 0.12e2 - 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) / z - 0.5e1 / 0.9e1 * delta1 / delta2 / z + pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.6e1 - 0.5e1 / 0.3e1 / delta2 * log(z) * c + 0.2e1 / delta2 * log(z) * mu1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * c - 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - 0.2e1 / 0.3e1 * delta1 / delta2 * log(z) + 0.10e2 / 0.3e1 / delta1 / delta2 / z * mu1 * c + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu2 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu2 / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 * mu2 / 0.3e1 - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu2 * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu2 * mu1 + 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 - 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 - delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 / 0.3e1 + delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) / 0.3e1 + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c + 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu2 - 0.5e1 / 0.3e1 / delta1 / delta2 / z * mu1 * mu1 - 0.5e1 / 0.3e1 / delta1 / delta2 / z * c * c - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * c * mu2 + 0.7e1 * pow(delta2, -0.2e1) / z * c * mu1 - pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.9e1 / delta1 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.7e1 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.1e1 / delta2 * log(z) * mu2 / 0.3e1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + pow(delta1, -0.2e1) * log(z) * c * c / 0.6e1 + pow(delta1, -0.2e1) * log(z) * mu1 * mu1 / 0.6e1 + 0.7e1 / 0.9e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.1e1 / delta1 * log(z) * c / 0.3e1 - 0.1e1 / delta1 * log(z) * mu1 / 0.3e1 + 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * mu2 - 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * c + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - pow(delta1, -0.2e1) * log(z) * c * mu1 / 0.3e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.2e1 / 0.3e1 / delta1 / delta2 * log(z) * mu2 * c + 0.2e1 / 0.3e1 / delta1 / delta2 * log(z) * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu2 / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * mu2 / 0.3e1;	
		
		case 4:	
				return 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 - 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.1e1 / delta1 / delta2 * log(z) * mu1 * c + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.9e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu2 * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - pow(delta1, -0.2e1) * log(z) * c * c / 0.6e1 - pow(delta1, -0.2e1) * log(z) * mu1 * mu1 / 0.6e1 - 0.5e1 / 0.6e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + pow(delta1, -0.2e1) * log(z) * c * mu1 / 0.3e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu2 / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * mu2 / 0.3e1;

		
		case 5:	
				return 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 - 0.15e2 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.6e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.2e1 / delta1 / delta2 * log(z) * mu1 * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.15e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.1e1 / delta1 / delta2 * log(z) * c * c - 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c - 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 + 0.11e2 / 0.4e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 + 0.17e2 / 0.4e1 * pow(delta2, -0.2e1) / z * c * c + 0.1e1 / delta2 / z * c - 0.1e1 / delta2 / z * mu1 - 0.3e1 / 0.64e2 * delta1 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) + 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z + delta1 / delta2 / z / 0.4e1 - pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.8e1 + 0.3e1 / 0.2e1 / delta2 * log(z) * c - 0.3e1 / 0.2e1 / delta2 * log(z) * mu1 + 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * c + 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + delta1 / delta2 * log(z) / 0.2e1 - 0.2e1 / delta1 / delta2 / z * mu1 * c - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu2 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * mu2 + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 * mu2 / 0.4e1 + 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu2 * mu1 - 0.17e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.27e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.7e1 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.21e2 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.9e1 / 0.32e2 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 - 0.9e1 / 0.32e2 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c + 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) - 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.2e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu2 + 0.1e1 / delta1 / delta2 / z * mu1 * mu1 + 0.1e1 / delta1 / delta2 / z * c * c + 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 - 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) / z * c * mu2 - 0.7e1 * pow(delta2, -0.2e1) / z * c * mu1 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1;
					
		case 6:
				return 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 - 0.4e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c + 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.4e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c + 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) + 0.3e1 / 0.4e1 / delta1 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.3e1 / 0.4e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.9e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.5e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.2e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2;
		
		case 7:
				return -pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.25e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.3e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1);

		
		case 8:
				return -0.5e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.25e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.6e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.25e2 / 0.18e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2;
					
		case 9:
				return -0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 + 0.13e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 + 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.4e1 - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 - 0.6e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.39e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.9e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 + 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) + 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 - 0.3e1 / delta1 / delta2 * log(z) * mu1 * c - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.8e1 + 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.8e1 - 0.11e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.15e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.49e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.9e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.19e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) / 0.4e1 - pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) / 0.4e1 - 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.7e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.2e1 + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * c * c - 0.3e1 / 0.64e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) - 0.3e1 / 0.64e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - 0.9e1 / 0.32e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c - 0.9e1 / 0.32e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 + 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 + 0.3e1 * pow(delta2, -0.2e1) / z * c * c + 0.3e1 / 0.4e1 / delta2 / z * c - 0.3e1 / 0.4e1 / delta2 / z * mu1 - 0.3e1 / 0.64e2 * delta1 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) + 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z + delta1 / delta2 / z / 0.4e1 - pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.8e1 + 0.3e1 / 0.2e1 / delta2 * log(z) * c - 0.3e1 / 0.2e1 / delta2 * log(z) * mu1 + 0.21e2 / 0.16e2 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.49e2 / 0.16e2 * pow(delta2, -0.2e1) * log(z) * c * c + 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + delta1 / delta2 * log(z) / 0.2e1 - 0.3e1 / 0.2e1 / delta1 / delta2 / z * mu1 * c - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu2 - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * mu1 * mu1 * mu2 + 0.9e1 / 0.16e2 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 - 0.9e1 / 0.16e2 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu2 / 0.4e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 * mu2 / 0.4e1 + 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu2 * mu1 - 0.7e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.3e1 / 0.2e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.9e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.3e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 - 0.3e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c + 0.3e1 / 0.16e2 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.3e1) - 0.3e1 / 0.16e2 / delta1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) - 0.5e1 / 0.4e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu2 + 0.3e1 / 0.4e1 / delta1 / delta2 / z * mu1 * mu1 + 0.3e1 / 0.4e1 / delta1 / delta2 / z * c * c + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * c * mu2 - 0.39e2 / 0.8e1 * pow(delta2, -0.2e1) / z * c * mu1 + 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1;

		
		case 10:
				return -0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * mu1 * mu1 * mu2 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 + 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.4e1 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 / z * c * c * mu1 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 / z * c * mu1 * mu1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.9e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 + 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) + 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu2 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * c - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.8e1 + 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.8e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.7e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.4e1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 / z * pow(c, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 / z * pow(mu1, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.4e1 + 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.4e1 - 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - 0.3e1 / 0.64e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) - 0.3e1 / 0.64e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu2 * mu1 / 0.2e1 - pow(delta1, -0.2e1) * log(z) * c * c / 0.8e1 - pow(delta1, -0.2e1) * log(z) * mu1 * mu1 / 0.8e1 + pow(delta1, -0.2e1) * log(z) * c * mu1 / 0.4e1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu2 / 0.4e1 + pow(delta1, -0.2e1) / delta2 * log(z) * mu1 * mu1 * mu2 / 0.4e1;

		
		case 11:	
				return 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.93e2 / 0.25e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c - 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.39e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.93e2 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.168e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.243e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.93e2 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.93e2 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.143e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.93e2 / 0.50e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.93e2 / 0.50e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.23e2 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.10e2 / delta1 * delta2 / (-0.1e1 + z) - 0.101e3 / 0.50e2 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.101e3 / 0.50e2 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.147e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.7e1 / 0.10e2 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.101e3 / 0.50e2 / delta1 / (-0.1e1 + z) * mu2 - 0.101e3 / 0.50e2 / delta1 / (-0.1e1 + z) * c - 0.51e2 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.48e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 / 0.50e2 - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.11e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.23e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.193e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.49e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.66e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2;

						
		case 12:	
				return 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.7e1 / 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c - 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.57e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.7e1 / 0.10e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.7e1 / 0.10e2 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.7e1 / 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.7e1 / 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.6e1 / 0.5e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2;
				
									
		default:
			cout<<"This basic piece doesn't exist"; 
  }
  
}


double triangular_kernel_polynomial :: approx_EBRC_second_moment_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:	
				return -0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) + pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) / 0.3e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) / delta2 * z * pow(mu1, 0.3e1) / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 + 0.1e1 / delta1 / delta2 * mu2 * mu2 * z / 0.2e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * mu1 * mu1 * mu2 - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu2 + pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * z * c * c * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * c * mu1 * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * pow(mu1, 0.3e1) + 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 - 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * mu2 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c - pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * mu1 / 0.6e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu1 + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu1, 0.3e1) + 0.1e1 / delta1 / delta2 * c * mu1 * z - 0.1e1 / delta1 / delta2 * c * mu2 * z + pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z / 0.2e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z;
			
		
		case 2:	
				return 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * z + delta1 / delta2 * z / 0.2e1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * z * mu1 * mu1 - pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.6e1 + 0.3e1 / 0.2e1 / delta2 * z * c - 0.3e1 / 0.2e1 / delta2 * z * mu1 + 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu2 * mu2 * z / 0.3e1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) / 0.3e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c + 0.2e1 / delta1 / delta2 * log(z) * mu1 * c + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.1e1 / delta1 / delta2 * log(z) * c * c - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * z * c + 0.2e1 / delta1 * pow(delta2, -0.2e1) * pow(c, 0.3e1) * z - 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * mu1 * z - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z + 0.1e1 / delta1 / delta2 * z * c * c - pow(delta2, -0.2e1) / z * mu1 * mu1 - pow(delta2, -0.2e1) / z * c * c - delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.6e1 - 0.1e1 / delta2 * log(z) * c + 0.1e1 / delta2 * log(z) * mu1 - 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * c - 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - delta1 / delta2 * log(z) / 0.3e1 + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.7e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c + 0.2e1 * pow(delta2, -0.2e1) / z * c * mu1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * z * c * mu2 + 0.2e1 * pow(delta2, -0.2e1) * z * mu1 * mu2 - 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * z * c * mu1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) / delta2 * z * pow(mu1, 0.3e1) / 0.2e1 - 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) + 0.3e1 / 0.2e1 / delta1 / delta2 * mu1 * mu1 * z - 0.1e1 / delta1 / delta2 * mu2 * mu2 * z / 0.2e1 + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * mu1 * mu1 * mu2 + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * c + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.7e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 + 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * z * c * c * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * c * mu1 * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * pow(mu1, 0.3e1) - 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * mu2 - 0.8e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c + pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * mu1 / 0.6e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu1 - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu1, 0.3e1) - 0.3e1 / delta1 / delta2 * c * mu1 * z + 0.1e1 / delta1 / delta2 * c * mu2 * z - pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z / 0.2e1 + pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z / 0.2e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z;

		
		case 3:	
				return z / 0.6e1 - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * z - 0.2e1 / 0.3e1 * delta1 / delta2 * z - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * z * mu1 * mu1 + pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.6e1 - 0.5e1 / 0.3e1 / delta2 * z * c + 0.2e1 / delta2 * z * mu1 - 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z + 0.2e1 / 0.3e1 / delta1 / delta2 * mu1 * mu2 * z - pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * mu2 * z / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu2 * mu2 * z / 0.3e1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.28e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.14e2 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.11e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.28e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.10e2 / 0.3e1 / delta1 / delta2 * log(z) * mu1 * c - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 + 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) + 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) + 0.14e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.14e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.3e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.5e1 / 0.3e1 / delta1 / delta2 * log(z) * c * c + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * c * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * mu1 * z - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * z * c - 0.2e1 / delta1 * pow(delta2, -0.2e1) * pow(c, 0.3e1) * z + 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * mu1 * z + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z + 0.1e1 / delta1 / delta2 * z * c * c + pow(delta2, -0.2e1) / z * mu1 * mu1 + pow(delta2, -0.2e1) / z * c * c + delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.6e1 + 0.5e1 / 0.3e1 / delta2 * log(z) * c - 0.5e1 / 0.3e1 / delta2 * log(z) * mu1 + 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * c + 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + 0.5e1 / 0.9e1 * delta1 / delta2 * log(z) - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.7e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.2e1 * pow(delta2, -0.2e1) / z * c * mu1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * z * c * mu2 - 0.2e1 * pow(delta2, -0.2e1) * z * mu1 * mu2 + 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * z * c * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * c * mu2 * z + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * mu1 * mu2 * z - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * c * mu1 * z - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu1, 0.4e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * z * pow(mu1, 0.3e1) + 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) - 0.2e1 / delta1 / delta2 * mu1 * mu1 * z + 0.7e1 / 0.3e1 / delta1 / delta2 * mu2 * mu2 * z - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * mu1 * mu1 * mu2 - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * c - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu2 + 0.16e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.9e1 / delta1 * delta2 / (-0.1e1 + z) - 0.14e2 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.14e2 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.14e2 / 0.9e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * mu2 - 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * c + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.20e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.11e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.26e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.7e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 - 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * z * c * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * z * c * mu1 * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * pow(mu1, 0.3e1) + 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 - 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * mu2 + 0.8e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c - 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * mu1 / 0.6e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu1 + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu1, 0.3e1) + 0.10e2 / 0.3e1 / delta1 / delta2 * c * mu1 * z - 0.16e2 / 0.3e1 / delta1 / delta2 * c * mu2 * z + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.7e1 / 0.9e1 / delta1 * delta2 * z - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.7e1 / 0.3e1 / delta1 * mu2 * z + 0.8e1 / 0.3e1 / delta1 * c * z - 0.1e1 / delta1 * mu1 * z / 0.3e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * c * z + pow(delta1, -0.2e1) * mu1 * mu1 * z / 0.6e1 - 0.1e1 / delta2 * mu2 * z / 0.3e1;

		
		case 4:	
				return pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * mu2 * z / 0.3e1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.28e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.11e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 + 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) - 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * c * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * mu1 * z - 0.2e1 / delta1 / delta2 * z * c * c + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * c * mu2 * z - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * mu1 * mu2 * z + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * c * mu1 * z + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu1, 0.4e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * z * pow(mu1, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 - 0.5e1 / 0.2e1 / delta1 / delta2 * mu2 * mu2 * z + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * mu1 * mu1 * mu2 + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu2 - 0.16e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) + 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / 0.3e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.20e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.11e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.26e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * z * c * c * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * z * c * mu1 * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * pow(mu1, 0.3e1) - 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 + 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c + 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * mu1 / 0.6e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu1 - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu1, 0.3e1) - 0.1e1 / delta1 / delta2 * c * mu1 * z + 0.5e1 / delta1 / delta2 * c * mu2 * z - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z - 0.5e1 / 0.6e1 / delta1 * delta2 * z + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.2e1 / delta1 * mu2 * z - 0.5e1 / 0.2e1 / delta1 * c * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * c * z - pow(delta1, -0.2e1) * mu1 * mu1 * z / 0.6e1;

		
		case 5:	
				return 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * z + delta1 / delta2 * z / 0.2e1 + 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * z * mu1 * mu1 - pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.8e1 + 0.3e1 / 0.2e1 / delta2 * z * c - 0.3e1 / 0.2e1 / delta2 * z * mu1 + 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu2 * mu2 * z / 0.4e1 - 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 + 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.2e1 / delta1 / delta2 * log(z) * mu1 * c + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.15e2 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.1e1 / delta1 / delta2 * log(z) * c * c + 0.27e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * z * c + 0.2e1 / delta1 * pow(delta2, -0.2e1) * pow(c, 0.3e1) * z - 0.17e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * mu1 * z - 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z + 0.1e1 / delta1 / delta2 * z * c * c - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * c * c - 0.3e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z - 0.1e1 / delta2 * log(z) * c + 0.1e1 / delta2 * log(z) * mu1 - 0.11e2 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.17e2 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * c * c - 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - delta1 / delta2 * log(z) / 0.4e1 + 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.2e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 - 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.7e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.9e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.9e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) / z * c + 0.9e1 / 0.4e1 * pow(delta2, -0.2e1) / z * c * mu1 - 0.7e1 / 0.4e1 * pow(delta2, -0.2e1) * z * c * mu2 + 0.2e1 * pow(delta2, -0.2e1) * z * mu1 * mu2 - 0.21e2 / 0.4e1 * pow(delta2, -0.2e1) * z * c * mu1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 + 0.15e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c / 0.4e1 - 0.2e1 / delta1 / delta2 * c * mu1 * z;
					
		case 6:
				return -0.2e1 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.2e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 - 0.4e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c + 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.10e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.8e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.4e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.4e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * c * z + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * mu1 * z - 0.2e1 / delta1 / delta2 * z * c * c + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * mu1 * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * mu1 * z + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) - 0.2e1 / delta1 / delta2 * mu2 * mu2 * z - 0.4e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) + 0.3e1 / 0.4e1 / delta1 * delta2 / (-0.1e1 + z) + 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.3e1 / 0.2e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.9e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.7e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.23e2 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.13e2 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.8e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * c * c * mu1 + 0.4e1 * pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z + 0.4e1 / delta1 / delta2 * c * mu2 * z - 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z + 0.2e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z - 0.3e1 / 0.4e1 / delta1 * delta2 * z + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.2e1 / delta1 * mu2 * z - 0.5e1 / 0.2e1 / delta1 * c * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * c * z;
		
		case 7:
				return -0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) + pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) / 0.3e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 + 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.35e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.65e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) / 0.2e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(c, 0.3e1) * z + 0.1e1 / delta1 / delta2 * z * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * mu2 * mu2 * z / 0.2e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * c + pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * z * c * c * mu1 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c - pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c - 0.1e1 / delta1 / delta2 * c * mu2 * z + pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(c, 0.4e1) * z;
		
		case 8:
				return -0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.5e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.10e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 + 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.65e2 / 0.6e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 - 0.35e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.65e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.35e2 / 0.18e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * c * z - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * mu1 * z + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(c, 0.3e1) * z + 0.5e1 / 0.2e1 / delta1 / delta2 * z * c * c - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * mu1 * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * mu1 * z - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.2e1 / delta1 / delta2 * mu2 * mu2 * z - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * c + 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.3e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c + 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.20e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.65e2 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.65e2 / 0.18e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.25e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * c * c * mu1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c - 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c - 0.5e1 / delta1 / delta2 * c * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(c, 0.4e1) * z + 0.5e1 / 0.6e1 / delta1 * delta2 * z - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.2e1 / delta1 * mu2 * z + 0.5e1 / 0.2e1 / delta1 * c * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * c * z;
					
		case 9:
				return 0.49e2 / 0.16e2 * pow(delta2, -0.2e1) * c * c * z + delta1 / delta2 * z / 0.2e1 + 0.21e2 / 0.16e2 * pow(delta2, -0.2e1) * z * mu1 * mu1 - pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.8e1 + 0.3e1 / 0.2e1 / delta2 * z * c - 0.3e1 / 0.2e1 / delta2 * z * mu1 + 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu2 * mu2 * z / 0.4e1 - 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu2 * mu1 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * mu1 * c + 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.39e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.9e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.4e1 - 0.19e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.4e1 - 0.3e1 / 0.4e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.3e1 / 0.4e1 / delta1 / delta2 * log(z) * c * c - 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) / 0.2e1 + 0.3e1 / 0.2e1 * delta1 * pow(delta2, -0.2e1) * z * c + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * pow(c, 0.3e1) * z - 0.7e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * mu1 * z - 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z + 0.3e1 / 0.2e1 / delta1 / delta2 * z * c * c - 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) / z * mu1 * mu1 - 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) / z * c * c - 0.3e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z - 0.3e1 / 0.4e1 / delta2 * log(z) * c + 0.3e1 / 0.4e1 / delta2 * log(z) * mu1 - 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * c - 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - delta1 / delta2 * log(z) / 0.4e1 + 0.5e1 / 0.4e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.39e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * c + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * c * mu1 - 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * z * c * mu2 + 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) * z * mu1 * mu2 - 0.9e1 / 0.2e1 * pow(delta2, -0.2e1) * z * c * mu1 + 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) / delta2 * z * pow(mu1, 0.3e1) / 0.2e1 - 0.7e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) + 0.3e1 / 0.2e1 / delta1 / delta2 * mu1 * mu1 * z + 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu2 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * c / 0.4e1 + 0.13e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu2 - 0.49e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 + 0.9e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * c * c * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * c * mu1 * mu1 + 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * pow(mu1, 0.3e1) - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.11e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 - 0.15e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * mu1 / 0.8e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c / 0.8e1 + 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu1, 0.3e1) - 0.3e1 / delta1 / delta2 * c * mu1 * z + 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(c, 0.4e1) * z;

		
		case 10:
				return pow(delta1, -0.2e1) / delta2 * mu1 * mu1 * mu2 * z / 0.4e1 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu2 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu1 * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.9e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.4e1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.4e1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) - 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * pow(c, 0.3e1) * z + 0.1e1 / delta1 / delta2 * z * c * c / 0.2e1 + pow(delta1, -0.2e1) * c * mu1 * z / 0.4e1 + 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu1, 0.4e1) - 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * z * pow(mu1, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu1, 0.3e1) / 0.4e1 + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 + 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu2 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * c / 0.4e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z / 0.2e1 - 0.7e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu1 + 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * z * c * mu1 * mu1 - 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * z * c * c * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * z * c * mu1 * mu1 + 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * z * pow(mu1, 0.3e1) - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * z * mu1 * mu1 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z / 0.4e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * mu1 / 0.8e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c / 0.8e1 + 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu1, 0.3e1) - 0.1e1 / delta1 / delta2 * c * mu1 * z + 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(c, 0.4e1) * z - pow(delta1, -0.2e1) * c * c * z / 0.8e1 - pow(delta1, -0.2e1) * mu1 * mu1 * z / 0.8e1;
		
		case 11:	
				return 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * z - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * mu2 * z - pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * z + 0.23e2 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * z + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) + 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.186e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 + 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.93e2 / 0.25e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c - 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.33e2 / 0.10e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.186e3 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.117e3 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.63e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.234e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.141e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.81e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.81e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.93e2 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.93e2 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.43e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.36e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.27e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.27e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.109e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.93e2 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.93e2 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.143e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) + 0.49e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * c * z - 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 * mu1 * z + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * pow(c, 0.3e1) * z + 0.93e2 / 0.50e2 / delta1 / delta2 * z * c * c - 0.193e3 / 0.50e2 * pow(delta1, -0.2e1) * c * mu2 * z + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * mu1 * mu2 * z - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * c * mu1 * z - 0.2e1 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.93e2 / 0.50e2 / delta1 / delta2 * mu2 * mu2 * z - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * c + 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.7e1 / 0.10e2 / delta1 * delta2 / (-0.1e1 + z) - 0.101e3 / 0.25e2 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.101e3 / 0.25e2 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.99e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.7e1 / 0.5e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.101e3 / 0.50e2 / delta1 / (-0.1e1 + z) * mu2 - 0.101e3 / 0.50e2 / delta1 / (-0.1e1 + z) * c + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.73e2 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.48e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.191e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.71e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.53e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.97e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.101e3 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.101e3 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.19e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.7e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.36e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * z * c * c * mu1 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 - 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c - 0.168e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z + 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c - 0.93e2 / 0.25e2 / delta1 / delta2 * c * mu2 * z + 0.243e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z - 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(c, 0.4e1) * z + 0.7e1 / 0.10e2 / delta1 * delta2 * z - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.101e3 / 0.50e2 / delta1 * mu2 * z + 0.101e3 / 0.50e2 / delta1 * c * z + 0.147e3 / 0.50e2 * pow(delta1, -0.2e1) * c * c * z;

						
		case 12:	
				return 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * z - 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * z + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * z + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.4e1) * log(fabs(-0.1e1 + z)) - pow(delta1, -0.2e1) / delta2 * pow(mu2, 0.3e1) * log(fabs(-0.1e1 + z)) - 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu1 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu1 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.6e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu1 + 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu1 * mu2 - 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.7e1 / 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * c - 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.3e1 / 0.10e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) * mu1 + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.14e2 / 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * c - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) * mu1 - 0.117e3 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.27e2 / 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu2 - 0.63e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.78e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.27e2 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.27e2 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.7e1 / 0.10e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.7e1 / 0.10e2 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.2e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.36e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.9e1 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.9e1 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.28e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.7e1 / 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.7e1 / 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) / delta2 * z * pow(c, 0.3e1) + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * pow(c, 0.3e1) * z + 0.7e1 / 0.10e2 / delta1 / delta2 * z * c * c - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * c * mu2 * z - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * mu1 * mu2 * z + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * c * mu1 * z + 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) + 0.7e1 / 0.10e2 / delta1 / delta2 * mu2 * mu2 * z - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * z + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * mu1 * c + 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * z * c * c * mu1 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu1 - 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * z * c * c * mu2 + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * mu2 * mu2 * z * c - 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * c * mu2 * z + 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * z * c * c - 0.7e1 / 0.5e1 / delta1 / delta2 * c * mu2 * z + 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * c * mu2 * mu2 * z - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * mu1 * mu2 * mu2 * z + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu2, 0.3e1) * mu1 * z - 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * pow(mu2, 0.3e1) * z + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(c, 0.4e1) * z;
		 		
									
		default:
			cout<<"This basic piece doesn't exist"; 
  }
  
}



double triangular_kernel_polynomial :: approx_DECS_integrate_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:	
				return 	-pow(c - mu1 - delta1 - mu2 * z + mu1 * z + delta1 * z, 0.2e1) / (-0.1e1 + z) / z * ((c - mu1 - delta1) / z / 0.3e1 + mu2 / 0.3e1 + 0.2e1 / 0.3e1 * mu1 + 0.2e1 / 0.3e1 * delta1 + (mu2 - c) / (0.1e1 - z) / 0.3e1 - c) * pow(delta1, -0.2e1) * (-delta1 / 0.3e1 + 0.5e1 / 0.3e1 * c - mu1 / 0.3e1 + (mu2 - c) / (0.1e1 - z) * z / 0.3e1 - (c - mu1 - delta1) / z / 0.3e1 - 0.4e1 / 0.3e1 * mu2 - (mu2 - c) / (0.1e1 - z) / 0.3e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 2:	
				return pow(c - mu2 * z - mu1 + mu1 * z, 0.2e1) / (-0.1e1 + z) / z * ((mu2 - c) / (0.1e1 - z) / 0.3e1 + mu2 / 0.3e1 + 0.2e1 / 0.3e1 * mu1 + (c - mu1) / z / 0.3e1 - c + delta1) * pow(delta1, -0.2e1) * ((mu2 - c) / (0.1e1 - z) * z / 0.3e1 + 0.5e1 / 0.3e1 * c - mu1 / 0.3e1 - (mu2 - c) / (0.1e1 - z) / 0.3e1 - 0.4e1 / 0.3e1 * mu2 - (c - mu1) / z / 0.3e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 3:	
				return -pow(c - mu1 - mu2 * z + mu1 * z + delta2 * z, 0.2e1) / (-0.1e1 + z) / z * ((c - mu1) / z / 0.3e1 + mu2 / 0.3e1 + 0.2e1 / 0.3e1 * mu1 - delta2 / 0.3e1 + (mu2 - delta2 - c) / (0.1e1 - z) / 0.3e1 - c + delta1) * pow(delta1, -0.2e1) * (0.5e1 / 0.3e1 * c - mu1 / 0.3e1 + (mu2 - delta2 - c) / (0.1e1 - z) * z / 0.3e1 - (c - mu1) / z / 0.3e1 - 0.4e1 / 0.3e1 * mu2 + 0.4e1 / 0.3e1 * delta2 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.3e1) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 4:	
				return pow(c - mu2 * z - mu1 + mu1 * z - delta1 + delta1 * z + delta2 * z, 0.2e1) / (-0.1e1 + z) / z * ((mu2 - delta2 - c) / (0.1e1 - z) / 0.3e1 + mu2 / 0.3e1 + 0.2e1 / 0.3e1 * mu1 + 0.2e1 / 0.3e1 * delta1 - delta2 / 0.3e1 + (c - mu1 - delta1) / z / 0.3e1 - c) * pow(delta1, -0.2e1) * ((mu2 - delta2 - c) / (0.1e1 - z) * z / 0.3e1 + 0.5e1 / 0.3e1 * c - mu1 / 0.3e1 - delta1 / 0.3e1 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.3e1 - 0.4e1 / 0.3e1 * mu2 + 0.4e1 / 0.3e1 * delta2 - (c - mu1 - delta1) / z / 0.3e1) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 5:	
				return -0.1e1 / delta1 * (0.2e1 * c - 0.2e1 * mu1 - delta1 - 0.2e1 * mu2 * z + 0.2e1 * mu1 * z + delta1 * z) / z * ((c - mu1 - delta1) / z / 0.4e1 + mu2 / 0.2e1 + mu1 / 0.2e1 + 0.3e1 / 0.4e1 * delta1 + (c - mu1) / z / 0.4e1 - c) * (-delta1 / 0.4e1 + 0.2e1 * c - mu1 / 0.2e1 - (c - mu1 - delta1) / z / 0.4e1 - 0.3e1 / 0.2e1 * mu2 - (c - mu1) / z / 0.4e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
					
		case 6:
				return 0.1e1 / delta2 * (0.2e1 * mu1 * z + 0.2e1 * delta1 * z - 0.2e1 * mu2 * z + delta2 * z - 0.2e1 * delta1 + 0.2e1 * c - 0.2e1 * mu1) / (-0.1e1 + z) * ((mu2 - delta2 - c) / (0.1e1 - z) / 0.4e1 + mu2 / 0.2e1 + mu1 / 0.2e1 + delta1 / 0.2e1 - delta2 / 0.4e1 + (mu2 - c) / (0.1e1 - z) / 0.4e1 - c) * pow(delta1, -0.2e1) * ((mu2 - delta2 - c) / (0.1e1 - z) * z / 0.4e1 + 0.3e1 / 0.2e1 * c + (mu2 - c) / (0.1e1 - z) * z / 0.4e1 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.4e1 - 0.3e1 / 0.2e1 * mu2 + 0.5e1 / 0.4e1 * delta2 - (mu2 - c) / (0.1e1 - z) / 0.4e1) / 0.2e1;
		
		case 7:
				return -pow(-mu2 + c, 0.2e1) * z / (-0.1e1 + z) * (mu2 / 0.3e1 - 0.4e1 / 0.3e1 * c + (mu2 - c) / (0.1e1 - z) / 0.3e1 + mu1 + delta1) * pow(delta1, -0.2e1) * ((mu2 - c) / (0.1e1 - z) * z / 0.3e1 - 0.4e1 / 0.3e1 * mu2 + 0.4e1 / 0.3e1 * c - (mu2 - c) / (0.1e1 - z) / 0.3e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 8:
				return -pow(-mu2 + delta2 + c, 0.2e1) * z / (-0.1e1 + z) * (mu2 / 0.3e1 - delta2 / 0.3e1 - 0.4e1 / 0.3e1 * c + (mu2 - delta2 - c) / (0.1e1 - z) / 0.3e1 + mu1 + delta1) * pow(delta1, -0.2e1) * ((mu2 - delta2 - c) / (0.1e1 - z) * z / 0.3e1 - 0.4e1 / 0.3e1 * mu2 + 0.4e1 / 0.3e1 * delta2 + 0.4e1 / 0.3e1 * c - (mu2 - delta2 - c) / (0.1e1 - z) / 0.3e1) * pow(delta2, -0.2e1) / 0.2e1;
					
		case 9:
				return -(z * c * c - mu1 * mu1 * z - 0.2e1 * c * mu2 * z + 0.2e1 * mu1 * mu2 * z + c * c - 0.2e1 * c * mu1 + mu1 * mu1) / z * (mu2 / 0.2e1 - 0.5e1 / 0.4e1 * c + 0.3e1 / 0.4e1 * mu1 + (c - mu1) / z / 0.4e1 + delta1) * pow(delta1, -0.2e1) * (0.7e1 / 0.4e1 * c - mu1 / 0.4e1 - 0.3e1 / 0.2e1 * mu2 - (c - mu1) / z / 0.4e1 + delta2) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 10:
				return -(-0.2e1 * c * mu2 * z + 0.2e1 * c * delta2 * z - 0.2e1 * mu1 * delta1 * z - 0.2e1 * mu1 * delta2 * z - 0.2e1 * delta1 * delta2 * z + z * c * c + c * c - 0.2e1 * c * mu1 - 0.2e1 * c * delta1 - mu1 * mu1 * z + mu1 * mu1 + 0.2e1 * mu1 * delta1 - delta1 * delta1 * z + delta1 * delta1 + 0.2e1 * mu1 * mu2 * z + 0.2e1 * delta1 * mu2 * z) / z * (-0.5e1 / 0.4e1 * c + mu2 / 0.2e1 - delta2 / 0.2e1 + 0.3e1 / 0.4e1 * mu1 + 0.3e1 / 0.4e1 * delta1 + (c - mu1 - delta1) / z / 0.4e1) * pow(delta1, -0.2e1) * (0.7e1 / 0.4e1 * c - mu1 / 0.4e1 - delta1 / 0.4e1 - 0.3e1 / 0.2e1 * mu2 + 0.3e1 / 0.2e1 * delta2 - (c - mu1 - delta1) / z / 0.4e1) * pow(delta2, -0.2e1) / 0.2e1;
		
		case 11:	
				return -(0.2e1 * mu1 * delta2 * z - 0.2e1 * delta2 * mu2 * z + delta2 * delta2 * z + mu2 * mu2 * z + z * c * c - 0.2e1 * c * mu2 * z + 0.2e1 * c * delta2 - 0.2e1 * mu1 * delta2) / (-0.1e1 + z) * (0.3e1 / 0.5e1 * mu2 - 0.6e1 / 0.5e1 * c + 0.3e1 / 0.5e1 * mu1 - delta2 / 0.5e1 + (mu2 - delta2 - c) / (0.1e1 - z) / 0.5e1 + delta1) * pow(delta1, -0.2e1) * (0.8e1 / 0.5e1 * c + (mu2 - delta2 - c) / (0.1e1 - z) * z / 0.5e1 - 0.8e1 / 0.5e1 * mu2 + 0.6e1 / 0.5e1 * delta2 - (mu2 - delta2 - c) / (0.1e1 - z) / 0.5e1) * pow(delta2, -0.2e1) / 0.2e1;
						
		case 12:	
				return 	-(0.2e1 * c * delta2 * z - 0.2e1 * mu1 * delta2 * z - 0.2e1 * delta1 * delta2 * z + z * c * c + mu2 * mu2 * z - 0.2e1 * c * mu2 * z - 0.2e1 * c * delta2 + 0.2e1 * delta1 * delta2 + 0.2e1 * mu1 * delta2) / (-0.1e1 + z) * (-0.6e1 / 0.5e1 * c + 0.3e1 / 0.5e1 * mu2 - 0.2e1 / 0.5e1 * delta2 + 0.3e1 / 0.5e1 * mu1 + 0.3e1 / 0.5e1 * delta1 + (mu2 - c) / (0.1e1 - z) / 0.5e1) * pow(delta1, -0.2e1) * (0.8e1 / 0.5e1 * c + (mu2 - c) / (0.1e1 - z) * z / 0.5e1 - 0.8e1 / 0.5e1 * mu2 + 0.7e1 / 0.5e1 * delta2 - (mu2 - c) / (0.1e1 - z) / 0.5e1) * pow(delta2, -0.2e1) / 0.2e1;
									
		default:
			cout<<"This basic piece doesn't exist"; 
  }
  
}

double triangular_kernel_polynomial :: approx_DECS_expected_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:	
				return 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * log(z) - 0.1e1 / delta2 / delta1 / z * c * c - 0.1e1 / delta2 / delta1 / z * mu1 * mu1 + pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * pow(c, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) * delta1 * pow(z, -0.2e1) * mu1 / 0.3e1 + 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) / z + 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - delta1 / delta2 * log(z) / 0.2e1 + 0.3e1 / 0.2e1 / delta2 * log(z) * c - 0.3e1 / 0.2e1 / delta2 * log(z) * mu1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) / z * c * c + 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 + pow(delta2, -0.2e1) * delta1 * pow(z, -0.2e1) * c / 0.3e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + 0.5e1 / 0.9e1 * pow(delta2, -0.2e1) * delta1 / z * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * c * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 + pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 - pow(delta2, -0.2e1) / delta1 * log(z) * mu1 * mu2 * mu2 / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * c * c * mu2 * mu1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * c * mu1 * mu1 * mu2 - 0.10e2 / 0.3e1 * pow(delta2, -0.2e1) / delta1 / z * c * mu1 * mu2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 + pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 + 0.7e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 + 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.7e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 + 0.4e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.3e1 / delta1 / delta2 * log(z) * c * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / delta1 / z * c * c * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) / z * c * c * mu1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) / z * c * mu1 * mu1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / delta1 / z * mu1 * mu1 * mu2 - pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * c * c * mu1 + pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * c * mu1 * mu1 + 0.2e1 / delta2 / delta1 / z * c * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 - 0.5e1 / 0.9e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 + pow(delta2, -0.2e1) / delta1 * log(z) * c * mu2 * mu2 / 0.3e1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + 0.1e1 / delta2 / z * c - 0.1e1 / delta2 / z * mu1 - pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 / 0.2e1 - pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c / 0.2e1 - 0.1e1 / delta2 * delta1 / z / 0.3e1 - pow(delta2, -0.2e1) * delta1 * delta1 * pow(z, -0.2e1) / 0.12e2 - pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.6e1 - 0.7e1 * pow(delta2, -0.2e1) / z * c * mu1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.3e1 - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * c * c - 0.3e1 / 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.2e1 - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.2e1 - 0.25e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.2e1 - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2;
			
		
		case 2:	
				return -0.1e1 / delta2 * pow(delta1, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * c * c * mu2 * mu1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * c * mu1 * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 - pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 - 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) / z * c * c * mu1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) / z * c * mu1 * mu1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 + 0.5e1 / 0.9e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.3e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.2e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.2e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.2e1;

		
		case 3:	
				return -pow(delta1, -0.2e1) * log(z) * mu1 * mu1 / 0.6e1 - pow(delta1, -0.2e1) * log(z) * c * c / 0.6e1 - 0.2e1 / 0.3e1 / delta2 * pow(delta1, -0.2e1) * log(z) * c * mu1 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + pow(delta1, -0.2e1) * log(z) * c * mu1 / 0.3e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.5e1 / 0.9e1 / delta2 * pow(delta1, -0.2e1) / z * pow(c, 0.3e1) - 0.5e1 / 0.9e1 / delta2 * pow(delta1, -0.2e1) / z * pow(mu1, 0.3e1) - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * c * c * mu2 * mu1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * c * mu1 * mu1 * mu2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.3e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(z) * c * c * mu2 / 0.3e1 + 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.5e1 / 0.3e1 / delta2 * pow(delta1, -0.2e1) / z * c * c * mu1 + 0.5e1 / 0.3e1 / delta2 * pow(delta1, -0.2e1) / z * c * mu1 * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 - 0.5e1 / 0.9e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.9e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.5e1 / 0.6e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.3e1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.9e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2;

		
		case 4:	
				return pow(delta1, -0.2e1) * log(z) * mu1 * mu1 / 0.6e1 + pow(delta1, -0.2e1) * log(z) * c * c / 0.6e1 + 0.2e1 / 0.3e1 / delta2 * pow(delta1, -0.2e1) * log(z) * c * mu1 * mu2 + log(z) / 0.6e1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * log(z) + 0.5e1 / 0.3e1 / delta2 / delta1 / z * c * c + 0.5e1 / 0.3e1 / delta2 / delta1 / z * mu1 * mu1 - pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * pow(c, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * pow(mu1, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) * delta1 * pow(z, -0.2e1) * mu1 / 0.3e1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - pow(delta1, -0.2e1) * log(z) * c * mu1 / 0.3e1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) / z - 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + 0.2e1 / 0.3e1 * delta1 / delta2 * log(z) - 0.5e1 / 0.3e1 / delta2 * log(z) * c + 0.2e1 / delta2 * log(z) * mu1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) / z * c * c - 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 - pow(delta2, -0.2e1) * delta1 * pow(z, -0.2e1) * c / 0.3e1 - 0.5e1 / 0.9e1 / delta2 * pow(delta1, -0.2e1) / z * pow(c, 0.3e1) + 0.5e1 / 0.9e1 / delta2 * pow(delta1, -0.2e1) / z * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta2, -0.2e1) * delta1 / z * mu2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) / 0.12e2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) / 0.12e2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * c * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 - pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + pow(delta2, -0.2e1) / delta1 * log(z) * mu1 * mu2 * mu2 / 0.3e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.6e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.6e1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * c * c * mu2 * mu1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * c * mu1 * mu1 * mu2 + 0.10e2 / 0.3e1 * pow(delta2, -0.2e1) / delta1 / z * c * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.3e1 - 0.1e1 / delta2 * log(z) * mu2 / 0.3e1 + 0.1e1 / delta1 * log(z) * mu1 / 0.3e1 - 0.1e1 / delta1 * log(z) * c / 0.3e1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 - 0.7e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.3e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(z) * c * c * mu2 / 0.3e1 - 0.2e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.7e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.14e2 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 / 0.9e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.13e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.4e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.14e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.10e2 / 0.3e1 / delta1 / delta2 * log(z) * c * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 / 0.3e1 + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / delta1 / z * c * c * mu2 + 0.5e1 / 0.3e1 / delta2 * pow(delta1, -0.2e1) / z * c * c * mu1 - 0.5e1 / 0.3e1 / delta2 * pow(delta1, -0.2e1) / z * c * mu1 * mu1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) / delta1 / z * mu1 * mu1 * mu2 + pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * c * c * mu1 - pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * c * mu1 * mu1 - 0.10e2 / 0.3e1 / delta2 / delta1 / z * c * mu1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 / 0.3e1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) / 0.3e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 / 0.2e1 + 0.5e1 / 0.9e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - pow(delta2, -0.2e1) / delta1 * log(z) * c * mu2 * mu2 / 0.3e1 - 0.2e1 / 0.3e1 / delta2 / delta1 * log(z) * mu1 * mu2 + 0.2e1 / 0.3e1 / delta2 / delta1 * log(z) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - 0.5e1 / 0.3e1 / delta2 / z * c + 0.5e1 / 0.3e1 / delta2 / z * mu1 + pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 / 0.2e1 + pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c / 0.2e1 + 0.5e1 / 0.9e1 / delta2 * delta1 / z + pow(delta2, -0.2e1) * delta1 * delta1 * pow(z, -0.2e1) / 0.12e2 + pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.6e1 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.7e1 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.7e1 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.7e1 / 0.9e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.7e1 * pow(delta2, -0.2e1) / z * c * mu1 + 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * c + 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c + 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.9e1 - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.7e1 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.7e1 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.4e1 / 0.3e1 / delta1 / delta2 * log(z) * c * c + 0.2e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.25e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + 0.7e1 / 0.9e1 / delta1 * delta2 / (-0.1e1 + z) + 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * c - 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * mu2;
		
		case 5:	
				return 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * log(z) - 0.1e1 / delta2 / delta1 / z * c * c - 0.1e1 / delta2 / delta1 / z * mu1 * mu1 + 0.3e1 / 0.8e1 * pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * pow(c, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * pow(mu1, 0.3e1) - 0.9e1 / 0.32e2 * pow(delta2, -0.2e1) * delta1 * pow(z, -0.2e1) * mu1 + 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z + 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - delta1 / delta2 * log(z) / 0.2e1 + 0.3e1 / 0.2e1 / delta2 * log(z) * c - 0.3e1 / 0.2e1 / delta2 * log(z) * mu1 + 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.17e2 / 0.4e1 * pow(delta2, -0.2e1) / z * c * c + 0.11e2 / 0.4e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 + 0.9e1 / 0.32e2 * pow(delta2, -0.2e1) * delta1 * pow(z, -0.2e1) * c + 0.3e1 / 0.8e1 * pow(delta2, -0.2e1) * delta1 / z * mu2 - 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) / z * c * mu2 + 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 - pow(delta2, -0.2e1) / delta1 * log(z) * mu1 * mu2 * mu2 / 0.4e1 - 0.3e1 * pow(delta2, -0.2e1) / delta1 / z * c * mu1 * mu2 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 + 0.15e2 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.6e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.15e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.2e1 / delta1 / delta2 * log(z) * c * mu1 + 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) / delta1 / z * c * c * mu2 + 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) / delta1 / z * mu1 * mu1 * mu2 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * c * c * mu1 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * c * mu1 * mu1 + 0.2e1 / delta2 / delta1 / z * c * mu1 + pow(delta2, -0.2e1) / delta1 * log(z) * c * mu2 * mu2 / 0.4e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + 0.1e1 / delta2 / z * c - 0.1e1 / delta2 / z * mu1 - 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 - 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c - 0.1e1 / delta2 * delta1 / z / 0.4e1 - 0.3e1 / 0.64e2 * pow(delta2, -0.2e1) * delta1 * delta1 * pow(z, -0.2e1) - pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.8e1 - 0.7e1 * pow(delta2, -0.2e1) / z * c * mu1 + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.2e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.21e2 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 - 0.7e1 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.1e1 / delta1 / delta2 * log(z) * c * c - 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.27e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.17e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2;

					
		case 6:
				return 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.9e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.5e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.2e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.4e1 * pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.4e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.4e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.3e1 / 0.4e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) + 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c + 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.3e1 / 0.4e1 / delta1 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2;
		
		case 7:
				return pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.25e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) / 0.3e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) / 0.2e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1);
		
		case 8:
				return -0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.25e2 / 0.18e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.5e1 * pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.25e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 + 0.5e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.5e1 / 0.2e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.5e1 / 0.6e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2;
					
		case 9:
				return -0.1e1 / delta2 * pow(delta1, -0.2e1) / z * pow(c, 0.3e1) / 0.4e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) / z * pow(mu1, 0.3e1) / 0.4e1 + 0.3e1 / 0.64e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) + 0.3e1 / 0.64e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.8e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.8e1 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * c * c * mu2 * mu1 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * c * mu1 * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.4e1 - 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 - 0.7e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 / 0.2e1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.2e1 - 0.1e1 / delta1 / delta2 * log(z) * c * mu1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.3e1 / 0.4e1 / delta2 * pow(delta1, -0.2e1) / z * c * c * mu1 - 0.3e1 / 0.4e1 / delta2 * pow(delta1, -0.2e1) / z * c * mu1 * mu1 - 0.3e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 - 0.3e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) + 0.9e1 / 0.32e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 + 0.3e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * pow(c, 0.3e1) * mu2 - 0.3e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) / 0.4e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) / 0.4e1 - 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + 0.1e1 / delta1 / delta2 * log(z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 / 0.2e1 - 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.2e1 + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.4e1 + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.2e1;

		
		case 10:
				return pow(delta1, -0.2e1) * log(z) * mu1 * mu1 / 0.8e1 + pow(delta1, -0.2e1) * log(z) * c * c / 0.8e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(z) * c * mu1 * mu2 / 0.2e1 + log(z) / 0.8e1 - 0.49e2 / 0.16e2 * pow(delta2, -0.2e1) * c * c * log(z) + 0.9e1 / 0.8e1 / delta2 / delta1 / z * c * c + 0.9e1 / 0.8e1 / delta2 / delta1 / z * mu1 * mu1 - 0.3e1 / 0.16e2 * pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * pow(c, 0.3e1) + 0.3e1 / 0.16e2 * pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * pow(mu1, 0.3e1) + 0.3e1 / 0.16e2 * pow(delta2, -0.2e1) * delta1 * pow(z, -0.2e1) * mu1 - pow(delta1, -0.2e1) * log(z) * c * mu1 / 0.4e1 - 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z - 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + 0.5e1 / 0.8e1 * delta1 / delta2 * log(z) - 0.13e2 / 0.8e1 / delta2 * log(z) * c + 0.15e2 / 0.8e1 / delta2 * log(z) * mu1 - 0.21e2 / 0.16e2 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.3e1 * pow(delta2, -0.2e1) / z * c * c - 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 - 0.3e1 / 0.16e2 * pow(delta2, -0.2e1) * delta1 * pow(z, -0.2e1) * c - 0.3e1 / 0.8e1 / delta2 * pow(delta1, -0.2e1) / z * pow(c, 0.3e1) + 0.3e1 / 0.8e1 / delta2 * pow(delta1, -0.2e1) / z * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta2, -0.2e1) * delta1 / z * mu2 + 0.3e1 / 0.64e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.4e1) + 0.3e1 / 0.64e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(mu1, 0.4e1) + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * c * mu2 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * mu2 - 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * mu1 + pow(delta2, -0.2e1) / delta1 * log(z) * mu1 * mu2 * mu2 / 0.4e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * c * mu2 * mu2 / 0.8e1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * mu1 * mu1 * mu2 * mu2 / 0.8e1 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * c * c * mu2 * mu1 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * c * mu1 * mu1 * mu2 + 0.9e1 / 0.4e1 * pow(delta2, -0.2e1) / delta1 / z * c * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * log(z) * c * mu1 * mu2 * mu2 / 0.4e1 - 0.1e1 / delta2 * log(z) * mu2 / 0.4e1 + 0.1e1 / delta1 * log(z) * mu1 / 0.4e1 - 0.1e1 / delta1 * log(z) * c / 0.4e1 - 0.49e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 - 0.49e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(z) * mu1 * mu1 * mu2 / 0.4e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * log(z) * c * c * mu2 / 0.4e1 - 0.6e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.39e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.11e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.9e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.15e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.13e2 / 0.4e1 / delta1 / delta2 * log(z) * c * mu1 + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / delta1 / z * c * c * mu2 + 0.9e1 / 0.8e1 / delta2 * pow(delta1, -0.2e1) / z * c * c * mu1 - 0.9e1 / 0.8e1 / delta2 * pow(delta1, -0.2e1) / z * c * mu1 * mu1 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / delta1 / z * mu1 * mu1 * mu2 + 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * c * c * mu1 - 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) / delta1 * pow(z, -0.2e1) * c * mu1 * mu1 - 0.9e1 / 0.4e1 / delta2 / delta1 / z * c * mu1 - 0.3e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * pow(c, 0.3e1) * mu1 - 0.3e1 / 0.16e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * c * pow(mu1, 0.3e1) + 0.9e1 / 0.32e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(z, -0.2e1) * c * c * mu1 * mu1 + 0.3e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * pow(c, 0.3e1) * mu2 - 0.3e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) / z * pow(mu1, 0.3e1) * mu2 - pow(delta2, -0.2e1) / delta1 * log(z) * c * mu2 * mu2 / 0.4e1 - 0.1e1 / delta2 / delta1 * log(z) * mu1 * mu2 / 0.2e1 + 0.1e1 / delta2 / delta1 * log(z) * c * mu2 / 0.2e1 - 0.11e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.13e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - 0.9e1 / 0.8e1 / delta2 / z * c + 0.9e1 / 0.8e1 / delta2 / z * mu1 + 0.9e1 / 0.32e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * mu1 * mu1 + 0.9e1 / 0.32e2 * pow(delta2, -0.2e1) * pow(z, -0.2e1) * c * c + 0.3e1 / 0.8e1 / delta2 * delta1 / z + 0.3e1 / 0.64e2 * pow(delta2, -0.2e1) * delta1 * delta1 * pow(z, -0.2e1) + pow(delta2, -0.2e1) * log(z) * mu2 * mu2 / 0.8e1 + 0.39e2 / 0.8e1 * pow(delta2, -0.2e1) / z * c * mu1 - 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * c + 0.19e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.5e1 / 0.4e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) - 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + 0.9e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.11e2 / 0.8e1 / delta1 / delta2 * log(z) * c * c + 0.15e2 / 0.8e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - 0.23e2 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.7e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) + 0.3e1 / 0.2e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.7e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2;

		
		case 11:	
				return -0.147e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 / 0.50e2 - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.48e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.11e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.23e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.49e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.193e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.66e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.168e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.39e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.243e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 + 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.51e2 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.23e2 / 0.10e2 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.23e2 / 0.10e2 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.7e1 / 0.10e2 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.23e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.143e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.7e1 / 0.10e2 / delta1 * delta2 / (-0.1e1 + z) - 0.23e2 / 0.10e2 / delta1 / (-0.1e1 + z) * c + 0.23e2 / 0.10e2 / delta1 / (-0.1e1 + z) * mu2;

						
		case 12:	
				return	-0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.6e1 / 0.5e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.189e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.57e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.3e1 / 0.25e2 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.3e1 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.153e3 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 + 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.7e1 / 0.25e2 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.7e1 / 0.25e2 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.3e1 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.3e1 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.3e1 / 0.50e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.3e1 / 0.50e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.7e1 / 0.25e2 / delta1 / (-0.1e1 + z) * c - 0.7e1 / 0.25e2 / delta1 / (-0.1e1 + z) * mu2;
			
									
		default:
			cout<<"This basic piece doesn't exist"; 
  }
  
}


double triangular_kernel_polynomial :: approx_DECS_second_moment_piece_value(double z, int piecenum)
{
// Expressions for pdf(z)
	
 if(fabs(z) < epsilon)	
	{
		z = tweak;
	}
	if(fabs(1-z) < epsilon)	
	{
		z = 1 - tweak;
	}


	switch (piecenum)
	{
		
		case 1:	
				return -pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.6e1 + 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * z + 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z - delta1 / delta2 * z / 0.2e1 - 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) * c * c * log(z) - 0.3e1 / 0.2e1 / delta2 * mu1 * z + 0.3e1 / 0.2e1 / delta2 * c * z + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * mu1 * mu1 * z + 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z - 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu1 * mu2 * z - delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.6e1 - 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + delta1 / delta2 * log(z) / 0.3e1 - 0.1e1 / delta2 * log(z) * c + 0.1e1 / delta2 * log(z) * mu1 - 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - pow(delta2, -0.2e1) / z * c * c - pow(delta2, -0.2e1) / z * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 - 0.1e1 / delta2 / delta1 * c * c * z - 0.2e1 * pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z + 0.3e1 / delta1 / delta2 * c * mu1 * z - 0.1e1 / delta1 / delta2 * c * mu2 * z - pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 / 0.2e1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z * c + 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z + 0.8e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z - 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 - 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * c * mu2 * z + 0.2e1 * pow(delta2, -0.2e1) * mu1 * mu2 * z - 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * c * mu1 * z + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z + 0.1e1 / delta1 / delta2 * z * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * z * c + 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z - pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.2e1 - 0.3e1 / 0.2e1 / delta1 / delta2 * mu1 * mu1 * z + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z + 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * z * mu1 - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 - 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.2e1 / delta1 / delta2 * log(z) * c * mu1 + 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 + 0.2e1 * pow(delta2, -0.2e1) / z * c * mu1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c + 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.7e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * c + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * c * mu1 * mu1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * mu1 * mu2 * mu2 * z / 0.6e1 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu2 + 0.7e1 * pow(delta2, -0.2e1) / delta1 * z * c * c * mu1 - 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * z - pow(delta2, -0.2e1) / delta1 * mu1 * mu2 * mu2 * z / 0.3e1;
			
		
		case 2:	
				return -0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z + 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z + 0.2e1 * pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z + pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu1 * mu2 * z - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 - 0.1e1 / delta1 / delta2 * c * mu1 * z + 0.1e1 / delta1 / delta2 * c * mu2 * z + pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 / 0.2e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z - 0.1e1 / delta1 / delta2 * z * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z / 0.3e1 + pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.2e1 + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 - 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.3e1 - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * c * mu1 * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * mu1 * mu2 * mu2 * z / 0.6e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu2 - 0.2e1 * pow(delta2, -0.2e1) / delta1 * z * c * c * mu1 + 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * z;

		
		case 3:	
				return 0.5e1 / 0.6e1 * delta2 / delta1 * z - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / 0.2e1 / delta1 * z * mu2 + 0.5e1 / 0.2e1 / delta1 * c * z + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * c * mu1 * z + 0.11e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z - 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z - 0.2e1 * pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z - 0.16e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu1 * mu2 * z + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.26e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 + 0.2e1 / delta2 / delta1 * c * c * z - 0.2e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z + 0.1e1 / delta1 / delta2 * c * mu1 * z - 0.5e1 / delta1 / delta2 * c * mu2 * z - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z - 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z * c + 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) + 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z + 0.5e1 / 0.2e1 / delta1 / delta2 * z * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z / 0.3e1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z - 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.11e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 + 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - pow(delta1, -0.2e1) * mu1 * mu1 * z / 0.6e1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * z * c * c - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - 0.28e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * z * c * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * z * mu1 * mu2 - 0.7e1 / 0.9e1 * delta2 * pow(delta1, -0.2e1) * z * c + 0.7e1 / 0.9e1 * delta2 * pow(delta1, -0.2e1) * z * mu1 - 0.20e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.5e1 / 0.3e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 - 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) - 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.3e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.3e1 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu1 * mu1 * mu2 * z / 0.3e1 + 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * c * mu1 * mu1 - pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * mu1 * mu2 * mu2 * z / 0.6e1 + 0.5e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu2 + 0.2e1 * pow(delta2, -0.2e1) / delta1 * z * c * c * mu1 - 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * z;

		
		case 4:	
				return z / 0.6e1 + pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.6e1 - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * z - 0.7e1 / 0.9e1 * delta2 / delta1 * z + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.7e1 / 0.3e1 / delta1 * z * mu2 - 0.8e1 / 0.3e1 / delta1 * c * z - 0.5e1 / 0.18e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z + 0.2e1 / 0.3e1 * delta1 / delta2 * z + 0.13e2 / 0.3e1 * pow(delta2, -0.2e1) * c * c * log(z) + 0.2e1 / delta2 * mu1 * z - 0.5e1 / 0.3e1 / delta2 * c * z - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * mu1 * mu1 * z - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * c * mu1 * z - 0.11e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z + 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z + pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z + 0.16e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu1 * mu2 * z - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + delta1 * delta1 * pow(delta2, -0.2e1) / z / 0.6e1 + 0.4e1 / 0.9e1 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - 0.5e1 / 0.9e1 * delta1 / delta2 * log(z) + 0.5e1 / 0.3e1 / delta2 * log(z) * c - 0.5e1 / 0.3e1 / delta2 * log(z) * mu1 + 0.8e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + pow(delta2, -0.2e1) / z * c * c + pow(delta2, -0.2e1) / z * mu1 * mu1 - 0.26e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 - 0.1e1 / delta2 / delta1 * c * c * z + 0.2e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z + 0.2e1 * pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z - 0.10e2 / 0.3e1 / delta1 / delta2 * c * mu1 * z + 0.16e2 / 0.3e1 / delta1 / delta2 * c * mu2 * z + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z + 0.16e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z * c - 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z - 0.8e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z + 0.16e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) - 0.8e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) + 0.4e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 + 0.26e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * c * mu2 * z - 0.2e1 * pow(delta2, -0.2e1) * mu1 * mu2 * z + 0.16e2 / 0.3e1 * pow(delta2, -0.2e1) * c * mu1 * z - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z - 0.7e1 / 0.3e1 / delta1 / delta2 * z * mu2 * mu2 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) / 0.3e1 + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * z * c - 0.10e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z + 0.2e1 / delta1 / delta2 * mu1 * mu1 * z - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z - 0.10e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * z * mu1 + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) - 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.7e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.11e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.2e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.14e2 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 - 0.11e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) - 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) + 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.14e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.7e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.28e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.10e2 / 0.3e1 / delta1 / delta2 * log(z) * c * mu1 - 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) + 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) - 0.14e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.31e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.1e1 / delta2 * mu2 * z / 0.3e1 + 0.1e1 / delta1 * mu1 * z / 0.3e1 + pow(delta1, -0.2e1) * mu1 * mu1 * z / 0.6e1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * z * c * c + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 + 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 - 0.14e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 + 0.28e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.10e2 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - 0.2e1 / 0.3e1 / delta2 / delta1 * mu1 * mu2 * z + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 - 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * z * c * mu2 + 0.7e1 / 0.3e1 * pow(delta1, -0.2e1) * z * mu1 * mu2 + 0.7e1 / 0.9e1 * delta2 * pow(delta1, -0.2e1) * z * c - 0.7e1 / 0.9e1 * delta2 * pow(delta1, -0.2e1) * z * mu1 + 0.20e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.13e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.14e2 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.14e2 / 0.3e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.14e2 / 0.9e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.2e1 * pow(delta2, -0.2e1) / z * c * mu1 + 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * c * c + 0.7e1 / 0.3e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.2e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.2e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) + 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) / 0.6e1 + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) / 0.6e1 + 0.19e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.7e1 / 0.9e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.7e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 - 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.5e1 / 0.3e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.14e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.14e2 / 0.3e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.5e1 / 0.3e1 / delta1 / delta2 * log(z) * c * c - 0.5e1 / 0.3e1 / delta1 / delta2 * log(z) * mu1 * mu1 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) + 0.4e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.22e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.14e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) - 0.31e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.16e2 / 0.9e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - 0.7e1 / 0.3e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.16e2 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.5e1 / 0.9e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + 0.7e1 / 0.9e1 / delta1 * delta2 / (-0.1e1 + z) + 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * c - 0.7e1 / 0.3e1 / delta1 / (-0.1e1 + z) * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu1 * mu1 * mu2 * z / 0.3e1 - 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * c * mu1 * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * mu1 * mu2 * mu2 * z / 0.6e1 - 0.5e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu2 - 0.7e1 * pow(delta2, -0.2e1) / delta1 * z * c * c * mu1 + 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * z + pow(delta2, -0.2e1) / delta1 * mu1 * mu2 * mu2 * z / 0.3e1;
		
		case 5:	
				return -pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.8e1 + 0.7e1 / 0.2e1 * pow(delta2, -0.2e1) * c * c * z + 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z - delta1 / delta2 * z / 0.2e1 - 0.17e2 / 0.4e1 * pow(delta2, -0.2e1) * c * c * log(z) - 0.3e1 / 0.2e1 / delta2 * mu1 * z + 0.3e1 / 0.2e1 / delta2 * c * z + 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * mu1 * mu1 * z + pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z - 0.3e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z - 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) + delta1 / delta2 * log(z) / 0.4e1 - 0.1e1 / delta2 * log(z) * c + 0.1e1 / delta2 * log(z) * mu1 - 0.11e2 / 0.4e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * c * c - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * mu1 * mu1 - 0.1e1 / delta2 / delta1 * c * c * z - 0.2e1 * pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z + 0.2e1 / delta1 / delta2 * c * mu1 * z + 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z / 0.4e1 - 0.15e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z - 0.15e2 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 - 0.7e1 / 0.4e1 * pow(delta2, -0.2e1) * c * mu2 * z + 0.2e1 * pow(delta2, -0.2e1) * mu1 * mu2 * z - 0.21e2 / 0.4e1 * pow(delta2, -0.2e1) * c * mu1 * z - 0.27e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * z * c + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z - 0.1e1 / delta1 / delta2 * mu1 * mu1 * z + 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z + 0.17e2 / 0.16e2 * delta1 * pow(delta2, -0.2e1) * z * mu1 - 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 + 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 + 0.6e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 - 0.2e1 / delta1 / delta2 * log(z) * c * mu1 + 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 + 0.9e1 / 0.4e1 * pow(delta2, -0.2e1) / z * c * mu1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) + 0.9e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) / z * c + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) - 0.9e1 / 0.16e2 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.7e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 + 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 - 0.3e1 / 0.2e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 + 0.1e1 / delta1 / delta2 * log(z) * c * c + 0.1e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) - 0.3e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) + 0.2e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c - 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 - 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 + 0.5e1 * pow(delta2, -0.2e1) / delta1 * z * c * c * mu1 - pow(delta2, -0.2e1) / delta1 * mu1 * mu2 * mu2 * z / 0.4e1;
					
		case 6:
				return -0.3e1 / 0.4e1 * delta2 / delta1 * z + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.2e1 / delta1 * z * mu2 - 0.5e1 / 0.2e1 / delta1 * c * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * mu1 * z - 0.23e2 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 + pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c - pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.13e2 / 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c - 0.4e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 + 0.2e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 - pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 + 0.4e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z - 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.8e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 - 0.2e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 - 0.2e1 / delta2 / delta1 * c * c * z + 0.2e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z + 0.4e1 / delta1 / delta2 * c * mu2 * z + 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.2e1 / delta1 / delta2 * z * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 + 0.10e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 - 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 + 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 - 0.4e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 + 0.8e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * z * c * c - 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 + 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * z * c * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * z * mu1 * mu2 + 0.3e1 / 0.4e1 * delta2 * pow(delta1, -0.2e1) * z * c - 0.3e1 / 0.4e1 * delta2 * pow(delta1, -0.2e1) * z * mu1 + 0.7e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 + 0.9e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c - 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) + 0.3e1 / 0.16e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) - 0.3e1 / 0.2e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) - 0.7e1 / 0.2e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) + 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 + 0.7e1 / 0.4e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c + 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c + 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) - 0.4e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) - 0.4e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c - 0.4e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.3e1 / 0.4e1 / delta1 * delta2 / (-0.1e1 + z) + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 - 0.4e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu2;
		
		case 7:
				return 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z + 0.5e1 / 0.6e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z - 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z - pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 / 0.2e1 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.2e1 + 0.5e1 / 0.6e1 * pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z - 0.5e1 / 0.6e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z - 0.1e1 / delta1 / delta2 * c * mu2 * z - pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 / 0.2e1 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * z * mu2 * mu2 / 0.2e1 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 / 0.2e1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 / 0.2e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 / 0.2e1 - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 / 0.2e1 + 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.35e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.65e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.2e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 + pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.2e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * c * c / 0.2e1 - 0.1e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 / 0.2e1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) / 0.6e1 + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) / 0.6e1 + pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) / 0.6e1 + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.1e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.2e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) / 0.3e1 + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu2 - 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * z;
		
		case 8:
				return 0.5e1 / 0.6e1 * delta2 / delta1 * z - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.5e1 / 0.2e1 / delta1 * z * mu2 + 0.5e1 / 0.2e1 / delta1 * c * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * c * mu1 * z + 0.65e2 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.65e2 / 0.18e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z + 0.5e1 / 0.6e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z - 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.5e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z + 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.5e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.25e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.5e1 / 0.2e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 + 0.5e1 / 0.2e1 / delta2 / delta1 * c * c * z - 0.5e1 / 0.2e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z + 0.5e1 / 0.6e1 * pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z - 0.5e1 / 0.6e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z - 0.5e1 / delta1 / delta2 * c * mu2 * z - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.2e1 / delta1 / delta2 * z * mu2 * mu2 - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) + 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.5e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.65e2 / 0.6e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 + 0.35e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.65e2 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.5e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 - 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * z * c * c - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 + 0.5e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.10e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 + 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * z * c * mu2 - 0.5e1 / 0.2e1 * pow(delta1, -0.2e1) * z * mu1 * mu2 - 0.5e1 / 0.6e1 * delta2 * pow(delta1, -0.2e1) * z * c + 0.5e1 / 0.6e1 * delta2 * pow(delta1, -0.2e1) * z * mu1 - 0.20e2 / 0.3e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.25e2 / 0.6e1 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.5e1 / 0.3e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.10e2 / 0.3e1 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.5e1 / 0.3e1 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.5e1 / 0.18e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) - 0.35e2 / 0.18e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.40e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 + 0.5e1 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.10e2 / 0.9e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.25e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) - 0.20e2 / 0.9e1 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.5e1 / 0.3e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.5e1 / 0.6e1 / delta1 * delta2 / (-0.1e1 + z) - 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * c + 0.5e1 / 0.2e1 / delta1 / (-0.1e1 + z) * mu2 + 0.5e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu2 - 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * z;
					
		case 9:
				return 0.3e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z + 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z - pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z / 0.2e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.4e1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu1 * mu2 * z + 0.3e1 / 0.2e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 + 0.1e1 / delta2 / delta1 * c * c * z / 0.2e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z / 0.2e1 + 0.3e1 / 0.4e1 * pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z - 0.23e2 / 0.32e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z - 0.1e1 / delta1 / delta2 * c * mu1 * z - 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z * c - 0.1e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z / 0.2e1 - 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z + 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z + 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 + 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 - 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z - 0.1e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z / 0.4e1 + pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z / 0.2e1 + 0.1e1 / delta1 / delta2 * mu1 * mu1 * z / 0.2e1 + 0.9e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 - 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.3e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.3e1 / 0.4e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - 0.11e2 / 0.8e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 + 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) + 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) / 0.4e1 - 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) / 0.4e1 + 0.1e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) / 0.4e1 - pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) / 0.4e1 - 0.49e2 / 0.16e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * c * mu1 * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * mu1 * mu2 * mu2 * z / 0.8e1 - 0.7e1 / 0.4e1 * pow(delta2, -0.2e1) / delta1 * z * c * c * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * z / 0.8e1;
		
		case 10:
				return z / 0.8e1 + pow(delta2, -0.2e1) * mu2 * mu2 * z / 0.8e1 - 0.49e2 / 0.16e2 * pow(delta2, -0.2e1) * c * c * z - 0.1e1 / delta1 * c * z / 0.4e1 - 0.7e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) * z + 0.5e1 / 0.8e1 * delta1 / delta2 * z + 0.3e1 * pow(delta2, -0.2e1) * c * c * log(z) + 0.15e2 / 0.8e1 / delta2 * mu1 * z - 0.13e2 / 0.8e1 / delta2 * c * z - 0.21e2 / 0.16e2 * pow(delta2, -0.2e1) * mu1 * mu1 * z - pow(delta1, -0.2e1) * c * mu1 * z / 0.4e1 + 0.3e1 / 0.8e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z + 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z - 0.11e2 / 0.8e1 * pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z + 0.13e2 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu2 * z + pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z / 0.2e1 - pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z / 0.4e1 + 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu1 * mu2 * z + 0.3e1 / 0.32e2 * delta1 * delta1 * pow(delta2, -0.2e1) / z + 0.5e1 / 0.16e2 * delta1 * delta1 * pow(delta2, -0.2e1) * log(z) - 0.3e1 / 0.8e1 * delta1 / delta2 * log(z) + 0.9e1 / 0.8e1 / delta2 * log(z) * c - 0.9e1 / 0.8e1 / delta2 * log(z) * mu1 + 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 + 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) / z * c * c + 0.9e1 / 0.16e2 * pow(delta2, -0.2e1) / z * mu1 * mu1 + 0.11e2 / 0.8e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 + 0.11e2 / 0.8e1 / delta2 / delta1 * c * c * z - 0.3e1 / 0.8e1 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z + 0.5e1 / 0.2e1 * pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z - 0.23e2 / 0.32e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z - 0.13e2 / 0.4e1 / delta1 / delta2 * c * mu1 * z + 0.1e1 / delta1 / delta2 * c * mu2 * z / 0.2e1 - 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * mu2 * z + 0.3e1 / 0.2e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z * c - 0.15e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * mu1 * mu1 * mu2 * z - 0.1e1 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z / 0.4e1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu1 * z + 0.9e1 / 0.2e1 / delta1 * pow(delta2, -0.2e1) * c * mu1 * mu1 * z + 0.3e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * c * log(z) * mu1 * mu1 + 0.6e1 / delta1 * pow(delta2, -0.2e1) * c * c * log(z) * mu1 + 0.13e2 / 0.8e1 * pow(delta2, -0.2e1) * c * mu2 * z - 0.15e2 / 0.8e1 * pow(delta2, -0.2e1) * mu1 * mu2 * z + 0.9e1 / 0.2e1 * pow(delta2, -0.2e1) * c * mu1 * z - 0.7e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(mu1, 0.4e1) * z + 0.3e1 / 0.2e1 * delta1 * pow(delta2, -0.2e1) * z * c - 0.7e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * pow(mu1, 0.3e1) * z + 0.5e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * pow(mu1, 0.3e1) * z + 0.15e2 / 0.8e1 / delta1 / delta2 * mu1 * mu1 * z - 0.5e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * mu2 * z - 0.7e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * z * mu1 + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * c * mu1 - 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * c * mu1 * mu1 + 0.9e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * c * mu1 * mu1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * c * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) * mu1 + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * c * mu2 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * c * mu1 - 0.39e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * c * mu1 * mu1 + 0.9e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu1 * mu2 + 0.9e1 / 0.4e1 / delta1 / delta2 * log(z) * c * mu1 - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu2 - 0.19e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) * mu1 - 0.13e2 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * pow(mu1, 0.3e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) * mu2 - 0.1e1 / delta2 * mu2 * z / 0.4e1 + 0.1e1 / delta1 * mu1 * z / 0.4e1 + pow(delta1, -0.2e1) * mu1 * mu1 * z / 0.8e1 + pow(delta1, -0.2e1) * z * c * c / 0.8e1 + 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * c * mu2 * mu1 - 0.9e1 / 0.8e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu1 * mu2 - 0.9e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * c * mu1 * mu2 - 0.1e1 / delta2 / delta1 * mu1 * mu2 * z / 0.2e1 - 0.11e2 / 0.8e1 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) / z * c * mu1 + 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * c - 0.3e1 / 0.8e1 / delta1 * pow(delta2, -0.2e1) / z * pow(c, 0.3e1) + 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) / z * mu1 + 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(mu1, 0.4e1) + 0.3e1 / 0.32e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / z * pow(c, 0.4e1) - 0.39e2 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * c * mu1 - 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * c * mu2 + 0.9e1 / 0.8e1 * pow(delta2, -0.2e1) * log(z) * mu1 * mu2 - 0.9e1 / 0.8e1 / delta1 / delta2 * log(z) * c * c - 0.9e1 / 0.8e1 / delta1 / delta2 * log(z) * mu1 * mu1 + 0.5e1 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.4e1) + 0.11e2 / 0.16e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(z) * pow(c, 0.4e1) + 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(c, 0.3e1) - 0.19e2 / 0.8e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(c, 0.3e1) + 0.5e1 / 0.4e1 / delta1 * pow(delta2, -0.2e1) * log(z) * pow(mu1, 0.3e1) - 0.3e1 / 0.8e1 * pow(delta1, -0.2e1) / delta2 * log(z) * pow(mu1, 0.3e1) - 0.13e2 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * c + 0.5e1 / 0.4e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu1 + 0.3e1 / 0.8e1 * delta1 * pow(delta2, -0.2e1) * log(z) * mu2 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * mu1 * mu1 * mu2 * z / 0.4e1 - 0.49e2 / 0.16e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * z * c * c * mu1 * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * mu1 * mu1 * mu2 * mu2 * z / 0.8e1 - 0.1e1 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu2 / 0.4e1 - 0.49e2 / 0.8e1 * pow(delta2, -0.2e1) / delta1 * z * c * c * mu1 + pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * z / 0.8e1 + pow(delta2, -0.2e1) / delta1 * mu1 * mu2 * mu2 * z / 0.4e1;
		
		case 11:	
				return 0.7e1 / 0.10e2 * delta2 / delta1 * z - 0.99e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c - 0.23e2 / 0.10e2 / delta1 * z * mu2 - 0.23e2 / 0.25e2 * pow(delta1, -0.2e1) * z * mu2 * mu2 + 0.23e2 / 0.10e2 / delta1 * c * z + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * c * mu1 * z + 0.191e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 + 0.48e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * mu2 - 0.7e1 / 0.10e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu1 - 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * c + 0.3e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * pow(-0.1e1 + z, -0.2e1) * mu2 + 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 - 0.71e2 / 0.50e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * c + 0.53e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 / (-0.1e1 + z) * mu2 - 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu2 + 0.153e3 / 0.50e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z + 0.27e2 / 0.50e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z - 0.27e2 / 0.10e2 * pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z - 0.19e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * c + 0.7e1 / 0.5e1 * pow(delta1, -0.2e1) * delta2 * log(fabs(-0.1e1 + z)) * mu1 - 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z + 0.101e3 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.97e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 - 0.101e3 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 + 0.36e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.93e2 / 0.50e2 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 + 0.5e1 / 0.2e1 / delta2 / delta1 * c * c * z - 0.143e3 / 0.50e2 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z + 0.9e1 / 0.10e2 * pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z - 0.9e1 / 0.10e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z - 0.5e1 / delta1 / delta2 * c * mu2 * z - 0.243e3 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 + 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z + 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) + 0.234e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.27e2 / 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / 0.2e1 / delta1 / delta2 * z * mu2 * mu2 + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * z * pow(mu2, 0.3e1) - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu2, 0.4e1) + 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.27e2 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 - 0.33e2 / 0.10e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.93e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.51e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.5e1 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.27e2 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.27e2 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.141e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.10e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.117e3 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.63e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.147e3 / 0.50e2 * pow(delta1, -0.2e1) * z * c * c - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 + 0.93e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.186e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 + 0.193e3 / 0.50e2 * pow(delta1, -0.2e1) * z * c * mu2 - 0.101e3 / 0.50e2 * pow(delta1, -0.2e1) * z * mu1 * mu2 + 0.7e1 / 0.25e2 * delta2 * pow(delta1, -0.2e1) * z * mu2 - 0.49e2 / 0.50e2 * delta2 * pow(delta1, -0.2e1) * z * c + 0.7e1 / 0.10e2 * delta2 * pow(delta1, -0.2e1) * z * mu1 - 0.73e2 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * c + 0.23e2 / 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * c - 0.23e2 / 0.5e1 / delta1 * log(fabs(-0.1e1 + z)) * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * delta2 * log(fabs(-0.1e1 + z)) - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) * delta2 * delta2 * pow(-0.1e1 + z, -0.2e1) + 0.7e1 / 0.5e1 / delta1 * delta2 * log(fabs(-0.1e1 + z)) + 0.2e1 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * delta2 * delta2 / (-0.1e1 + z) - 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * mu2 * mu2 - 0.24e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.5e1 / 0.2e1 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) + 0.43e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.9e1 / 0.10e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.17e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.5e1 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.36e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.109e3 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.9e1 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.9e1 / 0.5e1 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.7e1 / 0.10e2 / delta1 * delta2 / (-0.1e1 + z) - 0.23e2 / 0.10e2 / delta1 / (-0.1e1 + z) * c + 0.23e2 / 0.10e2 / delta1 / (-0.1e1 + z) * mu2 + 0.168e3 / 0.25e2 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu2 - 0.189e3 / 0.50e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * z;

						
		case 12:	return 0.7e1 / 0.25e2 / delta1 * z * mu2 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * z * mu2 * mu2 - 0.7e1 / 0.25e2 / delta1 * c * z - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * c * mu1 * z - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * c * mu1 - 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu1 * mu2 + 0.153e3 / 0.50e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu2 * z + 0.27e2 / 0.50e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.3e1) * mu1 * z - 0.81e2 / 0.50e2 * pow(delta2, -0.2e1) / delta1 * c * c * mu2 * z - 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * c * mu1 * mu2 * z + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * c * mu1 * mu2 * mu2 * z - 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 + 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 + 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * mu2 - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu2 + 0.3e1 / 0.50e2 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu1 + 0.3e1 / 0.50e2 / delta2 / delta1 * c * c * z - 0.7e1 / 0.10e2 / delta2 * pow(delta1, -0.2e1) * pow(c, 0.3e1) * z + 0.27e2 / 0.50e2 * pow(delta2, -0.2e1) / delta1 * pow(c, 0.3e1) * z - 0.9e1 / 0.10e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * pow(c, 0.4e1) * z - 0.3e1 / 0.25e2 / delta1 / delta2 * c * mu2 * z - 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * z * c * mu2 * mu2 + 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * z * mu1 * mu2 * mu2 + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * c * mu2 * mu2 * z + 0.99e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * c * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * mu1 * pow(mu2, 0.3e1) + 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * mu2 * c * c * log(fabs(-0.1e1 + z)) - 0.27e2 / 0.5e1 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * mu2 * mu2 * log(fabs(-0.1e1 + z)) * c * c + 0.3e1 / 0.50e2 / delta1 / delta2 * z * mu2 * mu2 + 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.4e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) * z * pow(mu2, 0.3e1) + 0.16e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * z * pow(mu2, 0.3e1) - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * z * pow(mu2, 0.4e1) + 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * c * mu1 - 0.81e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu2 * mu2 + 0.3e1 / 0.10e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu2 * mu2 - 0.3e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * mu1 * mu2 * mu2 + 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 - 0.21e2 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * c * mu2 * mu2 + 0.3e1 / 0.25e2 / delta1 / delta2 / (-0.1e1 + z) * c * mu2 - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu2 + 0.9e1 / 0.10e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * pow(mu2, 0.3e1) + 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * mu1 * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) * mu1 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) * mu2 - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * c * mu2 * mu2 + 0.18e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * c * pow(mu2, 0.3e1) - 0.81e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 + 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * c * mu1 + 0.81e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 - 0.78e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 * mu2 + 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * mu1 * mu2 * mu2 - 0.6e1 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * mu2 + 0.117e3 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu2 + 0.63e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * pow(mu2, 0.3e1) - 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * mu1 * pow(mu2, 0.3e1) + 0.27e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) * mu1 - 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * mu1 * mu2 * mu2 + 0.81e2 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * c * c * mu2 * mu1 + 0.3e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * c * mu1 * mu2 - 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * c * mu2 * mu1 + 0.81e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 * mu2 - 0.6e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * c * mu1 * mu2 - 0.81e2 / 0.50e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * z * mu1 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * z * c * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) * z * mu1 * mu2 + 0.7e1 / 0.25e2 * pow(delta1, -0.2e1) / (-0.1e1 + z) * mu2 * mu2 - 0.14e2 / 0.25e2 / delta1 * log(fabs(-0.1e1 + z)) * c + 0.14e2 / 0.25e2 / delta1 * log(fabs(-0.1e1 + z)) * mu2 - 0.14e2 / 0.25e2 * pow(delta1, -0.2e1) * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.3e1 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * c * c - 0.3e1 / 0.50e2 / delta1 / delta2 / (-0.1e1 + z) * mu2 * mu2 - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.4e1) - 0.9e1 / 0.50e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.4e1) + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(c, 0.3e1) + 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.2e1 / 0.25e2 * pow(delta1, -0.2e1) / delta2 / (-0.1e1 + z) * pow(mu2, 0.3e1) - 0.27e2 / 0.50e2 / delta1 * pow(delta2, -0.2e1) / (-0.1e1 + z) * pow(c, 0.3e1) - 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(c, 0.3e1) + 0.7e1 / 0.50e2 * pow(delta1, -0.2e1) / delta2 * pow(-0.1e1 + z, -0.2e1) * pow(mu2, 0.3e1) + 0.3e1 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * c * c + 0.3e1 / 0.25e2 / delta1 / delta2 * log(fabs(-0.1e1 + z)) * mu2 * mu2 - 0.9e1 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.4e1) - 0.36e2 / 0.25e2 * pow(delta1, -0.2e1) * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.4e1) - 0.28e2 / 0.25e2 * pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) - 0.27e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + pow(delta1, -0.2e1) / delta2 * log(fabs(-0.1e1 + z)) * pow(mu2, 0.3e1) + 0.27e2 / 0.25e2 / delta1 * pow(delta2, -0.2e1) * log(fabs(-0.1e1 + z)) * pow(c, 0.3e1) + 0.7e1 / 0.25e2 / delta1 / (-0.1e1 + z) * c - 0.7e1 / 0.25e2 / delta1 / (-0.1e1 + z) * mu2 + 0.51e2 / 0.25e2 / delta2 * pow(delta1, -0.2e1) * c * c * z * mu2 - 0.189e3 / 0.50e2 * pow(delta2, -0.2e1) * pow(delta1, -0.2e1) * c * c * mu2 * mu2 * z;				
									
		default:
			cout<<"This basic piece doesn't exist"; 
  }
  
}

